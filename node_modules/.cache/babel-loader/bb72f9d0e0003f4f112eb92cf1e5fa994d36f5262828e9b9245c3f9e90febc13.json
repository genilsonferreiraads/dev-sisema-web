{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genil\\\\Desktop\\\\sistema da imperio\\\\src\\\\components\\\\AudioPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { audioService } from '../lib/supabase';\nimport { supabase } from '../lib/supabase';\nimport '../styles/animations.css';\nimport TextToSpeech from './TextToSpeech';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  onEnded,\n  isPlaying,\n  setIsPlaying\n}) => {\n  _s();\n  var _audioRef$current3, _audioRef$current4, _audios$find;\n  const [audios, setAudios] = useState([]);\n  const [currentAudio, setCurrentAudio] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const audioRef = useRef(null);\n  const [audioTimers, setAudioTimers] = useState({});\n  const timersRef = useRef({});\n  const [timerAudioId, setTimerAudioId] = useState(null);\n  const [pendingAudioId, setPendingAudioId] = useState(null);\n  const [pendingAudios, setPendingAudios] = useState([]);\n  const playAttemptRef = useRef(null);\n  const [editingAudioId, setEditingAudioId] = useState(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [showConfirmDialog, setShowConfirmDialog] = useState(null);\n  const [showTimerDialog, setShowTimerDialog] = useState(null);\n  const [popupPosition, setPopupPosition] = useState(null);\n  const [confirmPosition, setConfirmPosition] = useState(null);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [timerInputValue, setTimerInputValue] = useState('');\n  const [preferences, setPreferences] = useState({});\n  const [playAttempts, setPlayAttempts] = useState(0);\n  const MAX_PLAY_ATTEMPTS = 3;\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(null);\n  const [deletePosition, setDeletePosition] = useState(null);\n  const canvasRef = useRef(null);\n  const analyserRef = useRef(null);\n  const animationRef = useRef(null);\n  const isPlayingRef = useRef(false);\n  const endTimeRefs = useRef({});\n  const [showTextToSpeech, setShowTextToSpeech] = useState(false);\n  useEffect(() => {\n    const loadInitialAudios = async () => {\n      try {\n        const data = await audioService.getAudios();\n        setAudios(data);\n\n        // Carrega as preferências para cada áudio\n        data.forEach(audio => {\n          loadAudioPreferences(audio.id);\n        });\n      } catch (error) {\n        console.error('Erro ao carregar áudios:', error);\n      }\n    };\n    loadInitialAudios();\n  }, []);\n  const loadAudioSafely = async (audioElement, url) => {\n    return new Promise((resolve, reject) => {\n      const loadHandler = () => {\n        audioElement.removeEventListener('canplaythrough', loadHandler);\n        audioElement.removeEventListener('error', errorHandler);\n        resolve();\n      };\n      const errorHandler = e => {\n        audioElement.removeEventListener('canplaythrough', loadHandler);\n        audioElement.removeEventListener('error', errorHandler);\n        reject(e);\n      };\n      audioElement.addEventListener('canplaythrough', loadHandler);\n      audioElement.addEventListener('error', errorHandler);\n      audioElement.src = url;\n      audioElement.load();\n    });\n  };\n  const loadAudios = async () => {\n    try {\n      const data = await audioService.getAudios();\n      setAudios(data);\n\n      // Carrega as preferências para cada áudio\n      data.forEach(audio => {\n        loadAudioPreferences(audio.id);\n      });\n    } catch (error) {\n      console.error('Erro ao carregar áudios:', error);\n    }\n  };\n  const loadAudioPreferences = async audioId => {\n    try {\n      const prefs = await audioService.loadPreferences(audioId);\n      if (prefs.auto_repeat && prefs.timer_end_at) {\n        const endTime = new Date(prefs.timer_end_at).getTime();\n        const now = Date.now();\n        const timeLeft = Math.max(0, Math.floor((endTime - now) / 1000));\n\n        // Se ainda há tempo restante ou se acabou de terminar\n        if (timeLeft >= 0) {\n          const interval = prefs.repeat_interval * 60;\n\n          // Se o timer acabou de terminar, cria um novo ciclo\n          if (timeLeft === 0) {\n            const newEndTime = new Date(Date.now() + interval * 1000).toISOString();\n\n            // Atualiza o endTime no banco\n            await audioService.updatePreferences(audioId, {\n              ...prefs,\n              timer_end_at: newEndTime\n            });\n\n            // Inicia novo ciclo com o novo endTime\n            startNewTimerCycle(audioId, interval, newEndTime);\n          } else {\n            // Continua o ciclo atual com o tempo restante\n            startNewTimerCycle(audioId, interval, prefs.timer_end_at);\n          }\n        } else {\n          // Se o timer expirou há muito tempo, desativa-o\n          await audioService.updatePreferences(audioId, {\n            auto_repeat: false,\n            repeat_interval: 0,\n            timer_end_at: undefined\n          });\n        }\n      }\n\n      // Atualiza as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          auto_repeat: prefs.auto_repeat || false,\n          repeat_interval: prefs.repeat_interval || 0,\n          last_played_at: prefs.last_played_at,\n          play_count: prefs.play_count || 0\n        }\n      }));\n    } catch (error) {\n      // Mantém o erro silencioso\n    }\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const progress = audioRef.current.currentTime / audioRef.current.duration * 100;\n      setProgress(progress);\n    }\n  };\n  const handleProgressClick = e => {\n    if (audioRef.current) {\n      const bounds = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - bounds.left;\n      const width = bounds.width;\n      const percentage = x / width;\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\n    }\n  };\n  const startNewTimerCycle = (audioId, interval, existingEndTime) => {\n    endTimeRefs.current[audioId] = existingEndTime || new Date(Date.now() + interval * 1000).toISOString();\n    const initialTimeLeft = Math.max(0, Math.floor((new Date(endTimeRefs.current[audioId]).getTime() - Date.now()) / 1000));\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n    }\n    let attemptCount = 0;\n    const MAX_ATTEMPTS = 3;\n    const createNewCycle = async () => {\n      try {\n        if (isPlayingRef.current) {\n          if (attemptCount < MAX_ATTEMPTS) {\n            attemptCount++;\n            setTimeout(() => createNewCycle(), 1000);\n          } else {\n            isPlayingRef.current = false;\n          }\n          return;\n        }\n        isPlayingRef.current = true;\n        attemptCount = 0;\n        const audioData = await audioService.getAudio(audioId);\n        if (!audioData) {\n          isPlayingRef.current = false;\n          return;\n        }\n\n        // Primeiro atualiza as preferências\n        const newEndTime = new Date(Date.now() + interval * 1000).toISOString();\n        await audioService.updatePreferences(audioId, {\n          auto_repeat: true,\n          repeat_interval: interval / 60,\n          timer_end_at: newEndTime\n        });\n        endTimeRefs.current[audioId] = newEndTime;\n\n        // Depois prepara o áudio\n        if (audioRef.current) {\n          const audioElement = audioRef.current;\n          audioElement.src = audioData.url;\n          audioElement.currentTime = 0;\n\n          // Aguarda o áudio estar pronto\n          await new Promise(resolve => {\n            audioElement.addEventListener('canplay', resolve, {\n              once: true\n            });\n          });\n          setCurrentAudio(audioData);\n          setIsPlaying(true);\n          try {\n            await audioElement.play();\n          } catch (error) {\n            isPlayingRef.current = false;\n            setIsPlaying(false);\n            return;\n          }\n        }\n\n        // Libera para próxima reprodução quando este áudio terminar\n        if (audioRef.current) {\n          const audioElement = audioRef.current;\n          audioElement.addEventListener('ended', () => {\n            isPlayingRef.current = false;\n            setIsPlaying(false);\n          }, {\n            once: true\n          });\n        }\n      } catch (error) {\n        isPlayingRef.current = false;\n        setIsPlaying(false);\n      }\n    };\n    const intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const timerEndTime = new Date(endTimeRefs.current[audioId]).getTime();\n      const newTimeLeft = Math.max(0, Math.floor((timerEndTime - currentTime) / 1000));\n      if (newTimeLeft === 0 && !isPlayingRef.current) {\n        createNewCycle();\n      }\n      setAudioTimers(prev => ({\n        ...prev,\n        [audioId]: {\n          interval,\n          timeLeft: newTimeLeft,\n          intervalId,\n          endTime: endTimeRefs.current[audioId]\n        }\n      }));\n    }, 1000);\n    timersRef.current[audioId] = intervalId;\n    setAudioTimers(prev => ({\n      ...prev,\n      [audioId]: {\n        interval,\n        timeLeft: initialTimeLeft,\n        intervalId,\n        endTime: endTimeRefs.current[audioId]\n      }\n    }));\n    if (initialTimeLeft === 0) {\n      createNewCycle();\n    }\n    return intervalId;\n  };\n  const togglePlay = async audio => {\n    if (isLoading) return; // Evita múltiplas chamadas durante o carregamento\n\n    try {\n      setIsLoading(true);\n\n      // Se clicou em um áudio diferente do atual\n      if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) !== audio.id) {\n        // Para o áudio atual se estiver tocando\n        if (audioRef.current) {\n          const currentAudioElement = audioRef.current;\n          // Remove todos os event listeners antigos\n          currentAudioElement.removeEventListener('ended', handleAudioEnd);\n          currentAudioElement.pause();\n          currentAudioElement.currentTime = 0;\n          isPlayingRef.current = false;\n          setIsPlaying(false);\n          window.dispatchEvent(new Event('audioStop'));\n\n          // Limpa o src e aguarda\n          currentAudioElement.src = '';\n          await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        // Define o novo áudio\n        setCurrentAudio(audio);\n        if (audioRef.current) {\n          const audioElement = audioRef.current;\n          try {\n            // Carrega o novo áudio de forma segura\n            await loadAudioSafely(audioElement, audio.url);\n\n            // Inicia a reprodução\n            isPlayingRef.current = true;\n            setIsPlaying(true);\n            window.dispatchEvent(new Event('audioPlay'));\n            await audioElement.play();\n\n            // Adiciona listener para o fim do áudio\n            audioElement.addEventListener('ended', handleAudioEnd, {\n              once: true\n            });\n          } catch (error) {\n            console.error('Erro ao reproduzir áudio:', error);\n            isPlayingRef.current = false;\n            setIsPlaying(false);\n            window.dispatchEvent(new Event('audioStop'));\n          }\n        }\n      } else {\n        // Mesmo áudio - alterna play/pause\n        if (audioRef.current) {\n          const audioElement = audioRef.current;\n          if (isPlayingRef.current) {\n            isPlayingRef.current = false;\n            setIsPlaying(false);\n            window.dispatchEvent(new Event('audioStop'));\n            await audioElement.pause();\n          } else {\n            try {\n              window.dispatchEvent(new Event('audioPlay'));\n              await audioElement.play();\n              isPlayingRef.current = true;\n              setIsPlaying(true);\n            } catch (error) {\n              console.error('Erro ao reproduzir áudio:', error);\n              isPlayingRef.current = false;\n              setIsPlaying(false);\n              window.dispatchEvent(new Event('audioStop'));\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Erro ao alternar reprodução:', error);\n      isPlayingRef.current = false;\n      setIsPlaying(false);\n      window.dispatchEvent(new Event('audioStop'));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleAudioEnd = () => {\n    try {\n      isPlayingRef.current = false;\n      setIsPlaying(false);\n      if (audioRef.current) {\n        const audioElement = audioRef.current;\n        audioElement.currentTime = 0;\n      }\n      window.dispatchEvent(new Event('audioStop'));\n      onEnded === null || onEnded === void 0 ? void 0 : onEnded();\n    } catch (error) {\n      console.error('Erro ao finalizar áudio:', error);\n    }\n  };\n\n  // Cleanup function\n  useEffect(() => {\n    return () => {\n      // Limpa todos os timers ao desmontar\n      Object.values(timersRef.current).forEach(timerId => {\n        if (timerId) clearInterval(timerId);\n      });\n\n      // Para o áudio e limpa referências\n      if (audioRef.current) {\n        const cleanup = async () => {\n          try {\n            const audio = audioRef.current;\n            if (!audio) return;\n\n            // Remove todos os event listeners\n            audio.removeEventListener('ended', handleAudioEnd);\n\n            // Para a reprodução e limpa\n            audio.pause();\n            audio.src = '';\n            audio.load();\n            isPlayingRef.current = false;\n            window.dispatchEvent(new Event('audioStop'));\n          } catch (error) {\n            console.error('Erro ao limpar áudio:', error);\n          }\n        };\n        cleanup();\n      }\n    };\n  }, []);\n  const handleUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    setIsUploading(true);\n    try {\n      console.log('Iniciando upload do arquivo:', file.name);\n\n      // Upload do arquivo\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${Math.random()}.${fileExt}`;\n      const filePath = `audios/${fileName}`;\n      console.log('Tentando fazer upload para:', filePath);\n      const {\n        data: uploadData,\n        error: uploadError\n      } = await supabase.storage.from('media').upload(filePath, file);\n      if (uploadError) {\n        console.error('Erro no upload:', uploadError);\n        throw uploadError;\n      }\n      console.log('Upload bem sucedido:', uploadData);\n\n      // Obtém a URL pública\n      const {\n        data: {\n          publicUrl\n        }\n      } = supabase.storage.from('media').getPublicUrl(filePath);\n      console.log('URL pública gerada:', publicUrl);\n\n      // Adiciona ao banco de dados\n      const newAudio = await audioService.addAudio({\n        title: file.name,\n        url: publicUrl,\n        auto_repeat: false,\n        repeat_interval: 0,\n        play_count: 0\n      });\n      console.log('Áudio adicionado ao banco:', newAudio);\n\n      // Recarrega todos os áudios\n      await loadAudios();\n\n      // Seleciona o novo áudio\n      setCurrentAudio(newAudio);\n\n      // Limpa o input\n      event.target.value = '';\n    } catch (error) {\n      console.error('Erro detalhado no upload:', error);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const startRepeatTimer = async (audioId, minutes) => {\n    setTimerAudioId(audioId);\n    const seconds = minutes * 60;\n\n    // Inicia o novo ciclo do timer\n    startNewTimerCycle(audioId, seconds);\n\n    // Calcula o tempo de término\n    const endTime = new Date(Date.now() + seconds * 1000).toISOString();\n\n    // Salva as preferências no banco\n    try {\n      const prefs = {\n        auto_repeat: true,\n        repeat_interval: minutes,\n        timer_end_at: endTime\n      };\n      await audioService.updatePreferences(audioId, prefs);\n\n      // Atualiza também as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          ...prev[audioId],\n          auto_repeat: true,\n          repeat_interval: minutes\n        }\n      }));\n      console.log(`Timer salvo para ${audioId} com intervalo de ${minutes}min`);\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n  const stopRepeatTimer = async audioId => {\n    // Não para o timer se o áudio estiver tocando\n    if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId && isPlaying) {\n      return;\n    }\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n      delete timersRef.current[audioId];\n    }\n    setAudioTimers(prev => {\n      const newTimers = {\n        ...prev\n      };\n      delete newTimers[audioId];\n      return newTimers;\n    });\n    try {\n      const prefs = {\n        auto_repeat: false,\n        repeat_interval: 0,\n        timer_end_at: undefined\n      };\n      await audioService.updatePreferences(audioId, prefs);\n\n      // Atualiza também as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          ...prev[audioId],\n          auto_repeat: false,\n          repeat_interval: 0\n        }\n      }));\n      console.log(`Timer removido para ${audioId}`);\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n  const handleDelete = async audioId => {\n    try {\n      var _fileUrl$split$;\n      const audioToDelete = audios.find(a => a.id === audioId);\n      if (!audioToDelete) return;\n      const fileUrl = audioToDelete.url;\n      const fileName = (_fileUrl$split$ = fileUrl.split('/audios/')[1]) === null || _fileUrl$split$ === void 0 ? void 0 : _fileUrl$split$.split('?')[0];\n      if (fileName) {\n        console.log('Tentando remover arquivo:', fileName);\n        try {\n          // Primeira tentativa de remoção\n          const {\n            error: storageError\n          } = await supabase.storage.from('media').remove([`audios/${fileName}`]);\n          if (storageError) {\n            console.error('Erro ao remover arquivo:', storageError);\n\n            // Se falhar, espera um momento e tenta novamente\n            await new Promise(resolve => setTimeout(resolve, 1000));\n\n            // Segunda tentativa\n            await supabase.storage.from('media').remove([`audios/${fileName}`]);\n          }\n\n          // Verifica se o arquivo ainda existe\n          const {\n            data: files\n          } = await supabase.storage.from('media').list('audios', {\n            search: fileName\n          });\n          console.log('Verificação após remoção:', files);\n        } catch (storageError) {\n          console.error('Erro ao acessar storage:', storageError);\n        }\n      }\n\n      // Remove o registro do banco de dados\n      await audioService.deleteAudio(audioId);\n\n      // Atualiza estados locais\n      if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId) {\n        setCurrentAudio(null);\n        setIsPlaying(false);\n      }\n      if (audioTimers[audioId]) {\n        await stopRepeatTimer(audioId);\n      }\n      setPreferences(prev => {\n        const newPrefs = {\n          ...prev\n        };\n        delete newPrefs[audioId];\n        return newPrefs;\n      });\n\n      // Força uma atualização da lista de arquivos no storage\n      const {\n        data: updatedFiles\n      } = await supabase.storage.from('media').list('audios');\n      console.log('Lista atualizada de arquivos:', updatedFiles);\n\n      // Recarrega a lista de áudios\n      await loadAudios();\n      console.log('Áudio removido com sucesso:', audioId);\n    } catch (error) {\n      console.error('Erro ao deletar áudio:', error);\n      try {\n        await loadAudios();\n      } catch (e) {\n        console.error('Erro ao recarregar áudios após falha:', e);\n      }\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Adicione esta função auxiliar para formatar o tempo do timer\n  const formatTimeLeft = seconds => {\n    if (seconds < 60) {\n      return `${Math.ceil(seconds)}s`;\n    }\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.ceil(seconds % 60);\n    return `${minutes}min ${remainingSeconds}s`;\n  };\n\n  // Modifique a função getNextAudioInfo para verificar os timers ativos\n  const getNextAudioInfo = () => {\n    // Primeiro, verifica se há algum áudio pendente na fila\n    if (pendingAudios.length > 0) {\n      const nextAudioId = pendingAudios[0];\n      const nextAudio = audios.find(a => a.id === nextAudioId);\n      const timer = audioTimers[nextAudioId];\n      return {\n        nextAudio,\n        timer\n      };\n    }\n\n    // Se não há áudios pendentes, procura o próximo áudio agendado\n    let nextScheduledAudio = null;\n    let shortestTime = Infinity;\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      if (timer.timeLeft < shortestTime) {\n        const audio = audios.find(a => a.id === audioId);\n        if (audio) {\n          nextScheduledAudio = {\n            nextAudio: audio,\n            timer: timer\n          };\n          shortestTime = timer.timeLeft;\n        }\n      }\n    });\n    return nextScheduledAudio;\n  };\n  const handleUpdateTitle = async (audioId, newTitle) => {\n    try {\n      await audioService.updateAudio(audioId, {\n        title: newTitle\n      });\n      // Atualiza o estado local dos áudios\n      setAudios(prev => prev.map(audio => audio.id === audioId ? {\n        ...audio,\n        title: newTitle\n      } : audio));\n      // Se o áudio sendo editado é o atual, atualiza também o currentAudio\n      if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId) {\n        setCurrentAudio(prev => prev ? {\n          ...prev,\n          title: newTitle\n        } : null);\n      }\n      setEditingAudioId(null);\n    } catch (error) {\n      console.error('Erro ao atualizar título:', error);\n    }\n  };\n  const ConfirmDialog = ({\n    audioId,\n    onConfirm,\n    onEdit,\n    onCancel,\n    buttonPosition\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50\",\n    onClick: e => {\n      if (e.target === e.currentTarget) onCancel();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\",\n      style: {\n        top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n        left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n        transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n        opacity: isAnimating ? 0 : 1,\n        transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-[#e1aa1e] font-medium text-sm mb-2\",\n        children: \"Gerenciar Repeti\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300 text-xs mb-4\",\n        children: \"Escolha uma das op\\xE7\\xF5es para editar a repeti\\xE7\\xE3o autom\\xE1tica:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onCancel,\n          className: \"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onEdit,\n          className: \"px-3 py-1.5 rounded bg-[#e1aa1e]/20 text-xs text-[#e1aa1e] hover:bg-[#e1aa1e]/30 transition-colors\",\n          children: \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onConfirm,\n          className: \"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors\",\n          children: \"Desativar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 732,\n    columnNumber: 5\n  }, this);\n  const SetTimerDialog = ({\n    audioId,\n    audioTitle,\n    onConfirm,\n    onCancel,\n    buttonPosition,\n    inputValue,\n    onInputChange\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50\",\n    onClick: e => {\n      if (e.target === e.currentTarget) onCancel();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\",\n      style: {\n        top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n        left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n        transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n        opacity: isAnimating ? 0 : 1,\n        transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-[#e1aa1e] font-medium text-sm mb-2\",\n        children: \"Repetir \\xC1udio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300 text-xs mb-3 truncate\",\n        children: audioTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          value: inputValue,\n          onChange: e => onInputChange(e.target.value),\n          placeholder: \"00\",\n          className: \"w-full px-3 py-2 bg-[#1e1e1e] border border-[#404040] rounded text-gray-200 text-center focus:border-[#e1aa1e] focus:outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none pr-12\",\n          onKeyDown: e => {\n            if (e.key === 'Enter') {\n              const value = parseInt(inputValue);\n              if (value > 0) onConfirm(value);\n            } else if (e.key === 'Escape') {\n              onCancel();\n            }\n          },\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"absolute right-3 top-1/2 -translate-y-1/2 text-xs text-gray-400\",\n          children: \"minutos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onCancel,\n          className: \"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const value = parseInt(inputValue);\n            if (value > 0) onConfirm(value);\n          },\n          disabled: !inputValue || parseInt(inputValue) <= 0,\n          className: \"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",\n          children: \"Ativar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 790,\n    columnNumber: 5\n  }, this);\n  const handleShowTimerDialog = (e, audioId) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setPopupPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2\n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowTimerDialog(audioId);\n    }, 10);\n  };\n  const handleShowConfirmDialog = (e, audioId) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setConfirmPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2\n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowConfirmDialog(audioId);\n    }, 10);\n  };\n\n  // Adicione este useEffect para gerenciar a seleção de texto\n  useEffect(() => {\n    const style = document.createElement('style');\n    style.innerHTML = `\n      .dragging * {\n        user-select: none !important;\n        -webkit-user-select: none !important;\n        cursor: grabbing !important;\n      }\n    `;\n    document.head.appendChild(style);\n    return () => style.remove();\n  }, []);\n  const DeleteConfirmDialog = ({\n    audioId,\n    onConfirm,\n    onCancel,\n    buttonPosition\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50\",\n    onClick: e => {\n      if (e.target === e.currentTarget) onCancel();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\",\n      style: {\n        top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n        left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n        transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n        opacity: isAnimating ? 0 : 1,\n        transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-red-500 font-medium text-sm mb-2\",\n        children: \"Confirmar Exclus\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300 text-xs mb-4\",\n        children: \"Tem certeza que deseja excluir este \\xE1udio?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onCancel,\n          className: \"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onConfirm,\n          className: \"px-3 py-1.5 rounded bg-red-500 text-xs text-white hover:bg-red-600 transition-colors\",\n          children: \"Excluir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 928,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 907,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 904,\n    columnNumber: 5\n  }, this);\n  useEffect(() => {\n    if (audioRef.current && canvasRef.current) {\n      if (isPlaying) {\n        var _canvasRef$current$ge;\n        audioRef.current.play();\n        (_canvasRef$current$ge = canvasRef.current.getContext('2d')) === null || _canvasRef$current$ge === void 0 ? void 0 : _canvasRef$current$ge.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      } else {\n        var _canvasRef$current$ge2;\n        audioRef.current.pause();\n        (_canvasRef$current$ge2 = canvasRef.current.getContext('2d')) === null || _canvasRef$current$ge2 === void 0 ? void 0 : _canvasRef$current$ge2.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      }\n    }\n  }, [isPlaying]);\n  const animate = () => {\n    if (!canvasRef.current || !analyserRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const bufferLength = analyserRef.current.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const draw = () => {\n      animationRef.current = requestAnimationFrame(draw);\n      analyserRef.current.getByteFrequencyData(dataArray);\n\n      // Fundo com gradiente\n      ctx.fillStyle = '#1e1e1e';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Número de ondas e configurações\n      const waves = 3;\n      const points = 100;\n      const spacing = canvas.height / (waves + 1);\n\n      // Para cada linha de onda\n      for (let w = 1; w <= waves; w++) {\n        const baseY = spacing * w;\n        ctx.beginPath();\n        ctx.moveTo(0, baseY);\n\n        // Desenha a onda através da largura do canvas\n        for (let x = 0; x <= canvas.width; x++) {\n          const progress = x / canvas.width;\n          const index = Math.floor(progress * bufferLength);\n          const value = dataArray[index] / 255.0;\n\n          // Amplitude varia com o áudio\n          const amplitude = isPlaying ? 30 * value : 10;\n\n          // Frequência e fase variam com o tempo e posição\n          const frequency = 0.02;\n          const phase = Date.now() * 0.002 + w;\n\n          // Calcula a posição Y com múltiplas ondas sobrepostas\n          const y = baseY + Math.sin(x * frequency + phase) * amplitude + Math.sin(x * frequency * 0.5 + phase * 1.5) * amplitude * 0.5;\n          ctx.lineTo(x, y);\n        }\n\n        // Gradiente para a onda\n        const gradient = ctx.createLinearGradient(0, baseY - 50, 0, baseY + 50);\n        const alpha = isPlaying ? 0.5 - (w - 1) * 0.1 : 0.2;\n        gradient.addColorStop(0, `rgba(225, 170, 30, 0)`);\n        gradient.addColorStop(0.5, `rgba(225, 170, 30, ${alpha})`);\n        gradient.addColorStop(1, `rgba(225, 170, 30, 0)`);\n        ctx.strokeStyle = gradient;\n        ctx.lineWidth = 2;\n        ctx.stroke();\n\n        // Efeito de brilho\n        if (isPlaying) {\n          ctx.save();\n          ctx.filter = 'blur(4px)';\n          ctx.strokeStyle = `rgba(225, 170, 30, ${alpha * 0.5})`;\n          ctx.lineWidth = 4;\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n\n      // Adiciona partículas brilhantes\n      if (isPlaying) {\n        for (let i = 0; i < bufferLength; i += 8) {\n          const value = dataArray[i] / 255.0;\n          if (value > 0.5) {\n            const x = Math.random() * canvas.width;\n            const y = Math.random() * canvas.height;\n            const size = Math.random() * 3 * value;\n            ctx.beginPath();\n            ctx.arc(x, y, size, 0, Math.PI * 2);\n            ctx.fillStyle = `rgba(225, 170, 30, ${value * 0.3})`;\n            ctx.fill();\n          }\n        }\n      }\n    };\n    draw();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 bg-[#2d2d2d] rounded-lg border border-[#404040] overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 border-b border-[#404040]\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-[#e1aa1e] font-medium text-center\",\n          children: (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.title) || 'Selecione um áudio'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1051,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative h-32 bg-[#1e1e1e] p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"absolute inset-0 w-full h-full\",\n          width: 1000,\n          height: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1059,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (currentAudio) {\n                setIsPlaying(!isPlaying);\n                if (isPlaying) {\n                  var _audioRef$current;\n                  (_audioRef$current = audioRef.current) === null || _audioRef$current === void 0 ? void 0 : _audioRef$current.pause();\n                } else {\n                  var _audioRef$current2;\n                  (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.play();\n                }\n              }\n            },\n            className: `p-4 rounded-full bg-[#e1aa1e]/90 hover:bg-[#e1aa1e] transition-all transform \n                hover:scale-105 active:scale-95 ${isPlaying ? 'animate-pulse' : ''}`,\n            disabled: !currentAudio,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-8 h-8 text-gray-900\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: isPlaying ? /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2.5,\n                d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1090,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2.5,\n                d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1097,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1083,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1068,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1067,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1058,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-[#1e1e1e]/50\",\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          ref: audioRef,\n          src: currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.url,\n          onTimeUpdate: handleTimeUpdate,\n          onEnded: handleAudioEnd,\n          onPlay: () => window.dispatchEvent(new Event('audioPlay')),\n          onPause: () => window.dispatchEvent(new Event('audioStop')),\n          className: \"hidden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-1 bg-[#404040] rounded-full cursor-pointer mb-2\",\n          onClick: handleProgressClick,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-full bg-[#e1aa1e] rounded-full\",\n            style: {\n              width: `${progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between text-xs text-gray-400 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatTime(((_audioRef$current3 = audioRef.current) === null || _audioRef$current3 === void 0 ? void 0 : _audioRef$current3.currentTime) || 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatTime(((_audioRef$current4 = audioRef.current) === null || _audioRef$current4 === void 0 ? void 0 : _audioRef$current4.duration) || 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1133,\n          columnNumber: 11\n        }, this), (() => {\n          const nextInfo = getNextAudioInfo();\n          if (!(nextInfo !== null && nextInfo !== void 0 && nextInfo.nextAudio)) return null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-right bg-[#2d2d2d] px-3 py-1 rounded border border-[#404040]/50\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-400\",\n                children: [\"Pr\\xF3ximo: \", nextInfo.nextAudio.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1146,\n                columnNumber: 19\n              }, this), nextInfo.timer && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-[#e1aa1e]\",\n                children: [\"Em \", formatTimeLeft(nextInfo.timer.timeLeft)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1150,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1145,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1144,\n            columnNumber: 15\n          }, this);\n        })()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1049,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-400 px-2\",\n          children: \"Lista de \\xC1udios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex-1 relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleUpload,\n            accept: \"audio/*\",\n            className: \"hidden\",\n            disabled: isUploading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-full bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-4 py-2 rounded flex items-center justify-center gap-2 transition-colors cursor-pointer whitespace-nowrap ${isUploading ? 'opacity-50 cursor-not-allowed' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-5 h-5 flex-shrink-0\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M12 4v16m8-8H4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1181,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"truncate\",\n              children: isUploading ? 'Enviando...' : 'Anexar Áudio'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1183,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowTextToSpeech(true),\n          className: \"flex-1 bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-4 py-2 rounded flex items-center justify-center gap-2 transition-colors whitespace-nowrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-5 h-5 flex-shrink-0\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1192,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"truncate\",\n            children: \"Falar Texto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2 max-h-[400px] overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-400 italic mb-2 px-2\",\n        children: \"Clique no \\xEDcone de edi\\xE7\\xE3o ou d\\xEA um duplo clique no nome para renomear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1201,\n        columnNumber: 9\n      }, this), audios.map(audio => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors min-w-0 bg-[#1e1e1e] mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => togglePlay(audio),\n          className: \"p-1 hover:bg-[#404040] rounded-full transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-6 h-6 text-[#e1aa1e]\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: isPlaying && (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id ? /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1221,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1228,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1214,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1210,\n          columnNumber: 13\n        }, this), editingAudioId === audio.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editingTitle,\n          onChange: e => setEditingTitle(e.target.value),\n          onBlur: () => {\n            if (editingTitle.trim() && editingTitle !== audio.title) {\n              handleUpdateTitle(audio.id, editingTitle);\n            } else {\n              setEditingAudioId(null);\n            }\n          },\n          onKeyDown: e => {\n            if (e.key === 'Enter') {\n              if (editingTitle.trim() && editingTitle !== audio.title) {\n                handleUpdateTitle(audio.id, editingTitle);\n              } else {\n                setEditingAudioId(null);\n              }\n            } else if (e.key === 'Escape') {\n              setEditingAudioId(null);\n            }\n          },\n          className: \"flex-1 bg-[#1e1e1e] text-gray-200 px-2 py-1 rounded border border-[#404040] focus:border-[#e1aa1e] focus:outline-none\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1239,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 flex items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"truncate cursor-pointer hover:text-[#e1aa1e]\",\n              onDoubleClick: () => {\n                setEditingAudioId(audio.id);\n                setEditingTitle(audio.title);\n              },\n              children: audio.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1267,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setEditingAudioId(audio.id);\n                setEditingTitle(audio.title);\n              },\n              className: \"p-1 rounded-full hover:bg-[#404040] opacity-0 group-hover:opacity-100 transition-all ml-1\",\n              title: \"Editar nome\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-4 h-4 text-[#e1aa1e]\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1290,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1284,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1276,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1266,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1265,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 shrink-0\",\n          children: [audioTimers[audio.id] ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              handleShowConfirmDialog(e, audio.id);\n            },\n            className: \"flex items-center gap-1.5 px-2 py-1 rounded bg-[#e1aa1e]/10 text-[#e1aa1e] hover:bg-[#e1aa1e]/20 transition-colors\",\n            title: \"Clique para desativar a repeti\\xE7\\xE3o\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-4 h-4\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1317,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1311,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: formatTimeLeft(audioTimers[audio.id].timeLeft)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1324,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1304,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              handleShowTimerDialog(e, audio.id);\n            },\n            className: \"p-1.5 hover:bg-[#404040] rounded transition-colors text-gray-400 hover:text-[#e1aa1e]\",\n            title: \"Ativar repeti\\xE7\\xE3o autom\\xE1tica\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-4 h-4\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1342,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1336,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1329,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              setDeletePosition({\n                x: e.currentTarget.getBoundingClientRect().x,\n                y: e.currentTarget.getBoundingClientRect().y + 30\n              });\n              setShowDeleteConfirm(audio.id);\n            },\n            className: \"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\",\n            title: \"Excluir \\xE1udio\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-5 h-5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1366,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1360,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1352,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1302,\n          columnNumber: 13\n        }, this)]\n      }, audio.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1206,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1200,\n      columnNumber: 7\n    }, this), showTimerDialog && /*#__PURE__*/_jsxDEV(SetTimerDialog, {\n      audioId: showTimerDialog,\n      audioTitle: ((_audios$find = audios.find(a => a.id === showTimerDialog)) === null || _audios$find === void 0 ? void 0 : _audios$find.title) || '',\n      onConfirm: minutes => {\n        startRepeatTimer(showTimerDialog, minutes);\n        setShowTimerDialog(null);\n        setPopupPosition(null);\n        setTimerInputValue('');\n      },\n      onCancel: () => {\n        setShowTimerDialog(null);\n        setPopupPosition(null);\n        setTimerInputValue('');\n      },\n      buttonPosition: popupPosition,\n      inputValue: timerInputValue,\n      onInputChange: setTimerInputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1380,\n      columnNumber: 9\n    }, this), showConfirmDialog && /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      audioId: showConfirmDialog,\n      onConfirm: () => {\n        stopRepeatTimer(showConfirmDialog);\n        setShowConfirmDialog(null);\n        setConfirmPosition(null);\n      },\n      onEdit: () => {\n        setShowConfirmDialog(null);\n        setConfirmPosition(null);\n        // Abre o diálogo de timer com a posição atual\n        setPopupPosition(confirmPosition);\n        setShowTimerDialog(showConfirmDialog);\n      },\n      onCancel: () => {\n        setShowConfirmDialog(null);\n        setConfirmPosition(null);\n      },\n      buttonPosition: confirmPosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1401,\n      columnNumber: 9\n    }, this), showDeleteConfirm && /*#__PURE__*/_jsxDEV(DeleteConfirmDialog, {\n      audioId: showDeleteConfirm,\n      onConfirm: () => {\n        handleDelete(showDeleteConfirm);\n        setShowDeleteConfirm(null);\n        setDeletePosition(null);\n      },\n      onCancel: () => {\n        setShowDeleteConfirm(null);\n        setDeletePosition(null);\n      },\n      buttonPosition: deletePosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1424,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextToSpeech, {\n      apiKey: \"AIzaSyBvkopJSt0VaBRbqfdtevWDuCwVRDhNZ2o\",\n      isOpen: showTextToSpeech,\n      onClose: () => setShowTextToSpeech(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1439,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1047,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"3sBSh0E5+ek4Q0r3eJci5HCZkBk=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","audioService","supabase","TextToSpeech","jsxDEV","_jsxDEV","AudioPlayer","onEnded","isPlaying","setIsPlaying","_s","_audioRef$current3","_audioRef$current4","_audios$find","audios","setAudios","currentAudio","setCurrentAudio","progress","setProgress","isUploading","setIsUploading","isLoading","setIsLoading","audioRef","audioTimers","setAudioTimers","timersRef","timerAudioId","setTimerAudioId","pendingAudioId","setPendingAudioId","pendingAudios","setPendingAudios","playAttemptRef","editingAudioId","setEditingAudioId","editingTitle","setEditingTitle","showConfirmDialog","setShowConfirmDialog","showTimerDialog","setShowTimerDialog","popupPosition","setPopupPosition","confirmPosition","setConfirmPosition","isAnimating","setIsAnimating","timerInputValue","setTimerInputValue","preferences","setPreferences","playAttempts","setPlayAttempts","MAX_PLAY_ATTEMPTS","showDeleteConfirm","setShowDeleteConfirm","deletePosition","setDeletePosition","canvasRef","analyserRef","animationRef","isPlayingRef","endTimeRefs","showTextToSpeech","setShowTextToSpeech","loadInitialAudios","data","getAudios","forEach","audio","loadAudioPreferences","id","error","console","loadAudioSafely","audioElement","url","Promise","resolve","reject","loadHandler","removeEventListener","errorHandler","e","addEventListener","src","load","loadAudios","audioId","prefs","loadPreferences","auto_repeat","timer_end_at","endTime","Date","getTime","now","timeLeft","Math","max","floor","interval","repeat_interval","newEndTime","toISOString","updatePreferences","startNewTimerCycle","undefined","prev","last_played_at","play_count","handleTimeUpdate","current","currentTime","duration","handleProgressClick","bounds","currentTarget","getBoundingClientRect","x","clientX","left","width","percentage","existingEndTime","initialTimeLeft","clearInterval","attemptCount","MAX_ATTEMPTS","createNewCycle","setTimeout","audioData","getAudio","once","play","intervalId","setInterval","timerEndTime","newTimeLeft","togglePlay","currentAudioElement","handleAudioEnd","pause","window","dispatchEvent","Event","Object","values","timerId","cleanup","handleUpload","event","_event$target$files","file","target","files","log","name","fileExt","split","pop","fileName","random","filePath","uploadData","uploadError","storage","from","upload","publicUrl","getPublicUrl","newAudio","addAudio","title","value","startRepeatTimer","minutes","seconds","stopRepeatTimer","newTimers","handleDelete","_fileUrl$split$","audioToDelete","find","a","fileUrl","storageError","remove","list","search","deleteAudio","newPrefs","updatedFiles","formatTime","mins","secs","toString","padStart","formatTimeLeft","ceil","remainingSeconds","getNextAudioInfo","length","nextAudioId","nextAudio","timer","nextScheduledAudio","shortestTime","Infinity","entries","handleUpdateTitle","newTitle","updateAudio","map","ConfirmDialog","onConfirm","onEdit","onCancel","buttonPosition","className","onClick","children","style","top","y","transform","opacity","transition","_jsxFileName","lineNumber","columnNumber","SetTimerDialog","audioTitle","inputValue","onInputChange","type","min","onChange","placeholder","onKeyDown","key","parseInt","autoFocus","disabled","handleShowTimerDialog","rect","height","handleShowConfirmDialog","document","createElement","innerHTML","head","appendChild","DeleteConfirmDialog","_canvasRef$current$ge","getContext","clearRect","_canvasRef$current$ge2","animate","canvas","ctx","bufferLength","frequencyBinCount","dataArray","Uint8Array","draw","requestAnimationFrame","getByteFrequencyData","fillStyle","fillRect","waves","points","spacing","w","baseY","beginPath","moveTo","index","amplitude","frequency","phase","sin","lineTo","gradient","createLinearGradient","alpha","addColorStop","strokeStyle","lineWidth","stroke","save","filter","restore","i","size","arc","PI","fill","ref","_audioRef$current","_audioRef$current2","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onTimeUpdate","onPlay","onPause","nextInfo","accept","onBlur","trim","onDoubleClick","apiKey","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/Users/genil/Desktop/sistema da imperio/src/components/AudioPlayer.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { audioService, AudioData } from '../lib/supabase';\nimport { supabase } from '../lib/supabase';\nimport '../styles/animations.css';\nimport TextToSpeech from './TextToSpeech';\n\ninterface AudioTimer {\n  interval: number;\n  timeLeft: number;\n  intervalId: NodeJS.Timeout;\n  endTime: string;\n}\n\ninterface AudioPlayerProps {\n  onEnded: () => void;\n  isPlaying: boolean;\n  setIsPlaying: (playing: boolean) => void;\n}\n\nconst AudioPlayer: React.FC<AudioPlayerProps> = ({ onEnded, isPlaying, setIsPlaying }) => {\n  const [audios, setAudios] = useState<AudioData[]>([]);\n  const [currentAudio, setCurrentAudio] = useState<AudioData | null>(null);\n  const [progress, setProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const [audioTimers, setAudioTimers] = useState<Record<string, AudioTimer>>({});\n  const timersRef = useRef<Record<string, NodeJS.Timeout>>({});\n  const [timerAudioId, setTimerAudioId] = useState<string | null>(null);\n  const [pendingAudioId, setPendingAudioId] = useState<string | null>(null);\n  const [pendingAudios, setPendingAudios] = useState<string[]>([]);\n  const playAttemptRef = useRef<NodeJS.Timeout | null>(null);\n  const [editingAudioId, setEditingAudioId] = useState<string | null>(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [showConfirmDialog, setShowConfirmDialog] = useState<string | null>(null);\n  const [showTimerDialog, setShowTimerDialog] = useState<string | null>(null);\n  const [popupPosition, setPopupPosition] = useState<{ x: number; y: number } | null>(null);\n  const [confirmPosition, setConfirmPosition] = useState<{ x: number; y: number } | null>(null);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [timerInputValue, setTimerInputValue] = useState('');\n  const [preferences, setPreferences] = useState<Record<string, {\n    auto_repeat: boolean;\n    repeat_interval: number;\n    last_played_at?: string;\n    play_count: number;\n  }>>({});\n  const [playAttempts, setPlayAttempts] = useState(0);\n  const MAX_PLAY_ATTEMPTS = 3;\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState<string | null>(null);\n  const [deletePosition, setDeletePosition] = useState<{ x: number; y: number } | null>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const analyserRef = useRef<AnalyserNode | null>(null);\n  const animationRef = useRef<number | null>(null);\n  const isPlayingRef = useRef(false);\n  const endTimeRefs = useRef<Record<string, string>>({});\n  const [showTextToSpeech, setShowTextToSpeech] = useState(false);\n\n  useEffect(() => {\n    const loadInitialAudios = async () => {\n      try {\n        const data = await audioService.getAudios();\n        setAudios(data);\n        \n        // Carrega as preferências para cada áudio\n        data.forEach(audio => {\n          loadAudioPreferences(audio.id);\n        });\n      } catch (error) {\n        console.error('Erro ao carregar áudios:', error);\n      }\n    };\n\n    loadInitialAudios();\n  }, []);\n\n  const loadAudioSafely = async (audioElement: HTMLAudioElement, url: string): Promise<void> => {\n    return new Promise((resolve, reject) => {\n      const loadHandler = () => {\n        audioElement.removeEventListener('canplaythrough', loadHandler);\n        audioElement.removeEventListener('error', errorHandler);\n        resolve();\n      };\n\n      const errorHandler = (e: Event) => {\n        audioElement.removeEventListener('canplaythrough', loadHandler);\n        audioElement.removeEventListener('error', errorHandler);\n        reject(e);\n      };\n\n      audioElement.addEventListener('canplaythrough', loadHandler);\n      audioElement.addEventListener('error', errorHandler);\n      \n      audioElement.src = url;\n      audioElement.load();\n    });\n  };\n\n  const loadAudios = async () => {\n    try {\n      const data = await audioService.getAudios();\n      setAudios(data);\n      \n      // Carrega as preferências para cada áudio\n      data.forEach(audio => {\n        loadAudioPreferences(audio.id);\n      });\n    } catch (error) {\n      console.error('Erro ao carregar áudios:', error);\n    }\n  };\n\n  const loadAudioPreferences = async (audioId: string) => {\n    try {\n      const prefs = await audioService.loadPreferences(audioId);\n      \n      if (prefs.auto_repeat && prefs.timer_end_at) {\n        const endTime = new Date(prefs.timer_end_at).getTime();\n        const now = Date.now();\n        const timeLeft = Math.max(0, Math.floor((endTime - now) / 1000));\n\n        // Se ainda há tempo restante ou se acabou de terminar\n        if (timeLeft >= 0) {\n          const interval = prefs.repeat_interval * 60;\n          \n          // Se o timer acabou de terminar, cria um novo ciclo\n          if (timeLeft === 0) {\n            const newEndTime = new Date(Date.now() + interval * 1000).toISOString();\n            \n            // Atualiza o endTime no banco\n            await audioService.updatePreferences(audioId, {\n              ...prefs,\n              timer_end_at: newEndTime\n            });\n\n            // Inicia novo ciclo com o novo endTime\n            startNewTimerCycle(audioId, interval, newEndTime);\n          } else {\n            // Continua o ciclo atual com o tempo restante\n            startNewTimerCycle(audioId, interval, prefs.timer_end_at);\n          }\n        } else {\n          // Se o timer expirou há muito tempo, desativa-o\n          await audioService.updatePreferences(audioId, {\n            auto_repeat: false,\n            repeat_interval: 0,\n            timer_end_at: undefined\n          });\n        }\n      }\n\n      // Atualiza as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          auto_repeat: prefs.auto_repeat || false,\n          repeat_interval: prefs.repeat_interval || 0,\n          last_played_at: prefs.last_played_at,\n          play_count: prefs.play_count || 0\n        }\n      }));\n\n    } catch (error) {\n      // Mantém o erro silencioso\n    }\n  };\n\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const progress = (audioRef.current.currentTime / audioRef.current.duration) * 100;\n      setProgress(progress);\n    }\n  };\n\n  const handleProgressClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (audioRef.current) {\n      const bounds = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - bounds.left;\n      const width = bounds.width;\n      const percentage = x / width;\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\n    }\n  };\n\n  const startNewTimerCycle = (audioId: string, interval: number, existingEndTime?: string) => {\n    endTimeRefs.current[audioId] = existingEndTime || new Date(Date.now() + interval * 1000).toISOString();\n    const initialTimeLeft = Math.max(0, Math.floor((new Date(endTimeRefs.current[audioId]).getTime() - Date.now()) / 1000));\n    \n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n    }\n\n    let attemptCount = 0;\n    const MAX_ATTEMPTS = 3;\n\n    const createNewCycle = async () => {\n      try {\n        if (isPlayingRef.current) {\n          if (attemptCount < MAX_ATTEMPTS) {\n            attemptCount++;\n            setTimeout(() => createNewCycle(), 1000);\n          } else {\n            isPlayingRef.current = false;\n          }\n          return;\n        }\n\n        isPlayingRef.current = true;\n        attemptCount = 0;\n        \n        const audioData = await audioService.getAudio(audioId);\n        if (!audioData) {\n          isPlayingRef.current = false;\n          return;\n        }\n\n        // Primeiro atualiza as preferências\n        const newEndTime = new Date(Date.now() + interval * 1000).toISOString();\n        await audioService.updatePreferences(audioId, {\n          auto_repeat: true,\n          repeat_interval: interval / 60,\n          timer_end_at: newEndTime\n        });\n\n        endTimeRefs.current[audioId] = newEndTime;\n\n        // Depois prepara o áudio\n        if (audioRef.current) {\n          const audioElement = audioRef.current;\n          audioElement.src = audioData.url;\n          audioElement.currentTime = 0;\n\n          // Aguarda o áudio estar pronto\n          await new Promise((resolve) => {\n            audioElement.addEventListener('canplay', resolve, { once: true });\n          });\n\n          setCurrentAudio(audioData);\n          setIsPlaying(true);\n\n          try {\n            await audioElement.play();\n          } catch (error) {\n            isPlayingRef.current = false;\n            setIsPlaying(false);\n            return;\n          }\n        }\n\n        // Libera para próxima reprodução quando este áudio terminar\n        if (audioRef.current) {\n          const audioElement = audioRef.current;\n          audioElement.addEventListener('ended', () => {\n            isPlayingRef.current = false;\n            setIsPlaying(false);\n          }, { once: true });\n        }\n\n      } catch (error) {\n        isPlayingRef.current = false;\n        setIsPlaying(false);\n      }\n    };\n\n    const intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const timerEndTime = new Date(endTimeRefs.current[audioId]).getTime();\n      const newTimeLeft = Math.max(0, Math.floor((timerEndTime - currentTime) / 1000));\n\n      if (newTimeLeft === 0 && !isPlayingRef.current) {\n        createNewCycle();\n      }\n\n      setAudioTimers(prev => ({\n        ...prev,\n        [audioId]: {\n          interval,\n          timeLeft: newTimeLeft,\n          intervalId,\n          endTime: endTimeRefs.current[audioId]\n        }\n      }));\n    }, 1000);\n\n    timersRef.current[audioId] = intervalId;\n\n    setAudioTimers(prev => ({\n      ...prev,\n      [audioId]: {\n        interval,\n        timeLeft: initialTimeLeft,\n        intervalId,\n        endTime: endTimeRefs.current[audioId]\n      }\n    }));\n\n    if (initialTimeLeft === 0) {\n      createNewCycle();\n    }\n\n    return intervalId;\n  };\n\n  const togglePlay = async (audio: AudioData) => {\n    if (isLoading) return; // Evita múltiplas chamadas durante o carregamento\n    \n    try {\n      setIsLoading(true);\n      \n      // Se clicou em um áudio diferente do atual\n      if (currentAudio?.id !== audio.id) {\n        // Para o áudio atual se estiver tocando\n        if (audioRef.current) {\n          const currentAudioElement = audioRef.current;\n          // Remove todos os event listeners antigos\n          currentAudioElement.removeEventListener('ended', handleAudioEnd);\n          currentAudioElement.pause();\n          currentAudioElement.currentTime = 0;\n          isPlayingRef.current = false;\n          setIsPlaying(false);\n          window.dispatchEvent(new Event('audioStop'));\n          \n          // Limpa o src e aguarda\n          currentAudioElement.src = '';\n          await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        // Define o novo áudio\n        setCurrentAudio(audio);\n        \n        if (audioRef.current) {\n          const audioElement = audioRef.current;\n          \n          try {\n            // Carrega o novo áudio de forma segura\n            await loadAudioSafely(audioElement, audio.url);\n            \n            // Inicia a reprodução\n            isPlayingRef.current = true;\n            setIsPlaying(true);\n            window.dispatchEvent(new Event('audioPlay'));\n            \n            await audioElement.play();\n            \n            // Adiciona listener para o fim do áudio\n            audioElement.addEventListener('ended', handleAudioEnd, { once: true });\n          } catch (error) {\n            console.error('Erro ao reproduzir áudio:', error);\n            isPlayingRef.current = false;\n            setIsPlaying(false);\n            window.dispatchEvent(new Event('audioStop'));\n          }\n        }\n      } else {\n        // Mesmo áudio - alterna play/pause\n        if (audioRef.current) {\n          const audioElement = audioRef.current;\n          if (isPlayingRef.current) {\n            isPlayingRef.current = false;\n            setIsPlaying(false);\n            window.dispatchEvent(new Event('audioStop'));\n            await audioElement.pause();\n          } else {\n            try {\n              window.dispatchEvent(new Event('audioPlay'));\n              await audioElement.play();\n              isPlayingRef.current = true;\n              setIsPlaying(true);\n            } catch (error) {\n              console.error('Erro ao reproduzir áudio:', error);\n              isPlayingRef.current = false;\n              setIsPlaying(false);\n              window.dispatchEvent(new Event('audioStop'));\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Erro ao alternar reprodução:', error);\n      isPlayingRef.current = false;\n      setIsPlaying(false);\n      window.dispatchEvent(new Event('audioStop'));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleAudioEnd = () => {\n    try {\n      isPlayingRef.current = false;\n      setIsPlaying(false);\n      if (audioRef.current) {\n        const audioElement = audioRef.current;\n        audioElement.currentTime = 0;\n      }\n      window.dispatchEvent(new Event('audioStop'));\n      onEnded?.();\n    } catch (error) {\n      console.error('Erro ao finalizar áudio:', error);\n    }\n  };\n\n  // Cleanup function\n  useEffect(() => {\n    return () => {\n      // Limpa todos os timers ao desmontar\n      Object.values(timersRef.current).forEach(timerId => {\n        if (timerId) clearInterval(timerId);\n      });\n      \n      // Para o áudio e limpa referências\n      if (audioRef.current) {\n        const cleanup = async () => {\n          try {\n            const audio = audioRef.current;\n            if (!audio) return;\n            \n            // Remove todos os event listeners\n            audio.removeEventListener('ended', handleAudioEnd);\n            \n            // Para a reprodução e limpa\n            audio.pause();\n            audio.src = '';\n            audio.load();\n            isPlayingRef.current = false;\n            window.dispatchEvent(new Event('audioStop'));\n          } catch (error) {\n            console.error('Erro ao limpar áudio:', error);\n          }\n        };\n        cleanup();\n      }\n    };\n  }, []);\n\n  const handleUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    setIsUploading(true);\n    try {\n      console.log('Iniciando upload do arquivo:', file.name);\n      \n      // Upload do arquivo\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${Math.random()}.${fileExt}`;\n      const filePath = `audios/${fileName}`;\n\n      console.log('Tentando fazer upload para:', filePath);\n\n      const { data: uploadData, error: uploadError } = await supabase.storage\n        .from('media')\n        .upload(filePath, file);\n\n      if (uploadError) {\n        console.error('Erro no upload:', uploadError);\n        throw uploadError;\n      }\n\n      console.log('Upload bem sucedido:', uploadData);\n\n      // Obtém a URL pública\n      const { data: { publicUrl } } = supabase.storage\n        .from('media')\n        .getPublicUrl(filePath);\n\n      console.log('URL pública gerada:', publicUrl);\n\n      // Adiciona ao banco de dados\n      const newAudio = await audioService.addAudio({\n        title: file.name,\n        url: publicUrl,\n        auto_repeat: false,\n        repeat_interval: 0,\n        play_count: 0\n      });\n\n      console.log('Áudio adicionado ao banco:', newAudio);\n\n      // Recarrega todos os áudios\n      await loadAudios();\n      \n      // Seleciona o novo áudio\n      setCurrentAudio(newAudio);\n      \n      // Limpa o input\n      event.target.value = '';\n\n    } catch (error) {\n      console.error('Erro detalhado no upload:', error);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const startRepeatTimer = async (audioId: string, minutes: number) => {\n    setTimerAudioId(audioId);\n    const seconds = minutes * 60;\n    \n    // Inicia o novo ciclo do timer\n    startNewTimerCycle(audioId, seconds);\n\n    // Calcula o tempo de término\n    const endTime = new Date(Date.now() + seconds * 1000).toISOString();\n\n    // Salva as preferências no banco\n    try {\n      const prefs = {\n        auto_repeat: true,\n        repeat_interval: minutes,\n        timer_end_at: endTime\n      };\n      \n      await audioService.updatePreferences(audioId, prefs);\n      \n      // Atualiza também as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          ...prev[audioId],\n          auto_repeat: true,\n          repeat_interval: minutes\n        }\n      }));\n      \n      console.log(`Timer salvo para ${audioId} com intervalo de ${minutes}min`);\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n\n  const stopRepeatTimer = async (audioId: string) => {\n    // Não para o timer se o áudio estiver tocando\n    if (currentAudio?.id === audioId && isPlaying) {\n      return;\n    }\n\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n      delete timersRef.current[audioId];\n    }\n\n    setAudioTimers(prev => {\n      const newTimers = { ...prev };\n      delete newTimers[audioId];\n      return newTimers;\n    });\n\n    try {\n      const prefs = {\n        auto_repeat: false,\n        repeat_interval: 0,\n        timer_end_at: undefined\n      };\n      \n      await audioService.updatePreferences(audioId, prefs);\n      \n      // Atualiza também as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          ...prev[audioId],\n          auto_repeat: false,\n          repeat_interval: 0\n        }\n      }));\n      \n      console.log(`Timer removido para ${audioId}`);\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n\n  const handleDelete = async (audioId: string) => {\n    try {\n      const audioToDelete = audios.find(a => a.id === audioId);\n      if (!audioToDelete) return;\n\n      const fileUrl = audioToDelete.url;\n      const fileName = fileUrl.split('/audios/')[1]?.split('?')[0];\n\n      if (fileName) {\n        console.log('Tentando remover arquivo:', fileName);\n\n        try {\n          // Primeira tentativa de remoção\n          const { error: storageError } = await supabase.storage\n            .from('media')\n            .remove([`audios/${fileName}`]);\n\n          if (storageError) {\n            console.error('Erro ao remover arquivo:', storageError);\n            \n            // Se falhar, espera um momento e tenta novamente\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            \n            // Segunda tentativa\n            await supabase.storage\n              .from('media')\n              .remove([`audios/${fileName}`]);\n          }\n\n          // Verifica se o arquivo ainda existe\n          const { data: files } = await supabase.storage\n            .from('media')\n            .list('audios', {\n              search: fileName\n            });\n\n          console.log('Verificação após remoção:', files);\n        } catch (storageError) {\n          console.error('Erro ao acessar storage:', storageError);\n        }\n      }\n\n      // Remove o registro do banco de dados\n      await audioService.deleteAudio(audioId);\n\n      // Atualiza estados locais\n      if (currentAudio?.id === audioId) {\n        setCurrentAudio(null);\n        setIsPlaying(false);\n      }\n\n      if (audioTimers[audioId]) {\n        await stopRepeatTimer(audioId);\n      }\n\n      setPreferences(prev => {\n        const newPrefs = { ...prev };\n        delete newPrefs[audioId];\n        return newPrefs;\n      });\n\n      // Força uma atualização da lista de arquivos no storage\n      const { data: updatedFiles } = await supabase.storage\n        .from('media')\n        .list('audios');\n\n      console.log('Lista atualizada de arquivos:', updatedFiles);\n\n      // Recarrega a lista de áudios\n      await loadAudios();\n\n      console.log('Áudio removido com sucesso:', audioId);\n    } catch (error) {\n      console.error('Erro ao deletar áudio:', error);\n      try {\n        await loadAudios();\n      } catch (e) {\n        console.error('Erro ao recarregar áudios após falha:', e);\n      }\n    }\n  };\n\n  const formatTime = (seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Adicione esta função auxiliar para formatar o tempo do timer\n  const formatTimeLeft = (seconds: number): string => {\n    if (seconds < 60) {\n      return `${Math.ceil(seconds)}s`;\n    }\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.ceil(seconds % 60);\n    return `${minutes}min ${remainingSeconds}s`;\n  };\n\n  // Modifique a função getNextAudioInfo para verificar os timers ativos\n  const getNextAudioInfo = () => {\n    // Primeiro, verifica se há algum áudio pendente na fila\n    if (pendingAudios.length > 0) {\n      const nextAudioId = pendingAudios[0];\n      const nextAudio = audios.find(a => a.id === nextAudioId);\n      const timer = audioTimers[nextAudioId];\n      \n      return { nextAudio, timer };\n    }\n\n    // Se não há áudios pendentes, procura o próximo áudio agendado\n    let nextScheduledAudio = null;\n    let shortestTime = Infinity;\n\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      if (timer.timeLeft < shortestTime) {\n        const audio = audios.find(a => a.id === audioId);\n        if (audio) {\n          nextScheduledAudio = {\n            nextAudio: audio,\n            timer: timer\n          };\n          shortestTime = timer.timeLeft;\n        }\n      }\n    });\n\n    return nextScheduledAudio;\n  };\n\n  const handleUpdateTitle = async (audioId: string, newTitle: string) => {\n    try {\n      await audioService.updateAudio(audioId, { title: newTitle });\n      // Atualiza o estado local dos áudios\n      setAudios(prev => prev.map(audio => \n        audio.id === audioId ? { ...audio, title: newTitle } : audio\n      ));\n      // Se o áudio sendo editado é o atual, atualiza também o currentAudio\n      if (currentAudio?.id === audioId) {\n        setCurrentAudio(prev => prev ? { ...prev, title: newTitle } : null);\n      }\n      setEditingAudioId(null);\n    } catch (error) {\n      console.error('Erro ao atualizar título:', error);\n    }\n  };\n\n  const ConfirmDialog = ({ \n    audioId, \n    onConfirm,\n    onEdit,\n    onCancel,\n    buttonPosition\n  }: { \n    audioId: string;\n    onConfirm: () => void;\n    onEdit: () => void;\n    onCancel: () => void;\n    buttonPosition: { x: number; y: number } | null;\n  }) => (\n    <div className=\"fixed inset-0 z-50\" onClick={(e) => {\n      if (e.target === e.currentTarget) onCancel();\n    }}>\n      <div \n        className=\"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\"\n        style={{\n          top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n          left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n          transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n          opacity: isAnimating ? 0 : 1,\n          transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n        }}\n      >\n        <h3 className=\"text-[#e1aa1e] font-medium text-sm mb-2\">Gerenciar Repetição</h3>\n        <p className=\"text-gray-300 text-xs mb-4\">\n          Escolha uma das opções para editar a repetição automática:\n        </p>\n        <div className=\"flex justify-end gap-2\">\n          <button\n            onClick={onCancel}\n            className=\"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\"\n          >\n            Cancelar\n          </button>\n          <button\n            onClick={onEdit}\n            className=\"px-3 py-1.5 rounded bg-[#e1aa1e]/20 text-xs text-[#e1aa1e] hover:bg-[#e1aa1e]/30 transition-colors\"\n          >\n            Editar\n          </button>\n          <button\n            onClick={onConfirm}\n            className=\"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors\"\n          >\n            Desativar\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  const SetTimerDialog = ({ \n    audioId, \n    audioTitle,\n    onConfirm, \n    onCancel,\n    buttonPosition,\n    inputValue,\n    onInputChange\n  }: { \n    audioId: string;\n    audioTitle: string;\n    onConfirm: (minutes: number) => void;\n    onCancel: () => void;\n    buttonPosition: { x: number; y: number } | null;\n    inputValue: string;\n    onInputChange: (value: string) => void;\n  }) => (\n    <div className=\"fixed inset-0 z-50\" onClick={(e) => {\n      if (e.target === e.currentTarget) onCancel();\n    }}>\n      <div \n        className=\"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\"\n        style={{\n          top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n          left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n          transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n          opacity: isAnimating ? 0 : 1,\n          transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n        }}\n      >\n        <h3 className=\"text-[#e1aa1e] font-medium text-sm mb-2\">Repetir Áudio</h3>\n        <p className=\"text-gray-300 text-xs mb-3 truncate\">\n          {audioTitle}\n        </p>\n        \n        <div className=\"relative mb-4\">\n          <input\n            type=\"number\"\n            min=\"1\"\n            value={inputValue}\n            onChange={(e) => onInputChange(e.target.value)}\n            placeholder=\"00\"\n            className=\"w-full px-3 py-2 bg-[#1e1e1e] border border-[#404040] rounded text-gray-200 text-center focus:border-[#e1aa1e] focus:outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none pr-12\"\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                const value = parseInt(inputValue);\n                if (value > 0) onConfirm(value);\n              } else if (e.key === 'Escape') {\n                onCancel();\n              }\n            }}\n            autoFocus\n          />\n          <span className=\"absolute right-3 top-1/2 -translate-y-1/2 text-xs text-gray-400\">\n            minutos\n          </span>\n        </div>\n\n        <div className=\"flex justify-end gap-2\">\n          <button\n            onClick={onCancel}\n            className=\"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\"\n          >\n            Cancelar\n          </button>\n          <button\n            onClick={() => {\n              const value = parseInt(inputValue);\n              if (value > 0) onConfirm(value);\n            }}\n            disabled={!inputValue || parseInt(inputValue) <= 0}\n            className=\"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            Ativar\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  const handleShowTimerDialog = (e: React.MouseEvent, audioId: string) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setPopupPosition({ \n      x: rect.left + rect.width/2, \n      y: rect.top + rect.height/2 \n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowTimerDialog(audioId);\n    }, 10);\n  };\n\n  const handleShowConfirmDialog = (e: React.MouseEvent, audioId: string) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setConfirmPosition({ \n      x: rect.left + rect.width/2, \n      y: rect.top + rect.height/2 \n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowConfirmDialog(audioId);\n    }, 10);\n  };\n\n  // Adicione este useEffect para gerenciar a seleção de texto\n  useEffect(() => {\n    const style = document.createElement('style');\n    style.innerHTML = `\n      .dragging * {\n        user-select: none !important;\n        -webkit-user-select: none !important;\n        cursor: grabbing !important;\n      }\n    `;\n    document.head.appendChild(style);\n    return () => style.remove();\n  }, []);\n\n  const DeleteConfirmDialog = ({ \n    audioId, \n    onConfirm,\n    onCancel,\n    buttonPosition\n  }: { \n    audioId: string;\n    onConfirm: () => void;\n    onCancel: () => void;\n    buttonPosition: { x: number; y: number } | null;\n  }) => (\n    <div className=\"fixed inset-0 z-50\" onClick={(e) => {\n      if (e.target === e.currentTarget) onCancel();\n    }}>\n      <div \n        className=\"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\"\n        style={{\n          top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n          left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n          transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n          opacity: isAnimating ? 0 : 1,\n          transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n        }}\n      >\n        <h3 className=\"text-red-500 font-medium text-sm mb-2\">Confirmar Exclusão</h3>\n        <p className=\"text-gray-300 text-xs mb-4\">\n          Tem certeza que deseja excluir este áudio?\n        </p>\n        <div className=\"flex justify-end gap-2\">\n          <button\n            onClick={onCancel}\n            className=\"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\"\n          >\n            Cancelar\n          </button>\n          <button\n            onClick={onConfirm}\n            className=\"px-3 py-1.5 rounded bg-red-500 text-xs text-white hover:bg-red-600 transition-colors\"\n          >\n            Excluir\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  useEffect(() => {\n    if (audioRef.current && canvasRef.current) {\n      if (isPlaying) {\n        audioRef.current.play();\n        canvasRef.current.getContext('2d')?.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      } else {\n        audioRef.current.pause();\n        canvasRef.current.getContext('2d')?.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      }\n    }\n  }, [isPlaying]);\n\n  const animate = () => {\n    if (!canvasRef.current || !analyserRef.current) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const bufferLength = analyserRef.current.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n\n    const draw = () => {\n      animationRef.current = requestAnimationFrame(draw);\n      analyserRef.current!.getByteFrequencyData(dataArray);\n\n      // Fundo com gradiente\n      ctx.fillStyle = '#1e1e1e';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Número de ondas e configurações\n      const waves = 3;\n      const points = 100;\n      const spacing = canvas.height / (waves + 1);\n\n      // Para cada linha de onda\n      for (let w = 1; w <= waves; w++) {\n        const baseY = spacing * w;\n        \n        ctx.beginPath();\n        ctx.moveTo(0, baseY);\n\n        // Desenha a onda através da largura do canvas\n        for (let x = 0; x <= canvas.width; x++) {\n          const progress = x / canvas.width;\n          const index = Math.floor(progress * bufferLength);\n          const value = dataArray[index] / 255.0;\n          \n          // Amplitude varia com o áudio\n          const amplitude = isPlaying ? 30 * value : 10;\n          \n          // Frequência e fase variam com o tempo e posição\n          const frequency = 0.02;\n          const phase = Date.now() * 0.002 + w;\n          \n          // Calcula a posição Y com múltiplas ondas sobrepostas\n          const y = baseY + \n                   Math.sin(x * frequency + phase) * amplitude +\n                   Math.sin(x * frequency * 0.5 + phase * 1.5) * amplitude * 0.5;\n\n          ctx.lineTo(x, y);\n        }\n\n        // Gradiente para a onda\n        const gradient = ctx.createLinearGradient(0, baseY - 50, 0, baseY + 50);\n        const alpha = isPlaying ? (0.5 - (w - 1) * 0.1) : 0.2;\n        \n        gradient.addColorStop(0, `rgba(225, 170, 30, 0)`);\n        gradient.addColorStop(0.5, `rgba(225, 170, 30, ${alpha})`);\n        gradient.addColorStop(1, `rgba(225, 170, 30, 0)`);\n\n        ctx.strokeStyle = gradient;\n        ctx.lineWidth = 2;\n        ctx.stroke();\n\n        // Efeito de brilho\n        if (isPlaying) {\n          ctx.save();\n          ctx.filter = 'blur(4px)';\n          ctx.strokeStyle = `rgba(225, 170, 30, ${alpha * 0.5})`;\n          ctx.lineWidth = 4;\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n\n      // Adiciona partículas brilhantes\n      if (isPlaying) {\n        for (let i = 0; i < bufferLength; i += 8) {\n          const value = dataArray[i] / 255.0;\n          if (value > 0.5) {\n            const x = Math.random() * canvas.width;\n            const y = Math.random() * canvas.height;\n            const size = Math.random() * 3 * value;\n\n            ctx.beginPath();\n            ctx.arc(x, y, size, 0, Math.PI * 2);\n            ctx.fillStyle = `rgba(225, 170, 30, ${value * 0.3})`;\n            ctx.fill();\n          }\n        }\n      }\n    };\n\n    draw();\n  };\n\n  return (\n    <div className=\"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-4\">\n      {/* Player Principal com Visualizador */}\n      <div className=\"mb-4 bg-[#2d2d2d] rounded-lg border border-[#404040] overflow-hidden\">\n        {/* Título do Áudio */}\n        <div className=\"p-3 border-b border-[#404040]\">\n          <h3 className=\"text-[#e1aa1e] font-medium text-center\">\n            {currentAudio?.title || 'Selecione um áudio'}\n          </h3>\n        </div>\n\n        {/* Área do Visualizador */}\n        <div className=\"relative h-32 bg-[#1e1e1e] p-4\">\n          <canvas\n            ref={canvasRef}\n            className=\"absolute inset-0 w-full h-full\"\n            width={1000}\n            height={200}\n          />\n          \n          {/* Botão de Play centralizado */}\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <button\n              onClick={() => {\n                if (currentAudio) {\n                  setIsPlaying(!isPlaying);\n                  if (isPlaying) {\n                    audioRef.current?.pause();\n                  } else {\n                    audioRef.current?.play();\n                  }\n                }\n              }}\n              className={`p-4 rounded-full bg-[#e1aa1e]/90 hover:bg-[#e1aa1e] transition-all transform \n                hover:scale-105 active:scale-95 ${isPlaying ? 'animate-pulse' : ''}`}\n              disabled={!currentAudio}\n            >\n              <svg\n                className=\"w-8 h-8 text-gray-900\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                {isPlaying ? (\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2.5}\n                    d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                ) : (\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2.5}\n                    d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                )}\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        {/* Controles e Progresso */}\n        <div className=\"p-4 bg-[#1e1e1e]/50\">\n          <audio\n            ref={audioRef}\n            src={currentAudio?.url}\n            onTimeUpdate={handleTimeUpdate}\n            onEnded={handleAudioEnd}\n            onPlay={() => window.dispatchEvent(new Event('audioPlay'))}\n            onPause={() => window.dispatchEvent(new Event('audioStop'))}\n            className=\"hidden\"\n          />\n\n          {/* Barra de Progresso */}\n          <div\n            className=\"h-1 bg-[#404040] rounded-full cursor-pointer mb-2\"\n            onClick={handleProgressClick}\n          >\n            <div\n              className=\"h-full bg-[#e1aa1e] rounded-full\"\n              style={{ width: `${progress}%` }}\n            />\n          </div>\n\n          {/* Tempo */}\n          <div className=\"flex justify-between text-xs text-gray-400 mb-3\">\n            <span>{formatTime(audioRef.current?.currentTime || 0)}</span>\n            <span>{formatTime(audioRef.current?.duration || 0)}</span>\n          </div>\n\n          {/* Próxima Reprodução */}\n          {(() => {\n            const nextInfo = getNextAudioInfo();\n            if (!nextInfo?.nextAudio) return null;\n\n            return (\n              <div className=\"flex justify-end\">\n                <div className=\"text-right bg-[#2d2d2d] px-3 py-1 rounded border border-[#404040]/50\">\n                  <div className=\"text-xs text-gray-400\">\n                    Próximo: {nextInfo.nextAudio.title}\n                  </div>\n                  {nextInfo.timer && (\n                    <div className=\"text-xs text-[#e1aa1e]\">\n                      Em {formatTimeLeft(nextInfo.timer.timeLeft)}\n                    </div>\n                  )}\n                </div>\n              </div>\n            );\n          })()}\n        </div>\n      </div>\n\n      {/* Cabeçalho da Lista */}\n      <div className=\"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\">\n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-sm text-gray-400 px-2\">Lista de Áudios</span>\n        </div>\n\n        {/* Botão de Upload */}\n        <div className=\"flex gap-3\">\n          <label className=\"flex-1 relative\">\n            <input\n              type=\"file\"\n              onChange={handleUpload}\n              accept=\"audio/*\"\n              className=\"hidden\"\n              disabled={isUploading}\n            />\n            <div className={`w-full bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-4 py-2 rounded flex items-center justify-center gap-2 transition-colors cursor-pointer whitespace-nowrap ${\n              isUploading ? 'opacity-50 cursor-not-allowed' : ''\n            }`}>\n              <svg className=\"w-5 h-5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n              </svg>\n              <span className=\"truncate\">{isUploading ? 'Enviando...' : 'Anexar Áudio'}</span>\n            </div>\n          </label>\n\n          <button\n            onClick={() => setShowTextToSpeech(true)}\n            className=\"flex-1 bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-4 py-2 rounded flex items-center justify-center gap-2 transition-colors whitespace-nowrap\"\n          >\n            <svg className=\"w-5 h-5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\" />\n            </svg>\n            <span className=\"truncate\">Falar Texto</span>\n          </button>\n        </div>\n      </div>\n\n      {/* Lista de Áudios */}\n      <div className=\"space-y-2 max-h-[400px] overflow-y-auto\">\n        <div className=\"text-xs text-gray-400 italic mb-2 px-2\">\n          Clique no ícone de edição ou dê um duplo clique no nome para renomear\n        </div>\n\n        {audios.map((audio) => (\n          <div\n            key={audio.id}\n            className=\"flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors min-w-0 bg-[#1e1e1e] mb-2\"\n          >\n            <button\n              onClick={() => togglePlay(audio)}\n              className=\"p-1 hover:bg-[#404040] rounded-full transition-colors\"\n            >\n              <svg\n                className=\"w-6 h-6 text-[#e1aa1e]\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                {isPlaying && currentAudio?.id === audio.id ? (\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                ) : (\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                )}\n              </svg>\n            </button>\n\n            {editingAudioId === audio.id ? (\n                    <input\n                type=\"text\"\n                value={editingTitle}\n                onChange={(e) => setEditingTitle(e.target.value)}\n                onBlur={() => {\n                  if (editingTitle.trim() && editingTitle !== audio.title) {\n                    handleUpdateTitle(audio.id, editingTitle);\n                  } else {\n                    setEditingAudioId(null);\n                  }\n                }}\n                      onKeyDown={(e) => {\n                        if (e.key === 'Enter') {\n                    if (editingTitle.trim() && editingTitle !== audio.title) {\n                      handleUpdateTitle(audio.id, editingTitle);\n                    } else {\n                      setEditingAudioId(null);\n                    }\n                  } else if (e.key === 'Escape') {\n                    setEditingAudioId(null);\n                  }\n                }}\n                className=\"flex-1 bg-[#1e1e1e] text-gray-200 px-2 py-1 rounded border border-[#404040] focus:border-[#e1aa1e] focus:outline-none\"\n                      autoFocus\n              />\n            ) : (\n              <div className=\"flex-1 flex items-center\">\n                <div className=\"flex-1 flex items-center\">\n                <span \n                    className=\"truncate cursor-pointer hover:text-[#e1aa1e]\"\n                  onDoubleClick={() => {\n                    setEditingAudioId(audio.id);\n                    setEditingTitle(audio.title);\n                  }}\n                >\n                  {audio.title}\n                </span>\n                <button\n                  onClick={() => {\n                    setEditingAudioId(audio.id);\n                    setEditingTitle(audio.title);\n                  }}\n                    className=\"p-1 rounded-full hover:bg-[#404040] opacity-0 group-hover:opacity-100 transition-all ml-1\"\n                  title=\"Editar nome\"\n                >\n                  <svg\n                      className=\"w-4 h-4 text-[#e1aa1e]\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                    />\n                  </svg>\n                </button>\n                </div>\n              </div>\n            )}\n            \n            <div className=\"flex items-center gap-2 shrink-0\">\n                {audioTimers[audio.id] ? (\n                    <button\n                    onClick={(e) => {\n                      handleShowConfirmDialog(e, audio.id);\n                    }}\n                    className=\"flex items-center gap-1.5 px-2 py-1 rounded bg-[#e1aa1e]/10 text-[#e1aa1e] hover:bg-[#e1aa1e]/20 transition-colors\"\n                    title=\"Clique para desativar a repetição\"\n                  >\n                    <svg\n                      className=\"w-4 h-4\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                      />\n                    </svg>\n                    <span className=\"text-sm\">\n                      {formatTimeLeft(audioTimers[audio.id].timeLeft)}\n                    </span>\n                    </button>\n                ) : (\n                    <button\n                    onClick={(e) => {\n                      handleShowTimerDialog(e, audio.id);\n                    }}\n                    className=\"p-1.5 hover:bg-[#404040] rounded transition-colors text-gray-400 hover:text-[#e1aa1e]\"\n                    title=\"Ativar repetição automática\"\n                    >\n                      <svg\n                      className=\"w-4 h-4\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                        />\n                      </svg>\n                    </button>\n                )}\n\n              <button\n                onClick={(e) => {\n                  setDeletePosition({ x: e.currentTarget.getBoundingClientRect().x, y: e.currentTarget.getBoundingClientRect().y + 30 });\n                  setShowDeleteConfirm(audio.id);\n                }}\n                className=\"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\"\n                title=\"Excluir áudio\"\n              >\n                <svg\n                  className=\"w-5 h-5\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                  />\n                </svg>\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {showTimerDialog && (\n        <SetTimerDialog\n          audioId={showTimerDialog}\n          audioTitle={audios.find(a => a.id === showTimerDialog)?.title || ''}\n          onConfirm={(minutes) => {\n            startRepeatTimer(showTimerDialog, minutes);\n            setShowTimerDialog(null);\n            setPopupPosition(null);\n            setTimerInputValue('');\n          }}\n          onCancel={() => {\n            setShowTimerDialog(null);\n            setPopupPosition(null);\n            setTimerInputValue('');\n          }}\n          buttonPosition={popupPosition}\n          inputValue={timerInputValue}\n          onInputChange={setTimerInputValue}\n        />\n      )}\n\n      {showConfirmDialog && (\n        <ConfirmDialog\n          audioId={showConfirmDialog}\n          onConfirm={() => {\n            stopRepeatTimer(showConfirmDialog);\n            setShowConfirmDialog(null);\n            setConfirmPosition(null);\n          }}\n          onEdit={() => {\n            setShowConfirmDialog(null);\n            setConfirmPosition(null);\n            // Abre o diálogo de timer com a posição atual\n            setPopupPosition(confirmPosition);\n            setShowTimerDialog(showConfirmDialog);\n          }}\n          onCancel={() => {\n            setShowConfirmDialog(null);\n            setConfirmPosition(null);\n          }}\n          buttonPosition={confirmPosition}\n        />\n      )}\n\n      {showDeleteConfirm && (\n        <DeleteConfirmDialog\n          audioId={showDeleteConfirm}\n          onConfirm={() => {\n            handleDelete(showDeleteConfirm);\n            setShowDeleteConfirm(null);\n            setDeletePosition(null);\n          }}\n          onCancel={() => {\n            setShowDeleteConfirm(null);\n            setDeletePosition(null);\n          }}\n          buttonPosition={deletePosition}\n        />\n      )}\n\n      <TextToSpeech \n        apiKey=\"AIzaSyBvkopJSt0VaBRbqfdtevWDuCwVRDhNZ2o\"\n        isOpen={showTextToSpeech}\n        onClose={() => setShowTextToSpeech(false)}\n      />\n    </div>\n    \n  );\n};\n\nexport default AudioPlayer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}