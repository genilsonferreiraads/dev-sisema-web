{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genil\\\\pasta teste\\\\src\\\\components\\\\AudioPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { audioService } from '../lib/supabase';\nimport { supabase } from '../lib/supabase';\nimport '../styles/animations.css';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  onEnded,\n  isPlaying,\n  setIsPlaying\n}) => {\n  _s();\n  var _audioRef$current3, _audioRef$current4, _audios$find;\n  const [audios, setAudios] = useState([]);\n  const [currentAudio, setCurrentAudio] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const audioRef = useRef(null);\n  const [audioTimers, setAudioTimers] = useState({});\n  const timersRef = useRef({});\n  const [timerAudioId, setTimerAudioId] = useState(null);\n  const [pendingAudioId, setPendingAudioId] = useState(null);\n  const [pendingAudios, setPendingAudios] = useState([]);\n  const playAttemptRef = useRef(null);\n  const [editingAudioId, setEditingAudioId] = useState(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [showConfirmDialog, setShowConfirmDialog] = useState(null);\n  const [showTimerDialog, setShowTimerDialog] = useState(null);\n  const [popupPosition, setPopupPosition] = useState(null);\n  const [confirmPosition, setConfirmPosition] = useState(null);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [timerInputValue, setTimerInputValue] = useState('');\n  const [preferences, setPreferences] = useState({});\n  useEffect(() => {\n    loadAudios();\n  }, []);\n  useEffect(() => {\n    const playAudio = async () => {\n      if (!audioRef.current) return;\n      try {\n        console.log('Tentando reproduzir áudio...');\n        await audioRef.current.play();\n        console.log('Áudio iniciado com sucesso');\n        window.dispatchEvent(new Event('audioPlay'));\n      } catch (error) {\n        console.error('Erro ao reproduzir áudio:', error);\n        if (error instanceof Error && error.name === 'AbortError') {\n          // Limpa qualquer tentativa pendente\n          if (playAttemptRef.current) {\n            clearTimeout(playAttemptRef.current);\n          }\n\n          // Tenta novamente após um delay\n          playAttemptRef.current = setTimeout(async () => {\n            try {\n              var _audioRef$current;\n              console.log('Tentando reproduzir novamente...');\n              await ((_audioRef$current = audioRef.current) === null || _audioRef$current === void 0 ? void 0 : _audioRef$current.play());\n              console.log('Áudio iniciado na segunda tentativa');\n              window.dispatchEvent(new Event('audioPlay'));\n            } catch (retryError) {\n              console.error('Erro na segunda tentativa:', retryError);\n              setIsPlaying(false);\n            }\n          }, 500);\n        } else {\n          setIsPlaying(false);\n        }\n      }\n    };\n    if (audioRef.current) {\n      if (isPlaying) {\n        // Limpa qualquer tentativa pendente antes de iniciar uma nova\n        if (playAttemptRef.current) {\n          clearTimeout(playAttemptRef.current);\n          playAttemptRef.current = null;\n        }\n\n        // Adiciona um pequeno delay antes de tentar reproduzir\n        playAttemptRef.current = setTimeout(() => {\n          playAudio();\n        }, 100);\n      } else {\n        // Limpa qualquer tentativa pendente\n        if (playAttemptRef.current) {\n          clearTimeout(playAttemptRef.current);\n          playAttemptRef.current = null;\n        }\n        audioRef.current.pause();\n        window.dispatchEvent(new Event('audioStop'));\n      }\n    }\n\n    // Cleanup\n    return () => {\n      if (playAttemptRef.current) {\n        clearTimeout(playAttemptRef.current);\n        playAttemptRef.current = null;\n      }\n    };\n  }, [isPlaying]);\n  useEffect(() => {\n    return () => {\n      Object.values(timersRef.current).forEach(timer => {\n        clearInterval(timer);\n      });\n    };\n  }, []);\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.onended = () => {\n        console.log('Áudio terminou (evento nativo)');\n        handleAudioEnd();\n      };\n      audioRef.current.onloadeddata = () => {\n        if (isPlaying) {\n          var _audioRef$current2;\n          (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.play().catch(error => {\n            console.error('Erro ao reproduzir áudio após carregamento:', error);\n            setIsPlaying(false);\n          });\n        }\n      };\n    }\n  }, [audioRef.current]);\n  useEffect(() => {\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      if (timer.timeLeft === 0) {\n        setAudioTimers(prev => ({\n          ...prev,\n          [audioId]: {\n            ...timer,\n            timeLeft: timer.interval\n          }\n        }));\n        if (!isPlaying) {\n          const audio = audios.find(a => a.id === audioId);\n          if (audio && audioRef.current) {\n            const playWithDelay = async () => {\n              try {\n                await new Promise(resolve => setTimeout(resolve, 500));\n                setCurrentAudio(audio);\n                if (audioRef.current) {\n                  audioRef.current.currentTime = 0;\n                  console.log('Tentando reproduzir áudio automático:', audio.title);\n                  await audioRef.current.play();\n                  setIsPlaying(true);\n                  console.log('Áudio automático iniciado com sucesso');\n                }\n              } catch (error) {\n                console.error('Erro ao reproduzir áudio automático:', error);\n                if (error instanceof Error && error.name === 'AbortError') {\n                  console.log('Tentando novamente em 1 segundo...');\n                  setTimeout(async () => {\n                    try {\n                      if (audioRef.current) {\n                        await audioRef.current.play();\n                        setIsPlaying(true);\n                        console.log('Áudio automático iniciado na segunda tentativa');\n                      }\n                    } catch (retryError) {\n                      console.error('Falha na segunda tentativa:', retryError);\n                      console.log('Adicionando à fila de pendentes após falha');\n                      setPendingAudios(prev => prev.includes(audioId) ? prev : [...prev, audioId]);\n                    }\n                  }, 1000);\n                }\n              }\n            };\n            playWithDelay();\n          }\n        } else {\n          console.log('Adicionando áudio à fila de pendentes:', audioId);\n          setPendingAudios(prev => {\n            if (prev.includes(audioId)) return prev;\n            console.log('Fila atualizada:', [...prev, audioId]);\n            return [...prev, audioId];\n          });\n        }\n      }\n    });\n  }, [audioTimers, audios, isPlaying]);\n  useEffect(() => {\n    // Intervalo para atualizar os timers a cada segundo\n    const updateInterval = setInterval(() => {\n      audios.forEach(audio => {\n        const prefs = preferences[audio.id];\n        if (prefs !== null && prefs !== void 0 && prefs.auto_repeat && audioTimers[audio.id]) {\n          const timer = audioTimers[audio.id];\n          const currentTime = Date.now();\n          const endTime = new Date(timer.endTime).getTime();\n          const timeLeft = Math.max(0, Math.floor((endTime - currentTime) / 1000));\n          if (timeLeft !== timer.timeLeft) {\n            setAudioTimers(prev => ({\n              ...prev,\n              [audio.id]: {\n                ...timer,\n                timeLeft\n              }\n            }));\n          }\n        }\n      });\n    }, 1000);\n    return () => clearInterval(updateInterval);\n  }, [audios, preferences, audioTimers]);\n  const loadAudios = async () => {\n    try {\n      const data = await audioService.getAudios();\n      setAudios(data);\n\n      // Carrega as preferências para cada áudio\n      data.forEach(audio => {\n        loadAudioPreferences(audio.id);\n      });\n    } catch (error) {\n      console.error('Erro ao carregar áudios:', error);\n    }\n  };\n  const loadAudioPreferences = async audioId => {\n    try {\n      const prefs = await audioService.loadPreferences(audioId);\n      if (prefs.auto_repeat && prefs.timer_end_at) {\n        const endTime = new Date(prefs.timer_end_at).getTime();\n        const now = Date.now();\n        const timeLeft = Math.max(0, Math.floor((endTime - now) / 1000));\n        if (timeLeft > 0) {\n          const minutes = Math.ceil(timeLeft / 60);\n          const intervalId = setInterval(() => {\n            setAudioTimers(prev => {\n              const currentTimer = prev[audioId];\n              if (!currentTimer) return prev;\n              const currentTime = Date.now();\n              const timerEndTime = new Date(currentTimer.endTime).getTime();\n              const newTimeLeft = Math.max(0, Math.floor((timerEndTime - currentTime) / 1000));\n              return {\n                ...prev,\n                [audioId]: {\n                  ...currentTimer,\n                  timeLeft: newTimeLeft\n                }\n              };\n            });\n          }, 1000);\n          timersRef.current[audioId] = intervalId;\n          setAudioTimers(prev => ({\n            ...prev,\n            [audioId]: {\n              interval: minutes * 60,\n              timeLeft,\n              intervalId,\n              endTime: prefs.timer_end_at\n            }\n          }));\n        } else {\n          await audioService.updatePreferences(audioId, {\n            auto_repeat: false,\n            timer_end_at: undefined\n          });\n        }\n      }\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          auto_repeat: prefs.auto_repeat || false,\n          repeat_interval: prefs.repeat_interval || 0,\n          last_played_at: prefs.last_played_at,\n          play_count: prefs.play_count || 0\n        }\n      }));\n    } catch (error) {\n      console.error('Erro ao carregar preferências:', error);\n    }\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const progress = audioRef.current.currentTime / audioRef.current.duration * 100;\n      setProgress(progress);\n    }\n  };\n  const handleProgressClick = e => {\n    if (audioRef.current) {\n      const bounds = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - bounds.left;\n      const width = bounds.width;\n      const percentage = x / width;\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\n    }\n  };\n  const handleAudioEnd = async () => {\n    console.log('Áudio terminou, verificando pendentes...');\n    if (playAttemptRef.current) {\n      clearTimeout(playAttemptRef.current);\n      playAttemptRef.current = null;\n    }\n    if (audioRef.current) {\n      audioRef.current.currentTime = 0;\n    }\n    setProgress(0);\n\n    // Verifica se o áudio atual tem timer ativo\n    const currentId = currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id;\n    if (currentId && audioTimers[currentId]) {\n      const timer = audioTimers[currentId];\n      const currentTime = Date.now();\n      const endTime = new Date(timer.endTime).getTime();\n      const timeLeft = Math.max(0, Math.floor((endTime - currentTime) / 1000));\n\n      // Se ainda houver tempo no timer, reproduz novamente\n      if (timeLeft > 0) {\n        console.log('Timer ainda ativo, reproduzindo novamente...');\n        await new Promise(resolve => setTimeout(resolve, 800));\n        if (audioRef.current) {\n          audioRef.current.play();\n          setIsPlaying(true);\n          return; // Retorna aqui para não processar a fila de pendentes\n        }\n      }\n    }\n\n    // Se não tiver timer ativo ou o timer expirou, processa a fila de pendentes\n    await new Promise(resolve => setTimeout(resolve, 300));\n    if (pendingAudios.length > 0) {\n      try {\n        console.log('Existem áudios pendentes, reproduzindo próximo...');\n        const nextAudioId = pendingAudios[0];\n        const nextAudio = audios.find(a => a.id === nextAudioId);\n        setPendingAudios(prev => prev.slice(1));\n        if (nextAudio) {\n          console.log('Iniciando reprodução do áudio pendente:', nextAudio.title);\n          await new Promise(resolve => setTimeout(resolve, 800));\n          setCurrentAudio(nextAudio);\n          setIsPlaying(true);\n        }\n      } catch (error) {\n        console.error('Erro ao reproduzir próximo áudio:', error);\n        setIsPlaying(false);\n        onEnded();\n      }\n    } else {\n      console.log('Não há áudios pendentes');\n      setIsPlaying(false);\n      onEnded();\n    }\n    window.dispatchEvent(new Event('audioStop'));\n  };\n  const togglePlay = async audio => {\n    if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id) {\n      setIsPlaying(!isPlaying);\n    } else {\n      console.log('Mudando para novo áudio manualmente');\n      setCurrentAudio(audio);\n      if (audioRef.current) {\n        audioRef.current.currentTime = 0;\n      }\n      setIsPlaying(true);\n      // Não vamos mais limpar a fila de pendentes ao tocar manualmente\n      // setPendingAudios([]);\n    }\n    if (!isPlaying) {\n      try {\n        var _preferences$audio$id;\n        await audioService.updatePreferences(audio.id, {\n          last_played_at: new Date().toISOString(),\n          play_count: (((_preferences$audio$id = preferences[audio.id]) === null || _preferences$audio$id === void 0 ? void 0 : _preferences$audio$id.play_count) || 0) + 1\n        });\n      } catch (error) {\n        console.error('Erro ao atualizar estatísticas de reprodução:', error);\n      }\n    }\n  };\n  const handleUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    setIsUploading(true);\n    try {\n      console.log('Iniciando upload do arquivo:', file.name);\n\n      // Upload do arquivo\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${Math.random()}.${fileExt}`;\n      const filePath = `audios/${fileName}`;\n      console.log('Tentando fazer upload para:', filePath);\n      const {\n        data: uploadData,\n        error: uploadError\n      } = await supabase.storage.from('media').upload(filePath, file);\n      if (uploadError) {\n        console.error('Erro no upload:', uploadError);\n        throw uploadError;\n      }\n      console.log('Upload bem sucedido:', uploadData);\n\n      // Obtém a URL pública\n      const {\n        data: {\n          publicUrl\n        }\n      } = supabase.storage.from('media').getPublicUrl(filePath);\n      console.log('URL pública gerada:', publicUrl);\n\n      // Adiciona ao banco de dados\n      const newAudio = await audioService.addAudio({\n        title: file.name,\n        url: publicUrl,\n        auto_repeat: false,\n        repeat_interval: 0,\n        play_count: 0\n      });\n      console.log('Áudio adicionado ao banco:', newAudio);\n\n      // Recarrega todos os áudios\n      await loadAudios();\n\n      // Seleciona o novo áudio\n      setCurrentAudio(newAudio);\n\n      // Limpa o input\n      event.target.value = '';\n    } catch (error) {\n      console.error('Erro detalhado no upload:', error);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const startRepeatTimer = async (audioId, minutes) => {\n    setTimerAudioId(audioId);\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n    }\n    const seconds = minutes * 60;\n    const endTime = new Date(Date.now() + seconds * 1000).toISOString();\n    const intervalId = setInterval(() => {\n      setAudioTimers(prev => {\n        const currentTimer = prev[audioId];\n        if (!currentTimer) return prev;\n        const currentTime = Date.now();\n        const timerEndTime = new Date(currentTimer.endTime).getTime();\n        const newTimeLeft = Math.max(0, Math.floor((timerEndTime - currentTime) / 1000));\n        return {\n          ...prev,\n          [audioId]: {\n            ...currentTimer,\n            timeLeft: newTimeLeft\n          }\n        };\n      });\n    }, 1000);\n    timersRef.current[audioId] = intervalId;\n    setAudioTimers(prev => ({\n      ...prev,\n      [audioId]: {\n        interval: seconds,\n        timeLeft: seconds,\n        intervalId,\n        endTime\n      }\n    }));\n\n    // Salva as preferências no banco\n    try {\n      await audioService.updatePreferences(audioId, {\n        auto_repeat: true,\n        repeat_interval: minutes,\n        timer_end_at: endTime\n      });\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n  const stopRepeatTimer = async audioId => {\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n      delete timersRef.current[audioId];\n    }\n    setAudioTimers(prev => {\n      const newTimers = {\n        ...prev\n      };\n      delete newTimers[audioId];\n      return newTimers;\n    });\n\n    // Salva as preferências no banco\n    try {\n      await audioService.updatePreferences(audioId, {\n        auto_repeat: false,\n        repeat_interval: 0\n      });\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n  const handleDelete = async audioId => {\n    try {\n      await audioService.deleteAudio(audioId);\n      if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId) {\n        setCurrentAudio(null);\n        setIsPlaying(false);\n      }\n      await loadAudios();\n    } catch (error) {\n      console.error('Erro ao deletar áudio:', error);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Adicione esta função auxiliar para formatar o tempo do timer\n  const formatTimeLeft = seconds => {\n    if (seconds < 60) {\n      return `${Math.ceil(seconds)}s`;\n    }\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.ceil(seconds % 60);\n    return `${minutes}min ${remainingSeconds}s`;\n  };\n\n  // Modifique a função getNextAudioInfo para verificar os timers ativos\n  const getNextAudioInfo = () => {\n    // Primeiro, verifica se há algum áudio pendente na fila\n    if (pendingAudios.length > 0) {\n      const nextAudioId = pendingAudios[0];\n      const nextAudio = audios.find(a => a.id === nextAudioId);\n      const timer = audioTimers[nextAudioId];\n      return {\n        nextAudio,\n        timer\n      };\n    }\n\n    // Se não há áudios pendentes, procura o próximo áudio agendado\n    let nextScheduledAudio = null;\n    let shortestTime = Infinity;\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      if (timer.timeLeft < shortestTime) {\n        const audio = audios.find(a => a.id === audioId);\n        if (audio) {\n          nextScheduledAudio = {\n            nextAudio: audio,\n            timer: timer\n          };\n          shortestTime = timer.timeLeft;\n        }\n      }\n    });\n    return nextScheduledAudio;\n  };\n  const handleUpdateTitle = async (audioId, newTitle) => {\n    try {\n      await audioService.updateAudio(audioId, {\n        title: newTitle\n      });\n      // Atualiza o estado local dos áudios\n      setAudios(prev => prev.map(audio => audio.id === audioId ? {\n        ...audio,\n        title: newTitle\n      } : audio));\n      // Se o áudio sendo editado é o atual, atualiza também o currentAudio\n      if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId) {\n        setCurrentAudio(prev => prev ? {\n          ...prev,\n          title: newTitle\n        } : null);\n      }\n      setEditingAudioId(null);\n    } catch (error) {\n      console.error('Erro ao atualizar título:', error);\n    }\n  };\n  const ConfirmDialog = ({\n    audioId,\n    onConfirm,\n    onCancel,\n    buttonPosition\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50\",\n    onClick: e => {\n      if (e.target === e.currentTarget) onCancel();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\",\n      style: {\n        top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n        left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n        transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n        opacity: isAnimating ? 0 : 1,\n        transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-[#e1aa1e] font-medium text-sm mb-2\",\n        children: \"Desativar Repeti\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300 text-xs mb-4\",\n        children: \"Deseja realmente desativar a repeti\\xE7\\xE3o autom\\xE1tica?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onCancel,\n          className: \"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onConfirm,\n          className: \"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors\",\n          children: \"Confirmar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 642,\n    columnNumber: 5\n  }, this);\n  const SetTimerDialog = ({\n    audioId,\n    audioTitle,\n    onConfirm,\n    onCancel,\n    buttonPosition,\n    inputValue,\n    onInputChange\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-50\",\n      onClick: e => {\n        if (e.target === e.currentTarget) onCancel();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\",\n        style: {\n          top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n          left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n          transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n          opacity: isAnimating ? 0 : 1,\n          transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-[#e1aa1e] font-medium text-sm mb-2\",\n          children: \"Repetir \\xC1udio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300 text-xs mb-3 truncate\",\n          children: audioTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            value: inputValue,\n            onChange: e => onInputChange(e.target.value),\n            placeholder: \"00\",\n            className: \"w-full px-3 py-2 bg-[#1e1e1e] border border-[#404040] rounded text-gray-200 text-center focus:border-[#e1aa1e] focus:outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none pr-12\",\n            onKeyDown: e => {\n              if (e.key === 'Enter') {\n                const value = parseInt(inputValue);\n                if (value > 0) onConfirm(value);\n              } else if (e.key === 'Escape') {\n                onCancel();\n              }\n            },\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"absolute right-3 top-1/2 -translate-y-1/2 text-xs text-gray-400\",\n            children: \"minutos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onCancel,\n            className: \"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\",\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const value = parseInt(inputValue);\n              if (value > 0) onConfirm(value);\n            },\n            disabled: !inputValue || parseInt(inputValue) <= 0,\n            className: \"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",\n            children: \"Ativar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 7\n    }, this);\n  };\n  const handleShowTimerDialog = (e, audioId) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setPopupPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2\n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowTimerDialog(audioId);\n    }, 10);\n  };\n  const handleShowConfirmDialog = (e, audioId) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setConfirmPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2\n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowConfirmDialog(audioId);\n    }, 10);\n  };\n\n  // Adicione este useEffect para gerenciar a seleção de texto\n  useEffect(() => {\n    const style = document.createElement('style');\n    style.innerHTML = `\n      .dragging * {\n        user-select: none !important;\n        -webkit-user-select: none !important;\n        cursor: grabbing !important;\n      }\n    `;\n    document.head.appendChild(style);\n    return () => style.remove();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 bg-[#2d2d2d] rounded-lg p-4 border border-[#404040]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-[#e1aa1e] font-medium\",\n          children: (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.title) || 'Selecione um áudio'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.url,\n        onTimeUpdate: handleTimeUpdate,\n        onEnded: handleAudioEnd,\n        className: \"hidden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-1 bg-[#404040] rounded-full cursor-pointer mb-4\",\n        onClick: handleProgressClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-full bg-[#e1aa1e] rounded-full\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between text-xs text-gray-400 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: formatTime(((_audioRef$current3 = audioRef.current) === null || _audioRef$current3 === void 0 ? void 0 : _audioRef$current3.currentTime) || 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: formatTime(((_audioRef$current4 = audioRef.current) === null || _audioRef$current4 === void 0 ? void 0 : _audioRef$current4.duration) || 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => currentAudio && togglePlay(currentAudio),\n            className: \"p-2 hover:bg-[#404040] rounded-full transition-colors\",\n            disabled: !currentAudio,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-8 h-8 text-[#e1aa1e]\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: isPlaying ? /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 854,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 861,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 847,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 11\n        }, this), (() => {\n          const nextInfo = getNextAudioInfo();\n          if (!(nextInfo !== null && nextInfo !== void 0 && nextInfo.nextAudio)) return null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-right bg-[#1e1e1e] px-3 py-1 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-400\",\n                children: [\"Pr\\xF3ximo: \", nextInfo.nextAudio.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 880,\n                columnNumber: 19\n              }, this), nextInfo.timer && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-[#e1aa1e]\",\n                children: [\"Em \", formatTimeLeft(nextInfo.timer.timeLeft)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 884,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 879,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 878,\n            columnNumber: 15\n          }, this);\n        })()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-400 px-2\",\n          children: \"Lista de \\xC1udios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 897,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"bg-[#e1aa1e] hover:bg-[#e1aa1e]/80 text-gray-900 px-3 py-1.5 rounded cursor-pointer transition-colors text-sm\",\n          children: [isUploading ? 'Enviando...' : 'Anexar Áudio', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"hidden\",\n            accept: \"audio/*\",\n            onChange: handleUpload,\n            disabled: isUploading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 905,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 896,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2 max-h-[400px] overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-400 italic mb-2 px-2\",\n        children: \"Clique no \\xEDcone de edi\\xE7\\xE3o ou d\\xEA um duplo clique no nome para renomear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 9\n      }, this), audios.map(audio => /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: false,\n        className: \"flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors min-w-0 bg-[#1e1e1e] mb-2\",\n        layout: true,\n        transition: {\n          layout: {\n            duration: 0.3,\n            ease: [0.25, 1, 0.5, 1]\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => togglePlay(audio),\n          className: \"p-1 hover:bg-[#404040] rounded-full transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-6 h-6 text-[#e1aa1e]\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: isPlaying && (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id ? /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 946,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 953,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 939,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 13\n        }, this), editingAudioId === audio.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editingTitle,\n          onChange: e => setEditingTitle(e.target.value),\n          onBlur: () => {\n            if (editingTitle.trim() && editingTitle !== audio.title) {\n              handleUpdateTitle(audio.id, editingTitle);\n            } else {\n              setEditingAudioId(null);\n            }\n          },\n          onKeyDown: e => {\n            if (e.key === 'Enter') {\n              if (editingTitle.trim() && editingTitle !== audio.title) {\n                handleUpdateTitle(audio.id, editingTitle);\n              } else {\n                setEditingAudioId(null);\n              }\n            } else if (e.key === 'Escape') {\n              setEditingAudioId(null);\n            }\n          },\n          className: \"flex-1 bg-[#1e1e1e] text-gray-200 px-2 py-1 rounded border border-[#404040] focus:border-[#e1aa1e] focus:outline-none\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 964,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 flex items-center group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"truncate cursor-pointer hover:text-[#e1aa1e]\",\n              onDoubleClick: () => {\n                setEditingAudioId(audio.id);\n                setEditingTitle(audio.title);\n              },\n              children: audio.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 992,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setEditingAudioId(audio.id);\n                setEditingTitle(audio.title);\n              },\n              className: \"p-1 rounded-full hover:bg-[#404040] opacity-0 group-hover:opacity-100 transition-all ml-1\",\n              title: \"Editar nome\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-4 h-4 text-[#e1aa1e]\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1015,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1009,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1001,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 990,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 shrink-0\",\n          children: [audioTimers[audio.id] ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              handleShowConfirmDialog(e, audio.id);\n            },\n            className: \"flex items-center gap-1.5 px-2 py-1 rounded bg-[#e1aa1e]/10 text-[#e1aa1e] hover:bg-[#e1aa1e]/20 transition-colors\",\n            title: \"Clique para desativar a repeti\\xE7\\xE3o\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-4 h-4\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1042,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1036,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: formatTimeLeft(audioTimers[audio.id].timeLeft)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1049,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1029,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              handleShowTimerDialog(e, audio.id);\n            },\n            className: \"p-1.5 hover:bg-[#404040] rounded transition-colors text-gray-400 hover:text-[#e1aa1e]\",\n            title: \"Ativar repeti\\xE7\\xE3o autom\\xE1tica\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-4 h-4\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1067,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1061,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1054,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(audio.id),\n            className: \"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-5 h-5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1087,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1081,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1077,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1027,\n          columnNumber: 13\n        }, this)]\n      }, audio.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 923,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 917,\n      columnNumber: 7\n    }, this), showTimerDialog && /*#__PURE__*/_jsxDEV(SetTimerDialog, {\n      audioId: showTimerDialog,\n      audioTitle: ((_audios$find = audios.find(a => a.id === showTimerDialog)) === null || _audios$find === void 0 ? void 0 : _audios$find.title) || '',\n      onConfirm: minutes => {\n        startRepeatTimer(showTimerDialog, minutes);\n        setShowTimerDialog(null);\n        setPopupPosition(null);\n        setTimerInputValue('');\n      },\n      onCancel: () => {\n        setShowTimerDialog(null);\n        setPopupPosition(null);\n        setTimerInputValue('');\n      },\n      buttonPosition: popupPosition,\n      inputValue: timerInputValue,\n      onInputChange: setTimerInputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1101,\n      columnNumber: 9\n    }, this), showConfirmDialog && /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      audioId: showConfirmDialog,\n      onConfirm: () => {\n        stopRepeatTimer(showConfirmDialog);\n        setShowConfirmDialog(null);\n        setConfirmPosition(null);\n      },\n      onCancel: () => {\n        setShowConfirmDialog(null);\n        setConfirmPosition(null);\n      },\n      buttonPosition: confirmPosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1122,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 803,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"MNEyBXpLuFQG5yJFVDQXA6M26s8=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","audioService","supabase","motion","jsxDEV","_jsxDEV","AudioPlayer","onEnded","isPlaying","setIsPlaying","_s","_audioRef$current3","_audioRef$current4","_audios$find","audios","setAudios","currentAudio","setCurrentAudio","progress","setProgress","isUploading","setIsUploading","audioRef","audioTimers","setAudioTimers","timersRef","timerAudioId","setTimerAudioId","pendingAudioId","setPendingAudioId","pendingAudios","setPendingAudios","playAttemptRef","editingAudioId","setEditingAudioId","editingTitle","setEditingTitle","showConfirmDialog","setShowConfirmDialog","showTimerDialog","setShowTimerDialog","popupPosition","setPopupPosition","confirmPosition","setConfirmPosition","isAnimating","setIsAnimating","timerInputValue","setTimerInputValue","preferences","setPreferences","loadAudios","playAudio","current","console","log","play","window","dispatchEvent","Event","error","Error","name","clearTimeout","setTimeout","_audioRef$current","retryError","pause","Object","values","forEach","timer","clearInterval","onended","handleAudioEnd","onloadeddata","_audioRef$current2","catch","entries","audioId","timeLeft","prev","interval","audio","find","a","id","playWithDelay","Promise","resolve","currentTime","title","includes","updateInterval","setInterval","prefs","auto_repeat","Date","now","endTime","getTime","Math","max","floor","data","getAudios","loadAudioPreferences","loadPreferences","timer_end_at","minutes","ceil","intervalId","currentTimer","timerEndTime","newTimeLeft","updatePreferences","undefined","repeat_interval","last_played_at","play_count","handleTimeUpdate","duration","handleProgressClick","e","bounds","currentTarget","getBoundingClientRect","x","clientX","left","width","percentage","currentId","length","nextAudioId","nextAudio","slice","togglePlay","_preferences$audio$id","toISOString","handleUpload","event","_event$target$files","file","target","files","fileExt","split","pop","fileName","random","filePath","uploadData","uploadError","storage","from","upload","publicUrl","getPublicUrl","newAudio","addAudio","url","value","startRepeatTimer","seconds","stopRepeatTimer","newTimers","handleDelete","deleteAudio","formatTime","mins","secs","toString","padStart","formatTimeLeft","remainingSeconds","getNextAudioInfo","nextScheduledAudio","shortestTime","Infinity","handleUpdateTitle","newTitle","updateAudio","map","ConfirmDialog","onConfirm","onCancel","buttonPosition","className","onClick","children","style","top","y","transform","opacity","transition","_jsxFileName","lineNumber","columnNumber","SetTimerDialog","audioTitle","inputValue","onInputChange","type","min","onChange","placeholder","onKeyDown","key","parseInt","autoFocus","disabled","handleShowTimerDialog","rect","height","handleShowConfirmDialog","document","createElement","innerHTML","head","appendChild","remove","ref","src","onTimeUpdate","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","nextInfo","accept","div","initial","layout","ease","onBlur","trim","onDoubleClick","_c","$RefreshReg$"],"sources":["C:/Users/genil/pasta teste/src/components/AudioPlayer.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { audioService, AudioData } from '../lib/supabase';\r\nimport { supabase } from '../lib/supabase';\r\nimport '../styles/animations.css';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\ninterface AudioTimer {\r\n  interval: number;\r\n  timeLeft: number;\r\n  intervalId: NodeJS.Timeout;\r\n  endTime: string;\r\n}\r\n\r\ninterface AudioPlayerProps {\r\n  onEnded: () => void;\r\n  isPlaying: boolean;\r\n  setIsPlaying: (playing: boolean) => void;\r\n}\r\n\r\nconst AudioPlayer: React.FC<AudioPlayerProps> = ({ onEnded, isPlaying, setIsPlaying }) => {\r\n  const [audios, setAudios] = useState<AudioData[]>([]);\r\n  const [currentAudio, setCurrentAudio] = useState<AudioData | null>(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const audioRef = useRef<HTMLAudioElement>(null);\r\n  const [audioTimers, setAudioTimers] = useState<Record<string, AudioTimer>>({});\r\n  const timersRef = useRef<Record<string, NodeJS.Timeout>>({});\r\n  const [timerAudioId, setTimerAudioId] = useState<string | null>(null);\r\n  const [pendingAudioId, setPendingAudioId] = useState<string | null>(null);\r\n  const [pendingAudios, setPendingAudios] = useState<string[]>([]);\r\n  const playAttemptRef = useRef<NodeJS.Timeout | null>(null);\r\n  const [editingAudioId, setEditingAudioId] = useState<string | null>(null);\r\n  const [editingTitle, setEditingTitle] = useState('');\r\n  const [showConfirmDialog, setShowConfirmDialog] = useState<string | null>(null);\r\n  const [showTimerDialog, setShowTimerDialog] = useState<string | null>(null);\r\n  const [popupPosition, setPopupPosition] = useState<{ x: number; y: number } | null>(null);\r\n  const [confirmPosition, setConfirmPosition] = useState<{ x: number; y: number } | null>(null);\r\n  const [isAnimating, setIsAnimating] = useState(false);\r\n  const [timerInputValue, setTimerInputValue] = useState('');\r\n  const [preferences, setPreferences] = useState<Record<string, {\r\n    auto_repeat: boolean;\r\n    repeat_interval: number;\r\n    last_played_at?: string;\r\n    play_count: number;\r\n  }>>({});\r\n\r\n  useEffect(() => {\r\n    loadAudios();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const playAudio = async () => {\r\n      if (!audioRef.current) return;\r\n\r\n      try {\r\n        console.log('Tentando reproduzir áudio...');\r\n        await audioRef.current.play();\r\n        console.log('Áudio iniciado com sucesso');\r\n        window.dispatchEvent(new Event('audioPlay'));\r\n      } catch (error: unknown) {\r\n        console.error('Erro ao reproduzir áudio:', error);\r\n        if (error instanceof Error && error.name === 'AbortError') {\r\n          // Limpa qualquer tentativa pendente\r\n          if (playAttemptRef.current) {\r\n            clearTimeout(playAttemptRef.current);\r\n          }\r\n          \r\n          // Tenta novamente após um delay\r\n          playAttemptRef.current = setTimeout(async () => {\r\n            try {\r\n              console.log('Tentando reproduzir novamente...');\r\n              await audioRef.current?.play();\r\n              console.log('Áudio iniciado na segunda tentativa');\r\n              window.dispatchEvent(new Event('audioPlay'));\r\n            } catch (retryError) {\r\n              console.error('Erro na segunda tentativa:', retryError);\r\n              setIsPlaying(false);\r\n            }\r\n          }, 500);\r\n        } else {\r\n          setIsPlaying(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    if (audioRef.current) {\r\n      if (isPlaying) {\r\n        // Limpa qualquer tentativa pendente antes de iniciar uma nova\r\n        if (playAttemptRef.current) {\r\n          clearTimeout(playAttemptRef.current);\r\n          playAttemptRef.current = null;\r\n        }\r\n        \r\n        // Adiciona um pequeno delay antes de tentar reproduzir\r\n        playAttemptRef.current = setTimeout(() => {\r\n          playAudio();\r\n        }, 100);\r\n      } else {\r\n        // Limpa qualquer tentativa pendente\r\n        if (playAttemptRef.current) {\r\n          clearTimeout(playAttemptRef.current);\r\n          playAttemptRef.current = null;\r\n        }\r\n        audioRef.current.pause();\r\n        window.dispatchEvent(new Event('audioStop'));\r\n      }\r\n    }\r\n\r\n    // Cleanup\r\n    return () => {\r\n      if (playAttemptRef.current) {\r\n        clearTimeout(playAttemptRef.current);\r\n        playAttemptRef.current = null;\r\n      }\r\n    };\r\n  }, [isPlaying]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      Object.values(timersRef.current).forEach(timer => {\r\n        clearInterval(timer);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      audioRef.current.onended = () => {\r\n        console.log('Áudio terminou (evento nativo)');\r\n        handleAudioEnd();\r\n      };\r\n\r\n      audioRef.current.onloadeddata = () => {\r\n        if (isPlaying) {\r\n          audioRef.current?.play().catch(error => {\r\n            console.error('Erro ao reproduzir áudio após carregamento:', error);\r\n            setIsPlaying(false);\r\n          });\r\n        }\r\n      };\r\n    }\r\n  }, [audioRef.current]);\r\n\r\n  useEffect(() => {\r\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\r\n      if (timer.timeLeft === 0) {\r\n        setAudioTimers(prev => ({\r\n          ...prev,\r\n          [audioId]: {\r\n            ...timer,\r\n            timeLeft: timer.interval\r\n          }\r\n        }));\r\n\r\n        if (!isPlaying) {\r\n          const audio = audios.find(a => a.id === audioId);\r\n          if (audio && audioRef.current) {\r\n            const playWithDelay = async () => {\r\n              try {\r\n                await new Promise(resolve => setTimeout(resolve, 500));\r\n                setCurrentAudio(audio);\r\n                \r\n                if (audioRef.current) {\r\n                  audioRef.current.currentTime = 0;\r\n                  console.log('Tentando reproduzir áudio automático:', audio.title);\r\n                  await audioRef.current.play();\r\n                  setIsPlaying(true);\r\n                  console.log('Áudio automático iniciado com sucesso');\r\n                }\r\n              } catch (error) {\r\n                console.error('Erro ao reproduzir áudio automático:', error);\r\n                if (error instanceof Error && error.name === 'AbortError') {\r\n                  console.log('Tentando novamente em 1 segundo...');\r\n                  setTimeout(async () => {\r\n                    try {\r\n                      if (audioRef.current) {\r\n                        await audioRef.current.play();\r\n                        setIsPlaying(true);\r\n                        console.log('Áudio automático iniciado na segunda tentativa');\r\n                      }\r\n                    } catch (retryError) {\r\n                      console.error('Falha na segunda tentativa:', retryError);\r\n                      console.log('Adicionando à fila de pendentes após falha');\r\n                      setPendingAudios(prev => \r\n                        prev.includes(audioId) ? prev : [...prev, audioId]\r\n                      );\r\n                    }\r\n                  }, 1000);\r\n                }\r\n              }\r\n            };\r\n\r\n            playWithDelay();\r\n          }\r\n        } else {\r\n          console.log('Adicionando áudio à fila de pendentes:', audioId);\r\n          setPendingAudios(prev => {\r\n            if (prev.includes(audioId)) return prev;\r\n            console.log('Fila atualizada:', [...prev, audioId]);\r\n            return [...prev, audioId];\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }, [audioTimers, audios, isPlaying]);\r\n\r\n  useEffect(() => {\r\n    // Intervalo para atualizar os timers a cada segundo\r\n    const updateInterval = setInterval(() => {\r\n      audios.forEach(audio => {\r\n        const prefs = preferences[audio.id];\r\n        if (prefs?.auto_repeat && audioTimers[audio.id]) {\r\n          const timer = audioTimers[audio.id];\r\n          const currentTime = Date.now();\r\n          const endTime = new Date(timer.endTime).getTime();\r\n          const timeLeft = Math.max(0, Math.floor((endTime - currentTime) / 1000));\r\n\r\n          if (timeLeft !== timer.timeLeft) {\r\n            setAudioTimers(prev => ({\r\n              ...prev,\r\n              [audio.id]: {\r\n                ...timer,\r\n                timeLeft\r\n              }\r\n            }));\r\n          }\r\n        }\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(updateInterval);\r\n  }, [audios, preferences, audioTimers]);\r\n\r\n  const loadAudios = async () => {\r\n    try {\r\n      const data = await audioService.getAudios();\r\n      setAudios(data);\r\n      \r\n      // Carrega as preferências para cada áudio\r\n      data.forEach(audio => {\r\n        loadAudioPreferences(audio.id);\r\n      });\r\n    } catch (error) {\r\n      console.error('Erro ao carregar áudios:', error);\r\n    }\r\n  };\r\n\r\n  const loadAudioPreferences = async (audioId: string) => {\r\n    try {\r\n      const prefs = await audioService.loadPreferences(audioId);\r\n      \r\n      if (prefs.auto_repeat && prefs.timer_end_at) {\r\n        const endTime = new Date(prefs.timer_end_at).getTime();\r\n        const now = Date.now();\r\n        const timeLeft = Math.max(0, Math.floor((endTime - now) / 1000));\r\n        \r\n        if (timeLeft > 0) {\r\n          const minutes = Math.ceil(timeLeft / 60);\r\n          const intervalId = setInterval(() => {\r\n            setAudioTimers(prev => {\r\n              const currentTimer = prev[audioId];\r\n              if (!currentTimer) return prev;\r\n\r\n              const currentTime = Date.now();\r\n              const timerEndTime = new Date(currentTimer.endTime).getTime();\r\n              const newTimeLeft = Math.max(0, Math.floor((timerEndTime - currentTime) / 1000));\r\n\r\n              return {\r\n                ...prev,\r\n                [audioId]: {\r\n                  ...currentTimer,\r\n                  timeLeft: newTimeLeft\r\n                }\r\n              };\r\n            });\r\n          }, 1000);\r\n\r\n          timersRef.current[audioId] = intervalId;\r\n\r\n          setAudioTimers(prev => ({\r\n            ...prev,\r\n            [audioId]: {\r\n              interval: minutes * 60,\r\n              timeLeft,\r\n              intervalId,\r\n              endTime: prefs.timer_end_at\r\n            }\r\n          }));\r\n        } else {\r\n          await audioService.updatePreferences(audioId, {\r\n            auto_repeat: false,\r\n            timer_end_at: undefined\r\n          });\r\n        }\r\n      }\r\n\r\n      setPreferences(prev => ({\r\n        ...prev,\r\n        [audioId]: {\r\n          auto_repeat: prefs.auto_repeat || false,\r\n          repeat_interval: prefs.repeat_interval || 0,\r\n          last_played_at: prefs.last_played_at,\r\n          play_count: prefs.play_count || 0\r\n        }\r\n      }));\r\n    } catch (error) {\r\n      console.error('Erro ao carregar preferências:', error);\r\n    }\r\n  };\r\n\r\n  const handleTimeUpdate = () => {\r\n    if (audioRef.current) {\r\n      const progress = (audioRef.current.currentTime / audioRef.current.duration) * 100;\r\n      setProgress(progress);\r\n    }\r\n  };\r\n\r\n  const handleProgressClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if (audioRef.current) {\r\n      const bounds = e.currentTarget.getBoundingClientRect();\r\n      const x = e.clientX - bounds.left;\r\n      const width = bounds.width;\r\n      const percentage = x / width;\r\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\r\n    }\r\n  };\r\n\r\n  const handleAudioEnd = async () => {\r\n    console.log('Áudio terminou, verificando pendentes...');\r\n    \r\n    if (playAttemptRef.current) {\r\n      clearTimeout(playAttemptRef.current);\r\n      playAttemptRef.current = null;\r\n    }\r\n\r\n    if (audioRef.current) {\r\n      audioRef.current.currentTime = 0;\r\n    }\r\n    setProgress(0);\r\n\r\n    // Verifica se o áudio atual tem timer ativo\r\n    const currentId = currentAudio?.id;\r\n    if (currentId && audioTimers[currentId]) {\r\n      const timer = audioTimers[currentId];\r\n      const currentTime = Date.now();\r\n      const endTime = new Date(timer.endTime).getTime();\r\n      const timeLeft = Math.max(0, Math.floor((endTime - currentTime) / 1000));\r\n\r\n      // Se ainda houver tempo no timer, reproduz novamente\r\n      if (timeLeft > 0) {\r\n        console.log('Timer ainda ativo, reproduzindo novamente...');\r\n        await new Promise(resolve => setTimeout(resolve, 800));\r\n        if (audioRef.current) {\r\n          audioRef.current.play();\r\n          setIsPlaying(true);\r\n          return; // Retorna aqui para não processar a fila de pendentes\r\n        }\r\n      }\r\n    }\r\n\r\n    // Se não tiver timer ativo ou o timer expirou, processa a fila de pendentes\r\n    await new Promise(resolve => setTimeout(resolve, 300));\r\n\r\n    if (pendingAudios.length > 0) {\r\n      try {\r\n        console.log('Existem áudios pendentes, reproduzindo próximo...');\r\n        const nextAudioId = pendingAudios[0];\r\n        const nextAudio = audios.find(a => a.id === nextAudioId);\r\n\r\n        setPendingAudios(prev => prev.slice(1));\r\n\r\n        if (nextAudio) {\r\n          console.log('Iniciando reprodução do áudio pendente:', nextAudio.title);\r\n          await new Promise(resolve => setTimeout(resolve, 800));\r\n          setCurrentAudio(nextAudio);\r\n          setIsPlaying(true);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro ao reproduzir próximo áudio:', error);\r\n        setIsPlaying(false);\r\n        onEnded();\r\n      }\r\n    } else {\r\n      console.log('Não há áudios pendentes');\r\n      setIsPlaying(false);\r\n      onEnded();\r\n    }\r\n\r\n    window.dispatchEvent(new Event('audioStop'));\r\n  };\r\n\r\n  const togglePlay = async (audio: AudioData) => {\r\n    if (currentAudio?.id === audio.id) {\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      console.log('Mudando para novo áudio manualmente');\r\n      setCurrentAudio(audio);\r\n      if (audioRef.current) {\r\n        audioRef.current.currentTime = 0;\r\n      }\r\n      setIsPlaying(true);\r\n      // Não vamos mais limpar a fila de pendentes ao tocar manualmente\r\n      // setPendingAudios([]);\r\n    }\r\n\r\n    if (!isPlaying) {\r\n      try {\r\n        await audioService.updatePreferences(audio.id, {\r\n          last_played_at: new Date().toISOString(),\r\n          play_count: (preferences[audio.id]?.play_count || 0) + 1\r\n        });\r\n      } catch (error) {\r\n        console.error('Erro ao atualizar estatísticas de reprodução:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    setIsUploading(true);\r\n    try {\r\n      console.log('Iniciando upload do arquivo:', file.name);\r\n      \r\n      // Upload do arquivo\r\n      const fileExt = file.name.split('.').pop();\r\n      const fileName = `${Math.random()}.${fileExt}`;\r\n      const filePath = `audios/${fileName}`;\r\n\r\n      console.log('Tentando fazer upload para:', filePath);\r\n\r\n      const { data: uploadData, error: uploadError } = await supabase.storage\r\n        .from('media')\r\n        .upload(filePath, file);\r\n\r\n      if (uploadError) {\r\n        console.error('Erro no upload:', uploadError);\r\n        throw uploadError;\r\n      }\r\n\r\n      console.log('Upload bem sucedido:', uploadData);\r\n\r\n      // Obtém a URL pública\r\n      const { data: { publicUrl } } = supabase.storage\r\n        .from('media')\r\n        .getPublicUrl(filePath);\r\n\r\n      console.log('URL pública gerada:', publicUrl);\r\n\r\n      // Adiciona ao banco de dados\r\n      const newAudio = await audioService.addAudio({\r\n        title: file.name,\r\n        url: publicUrl,\r\n        auto_repeat: false,\r\n        repeat_interval: 0,\r\n        play_count: 0\r\n      });\r\n\r\n      console.log('Áudio adicionado ao banco:', newAudio);\r\n\r\n      // Recarrega todos os áudios\r\n      await loadAudios();\r\n      \r\n      // Seleciona o novo áudio\r\n      setCurrentAudio(newAudio);\r\n      \r\n      // Limpa o input\r\n      event.target.value = '';\r\n\r\n    } catch (error) {\r\n      console.error('Erro detalhado no upload:', error);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const startRepeatTimer = async (audioId: string, minutes: number) => {\r\n    setTimerAudioId(audioId);\r\n\r\n    if (timersRef.current[audioId]) {\r\n      clearInterval(timersRef.current[audioId]);\r\n    }\r\n\r\n    const seconds = minutes * 60;\r\n    const endTime = new Date(Date.now() + seconds * 1000).toISOString();\r\n    \r\n    const intervalId = setInterval(() => {\r\n      setAudioTimers(prev => {\r\n        const currentTimer = prev[audioId];\r\n        if (!currentTimer) return prev;\r\n\r\n        const currentTime = Date.now();\r\n        const timerEndTime = new Date(currentTimer.endTime).getTime();\r\n        const newTimeLeft = Math.max(0, Math.floor((timerEndTime - currentTime) / 1000));\r\n\r\n        return {\r\n          ...prev,\r\n          [audioId]: {\r\n            ...currentTimer,\r\n            timeLeft: newTimeLeft\r\n          }\r\n        };\r\n      });\r\n    }, 1000);\r\n\r\n    timersRef.current[audioId] = intervalId;\r\n\r\n    setAudioTimers(prev => ({\r\n      ...prev,\r\n      [audioId]: {\r\n        interval: seconds,\r\n        timeLeft: seconds,\r\n        intervalId,\r\n        endTime\r\n      }\r\n    }));\r\n\r\n    // Salva as preferências no banco\r\n    try {\r\n      await audioService.updatePreferences(audioId, {\r\n        auto_repeat: true,\r\n        repeat_interval: minutes,\r\n        timer_end_at: endTime\r\n      });\r\n    } catch (error) {\r\n      console.error('Erro ao salvar preferências:', error);\r\n    }\r\n  };\r\n\r\n  const stopRepeatTimer = async (audioId: string) => {\r\n    if (timersRef.current[audioId]) {\r\n      clearInterval(timersRef.current[audioId]);\r\n      delete timersRef.current[audioId];\r\n    }\r\n\r\n    setAudioTimers(prev => {\r\n      const newTimers = { ...prev };\r\n      delete newTimers[audioId];\r\n      return newTimers;\r\n    });\r\n\r\n    // Salva as preferências no banco\r\n    try {\r\n      await audioService.updatePreferences(audioId, {\r\n        auto_repeat: false,\r\n        repeat_interval: 0\r\n      });\r\n    } catch (error) {\r\n      console.error('Erro ao salvar preferências:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (audioId: string) => {\r\n    try {\r\n      await audioService.deleteAudio(audioId);\r\n      if (currentAudio?.id === audioId) {\r\n        setCurrentAudio(null);\r\n        setIsPlaying(false);\r\n      }\r\n      await loadAudios();\r\n    } catch (error) {\r\n      console.error('Erro ao deletar áudio:', error);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds: number): string => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = Math.floor(seconds % 60);\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  // Adicione esta função auxiliar para formatar o tempo do timer\r\n  const formatTimeLeft = (seconds: number): string => {\r\n    if (seconds < 60) {\r\n      return `${Math.ceil(seconds)}s`;\r\n    }\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = Math.ceil(seconds % 60);\r\n    return `${minutes}min ${remainingSeconds}s`;\r\n  };\r\n\r\n  // Modifique a função getNextAudioInfo para verificar os timers ativos\r\n  const getNextAudioInfo = () => {\r\n    // Primeiro, verifica se há algum áudio pendente na fila\r\n    if (pendingAudios.length > 0) {\r\n      const nextAudioId = pendingAudios[0];\r\n      const nextAudio = audios.find(a => a.id === nextAudioId);\r\n      const timer = audioTimers[nextAudioId];\r\n      \r\n      return { nextAudio, timer };\r\n    }\r\n\r\n    // Se não há áudios pendentes, procura o próximo áudio agendado\r\n    let nextScheduledAudio = null;\r\n    let shortestTime = Infinity;\r\n\r\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\r\n      if (timer.timeLeft < shortestTime) {\r\n        const audio = audios.find(a => a.id === audioId);\r\n        if (audio) {\r\n          nextScheduledAudio = {\r\n            nextAudio: audio,\r\n            timer: timer\r\n          };\r\n          shortestTime = timer.timeLeft;\r\n        }\r\n      }\r\n    });\r\n\r\n    return nextScheduledAudio;\r\n  };\r\n\r\n  const handleUpdateTitle = async (audioId: string, newTitle: string) => {\r\n    try {\r\n      await audioService.updateAudio(audioId, { title: newTitle });\r\n      // Atualiza o estado local dos áudios\r\n      setAudios(prev => prev.map(audio => \r\n        audio.id === audioId ? { ...audio, title: newTitle } : audio\r\n      ));\r\n      // Se o áudio sendo editado é o atual, atualiza também o currentAudio\r\n      if (currentAudio?.id === audioId) {\r\n        setCurrentAudio(prev => prev ? { ...prev, title: newTitle } : null);\r\n      }\r\n      setEditingAudioId(null);\r\n    } catch (error) {\r\n      console.error('Erro ao atualizar título:', error);\r\n    }\r\n  };\r\n\r\n  const ConfirmDialog = ({ \r\n    audioId, \r\n    onConfirm, \r\n    onCancel,\r\n    buttonPosition\r\n  }: { \r\n    audioId: string;\r\n    onConfirm: () => void;\r\n    onCancel: () => void;\r\n    buttonPosition: { x: number; y: number } | null;\r\n  }) => (\r\n    <div \r\n      className=\"fixed inset-0 z-50\"\r\n      onClick={(e) => {\r\n        if (e.target === e.currentTarget) onCancel();\r\n      }}\r\n    >\r\n      <div \r\n        className=\"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\"\r\n        style={{\r\n          top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\r\n          left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\r\n          transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\r\n          opacity: isAnimating ? 0 : 1,\r\n          transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\r\n        }}\r\n      >\r\n        <h3 className=\"text-[#e1aa1e] font-medium text-sm mb-2\">Desativar Repetição</h3>\r\n        <p className=\"text-gray-300 text-xs mb-4\">\r\n          Deseja realmente desativar a repetição automática?\r\n        </p>\r\n        <div className=\"flex justify-end gap-2\">\r\n          <button\r\n            onClick={onCancel}\r\n            className=\"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\"\r\n          >\r\n            Cancelar\r\n          </button>\r\n          <button\r\n            onClick={onConfirm}\r\n            className=\"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors\"\r\n          >\r\n            Confirmar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const SetTimerDialog = ({ \r\n    audioId, \r\n    audioTitle,\r\n    onConfirm, \r\n    onCancel,\r\n    buttonPosition,\r\n    inputValue,\r\n    onInputChange\r\n  }: { \r\n    audioId: string;\r\n    audioTitle: string;\r\n    onConfirm: (minutes: number) => void;\r\n    onCancel: () => void;\r\n    buttonPosition: { x: number; y: number } | null;\r\n    inputValue: string;\r\n    onInputChange: (value: string) => void;\r\n  }) => {\r\n    return (\r\n      <div className=\"fixed inset-0 z-50\" onClick={(e) => {\r\n        if (e.target === e.currentTarget) onCancel();\r\n      }}>\r\n        <div \r\n          className=\"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\"\r\n          style={{\r\n            top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\r\n            left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\r\n            transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\r\n            opacity: isAnimating ? 0 : 1,\r\n            transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\r\n          }}\r\n        >\r\n          <h3 className=\"text-[#e1aa1e] font-medium text-sm mb-2\">Repetir Áudio</h3>\r\n          <p className=\"text-gray-300 text-xs mb-3 truncate\">\r\n            {audioTitle}\r\n          </p>\r\n          \r\n          <div className=\"relative mb-4\">\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              value={inputValue}\r\n              onChange={(e) => onInputChange(e.target.value)}\r\n              placeholder=\"00\"\r\n              className=\"w-full px-3 py-2 bg-[#1e1e1e] border border-[#404040] rounded text-gray-200 text-center focus:border-[#e1aa1e] focus:outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none pr-12\"\r\n              onKeyDown={(e) => {\r\n                if (e.key === 'Enter') {\r\n                  const value = parseInt(inputValue);\r\n                  if (value > 0) onConfirm(value);\r\n                } else if (e.key === 'Escape') {\r\n                  onCancel();\r\n                }\r\n              }}\r\n              autoFocus\r\n            />\r\n            <span className=\"absolute right-3 top-1/2 -translate-y-1/2 text-xs text-gray-400\">\r\n              minutos\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end gap-2\">\r\n            <button\r\n              onClick={onCancel}\r\n              className=\"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\"\r\n            >\r\n              Cancelar\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                const value = parseInt(inputValue);\r\n                if (value > 0) onConfirm(value);\r\n              }}\r\n              disabled={!inputValue || parseInt(inputValue) <= 0}\r\n              className=\"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              Ativar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleShowTimerDialog = (e: React.MouseEvent, audioId: string) => {\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    setPopupPosition({ \r\n      x: rect.left + rect.width/2, \r\n      y: rect.top + rect.height/2 \r\n    });\r\n    setIsAnimating(true);\r\n    setTimeout(() => {\r\n      setIsAnimating(false);\r\n      setShowTimerDialog(audioId);\r\n    }, 10);\r\n  };\r\n\r\n  const handleShowConfirmDialog = (e: React.MouseEvent, audioId: string) => {\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    setConfirmPosition({ \r\n      x: rect.left + rect.width/2, \r\n      y: rect.top + rect.height/2 \r\n    });\r\n    setIsAnimating(true);\r\n    setTimeout(() => {\r\n      setIsAnimating(false);\r\n      setShowConfirmDialog(audioId);\r\n    }, 10);\r\n  };\r\n\r\n  // Adicione este useEffect para gerenciar a seleção de texto\r\n  useEffect(() => {\r\n    const style = document.createElement('style');\r\n    style.innerHTML = `\r\n      .dragging * {\r\n        user-select: none !important;\r\n        -webkit-user-select: none !important;\r\n        cursor: grabbing !important;\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n    return () => style.remove();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\">\r\n      {/* Player Central */}\r\n      <div className=\"mb-3 bg-[#2d2d2d] rounded-lg p-4 border border-[#404040]\">\r\n        {/* Título do Áudio Centralizado */}\r\n        <div className=\"mb-4 text-center\">\r\n          <h3 className=\"text-[#e1aa1e] font-medium\">\r\n            {currentAudio?.title || 'Selecione um áudio'}\r\n          </h3>\r\n        </div>\r\n\r\n        <audio\r\n          ref={audioRef}\r\n          src={currentAudio?.url}\r\n          onTimeUpdate={handleTimeUpdate}\r\n          onEnded={handleAudioEnd}\r\n          className=\"hidden\"\r\n        />\r\n\r\n        {/* Barra de Progresso */}\r\n        <div\r\n          className=\"h-1 bg-[#404040] rounded-full cursor-pointer mb-4\"\r\n          onClick={handleProgressClick}\r\n        >\r\n          <div\r\n            className=\"h-full bg-[#e1aa1e] rounded-full\"\r\n            style={{ width: `${progress}%` }}\r\n          />\r\n        </div>\r\n\r\n        {/* Tempo */}\r\n        <div className=\"flex justify-between text-xs text-gray-400 mb-3\">\r\n          <span>{formatTime(audioRef.current?.currentTime || 0)}</span>\r\n          <span>{formatTime(audioRef.current?.duration || 0)}</span>\r\n        </div>\r\n\r\n        {/* Layout em duas linhas */}\r\n        <div className=\"space-y-4\">\r\n          {/* Controle de Reprodução Centralizado */}\r\n          <div className=\"flex justify-center\">\r\n            <button\r\n              onClick={() => currentAudio && togglePlay(currentAudio)}\r\n              className=\"p-2 hover:bg-[#404040] rounded-full transition-colors\"\r\n              disabled={!currentAudio}\r\n            >\r\n              <svg\r\n                className=\"w-8 h-8 text-[#e1aa1e]\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                {isPlaying ? (\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                ) : (\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                )}\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Próxima Reprodução - Alinhado à direita */}\r\n          {(() => {\r\n            const nextInfo = getNextAudioInfo();\r\n            if (!nextInfo?.nextAudio) return null;\r\n\r\n            return (\r\n              <div className=\"flex justify-end\">\r\n                <div className=\"text-right bg-[#1e1e1e] px-3 py-1 rounded\">\r\n                  <div className=\"text-xs text-gray-400\">\r\n                    Próximo: {nextInfo.nextAudio.title}\r\n                  </div>\r\n                  {nextInfo.timer && (\r\n                    <div className=\"text-xs text-[#e1aa1e]\">\r\n                      Em {formatTimeLeft(nextInfo.timer.timeLeft)}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })()}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Painel de Controle */}\r\n      <div className=\"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <span className=\"text-sm text-gray-400 px-2\">Lista de Áudios</span>\r\n        </div>\r\n\r\n        {/* Botão de Upload */}\r\n        <div className=\"flex items-center\">\r\n          <label className=\"bg-[#e1aa1e] hover:bg-[#e1aa1e]/80 text-gray-900 px-3 py-1.5 rounded cursor-pointer transition-colors text-sm\">\r\n            {isUploading ? 'Enviando...' : 'Anexar Áudio'}\r\n            <input \r\n              type=\"file\" \r\n              className=\"hidden\" \r\n              accept=\"audio/*\" \r\n              onChange={handleUpload} \r\n              disabled={isUploading} \r\n            />\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Lista de Áudios */}\r\n      <div className=\"space-y-2 max-h-[400px] overflow-y-auto\">\r\n        <div className=\"text-xs text-gray-400 italic mb-2 px-2\">\r\n          Clique no ícone de edição ou dê um duplo clique no nome para renomear\r\n        </div>\r\n\r\n        {audios.map((audio) => (\r\n          <motion.div\r\n            key={audio.id}\r\n            initial={false}\r\n            className=\"flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors min-w-0 bg-[#1e1e1e] mb-2\"\r\n            layout\r\n            transition={{\r\n              layout: {\r\n                duration: 0.3,\r\n                ease: [0.25, 1, 0.5, 1]\r\n              }\r\n            }}\r\n          >\r\n            <button\r\n              onClick={() => togglePlay(audio)}\r\n              className=\"p-1 hover:bg-[#404040] rounded-full transition-colors\"\r\n            >\r\n              <svg\r\n                className=\"w-6 h-6 text-[#e1aa1e]\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                {isPlaying && currentAudio?.id === audio.id ? (\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                ) : (\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                )}\r\n              </svg>\r\n            </button>\r\n\r\n            {editingAudioId === audio.id ? (\r\n              <input\r\n                type=\"text\"\r\n                value={editingTitle}\r\n                onChange={(e) => setEditingTitle(e.target.value)}\r\n                onBlur={() => {\r\n                  if (editingTitle.trim() && editingTitle !== audio.title) {\r\n                    handleUpdateTitle(audio.id, editingTitle);\r\n                  } else {\r\n                    setEditingAudioId(null);\r\n                  }\r\n                }}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === 'Enter') {\r\n                    if (editingTitle.trim() && editingTitle !== audio.title) {\r\n                      handleUpdateTitle(audio.id, editingTitle);\r\n                    } else {\r\n                      setEditingAudioId(null);\r\n                    }\r\n                  } else if (e.key === 'Escape') {\r\n                    setEditingAudioId(null);\r\n                  }\r\n                }}\r\n                className=\"flex-1 bg-[#1e1e1e] text-gray-200 px-2 py-1 rounded border border-[#404040] focus:border-[#e1aa1e] focus:outline-none\"\r\n                autoFocus\r\n              />\r\n            ) : (\r\n              <div className=\"flex-1 flex items-center group\">\r\n                <div className=\"flex-1 flex items-center\">\r\n                <span \r\n                    className=\"truncate cursor-pointer hover:text-[#e1aa1e]\"\r\n                  onDoubleClick={() => {\r\n                    setEditingAudioId(audio.id);\r\n                    setEditingTitle(audio.title);\r\n                  }}\r\n                >\r\n                  {audio.title}\r\n                </span>\r\n                <button\r\n                  onClick={() => {\r\n                    setEditingAudioId(audio.id);\r\n                    setEditingTitle(audio.title);\r\n                  }}\r\n                    className=\"p-1 rounded-full hover:bg-[#404040] opacity-0 group-hover:opacity-100 transition-all ml-1\"\r\n                  title=\"Editar nome\"\r\n                >\r\n                  <svg\r\n                      className=\"w-4 h-4 text-[#e1aa1e]\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"flex items-center gap-2 shrink-0\">\r\n                {audioTimers[audio.id] ? (\r\n                  <button\r\n                    onClick={(e) => {\r\n                      handleShowConfirmDialog(e, audio.id);\r\n                    }}\r\n                    className=\"flex items-center gap-1.5 px-2 py-1 rounded bg-[#e1aa1e]/10 text-[#e1aa1e] hover:bg-[#e1aa1e]/20 transition-colors\"\r\n                    title=\"Clique para desativar a repetição\"\r\n                  >\r\n                    <svg\r\n                      className=\"w-4 h-4\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\r\n                      />\r\n                    </svg>\r\n                    <span className=\"text-sm\">\r\n                      {formatTimeLeft(audioTimers[audio.id].timeLeft)}\r\n                    </span>\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    onClick={(e) => {\r\n                      handleShowTimerDialog(e, audio.id);\r\n                    }}\r\n                    className=\"p-1.5 hover:bg-[#404040] rounded transition-colors text-gray-400 hover:text-[#e1aa1e]\"\r\n                    title=\"Ativar repetição automática\"\r\n                  >\r\n                    <svg\r\n                      className=\"w-4 h-4\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\r\n                      />\r\n                    </svg>\r\n                  </button>\r\n                )}\r\n\r\n              <button\r\n                onClick={() => handleDelete(audio.id)}\r\n                className=\"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\"\r\n              >\r\n                <svg\r\n                  className=\"w-5 h-5\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </motion.div>\r\n        ))}\r\n      </div>\r\n\r\n      {showTimerDialog && (\r\n        <SetTimerDialog\r\n          audioId={showTimerDialog}\r\n          audioTitle={audios.find(a => a.id === showTimerDialog)?.title || ''}\r\n          onConfirm={(minutes) => {\r\n            startRepeatTimer(showTimerDialog, minutes);\r\n            setShowTimerDialog(null);\r\n            setPopupPosition(null);\r\n            setTimerInputValue('');\r\n          }}\r\n          onCancel={() => {\r\n            setShowTimerDialog(null);\r\n            setPopupPosition(null);\r\n            setTimerInputValue('');\r\n          }}\r\n          buttonPosition={popupPosition}\r\n          inputValue={timerInputValue}\r\n          onInputChange={setTimerInputValue}\r\n        />\r\n      )}\r\n\r\n      {showConfirmDialog && (\r\n        <ConfirmDialog\r\n          audioId={showConfirmDialog}\r\n          onConfirm={() => {\r\n            stopRepeatTimer(showConfirmDialog);\r\n            setShowConfirmDialog(null);\r\n            setConfirmPosition(null);\r\n          }}\r\n          onCancel={() => {\r\n            setShowConfirmDialog(null);\r\n            setConfirmPosition(null);\r\n          }}\r\n          buttonPosition={confirmPosition}\r\n        />\r\n      )}\r\n      </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default AudioPlayer; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,YAAY,QAAmB,iBAAiB;AACzD,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAO,0BAA0B;AACjC,SAASC,MAAM,QAAyB,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAexD,MAAMC,WAAuC,GAAGA,CAAC;EAAEC,OAAO;EAAEC,SAAS;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,kBAAA,EAAAC,kBAAA,EAAAC,YAAA;EACxF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAc,EAAE,CAAC;EACrD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAmB,IAAI,CAAC;EACxE,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMwB,QAAQ,GAAGtB,MAAM,CAAmB,IAAI,CAAC;EAC/C,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAA6B,CAAC,CAAC,CAAC;EAC9E,MAAM2B,SAAS,GAAGzB,MAAM,CAAiC,CAAC,CAAC,CAAC;EAC5D,MAAM,CAAC0B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAgB,IAAI,CAAC;EACrE,MAAM,CAAC8B,cAAc,EAAEC,iBAAiB,CAAC,GAAG/B,QAAQ,CAAgB,IAAI,CAAC;EACzE,MAAM,CAACgC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjC,QAAQ,CAAW,EAAE,CAAC;EAChE,MAAMkC,cAAc,GAAGhC,MAAM,CAAwB,IAAI,CAAC;EAC1D,MAAM,CAACiC,cAAc,EAAEC,iBAAiB,CAAC,GAAGpC,QAAQ,CAAgB,IAAI,CAAC;EACzE,MAAM,CAACqC,YAAY,EAAEC,eAAe,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACuC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGxC,QAAQ,CAAgB,IAAI,CAAC;EAC/E,MAAM,CAACyC,eAAe,EAAEC,kBAAkB,CAAC,GAAG1C,QAAQ,CAAgB,IAAI,CAAC;EAC3E,MAAM,CAAC2C,aAAa,EAAEC,gBAAgB,CAAC,GAAG5C,QAAQ,CAAkC,IAAI,CAAC;EACzF,MAAM,CAAC6C,eAAe,EAAEC,kBAAkB,CAAC,GAAG9C,QAAQ,CAAkC,IAAI,CAAC;EAC7F,MAAM,CAAC+C,WAAW,EAAEC,cAAc,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACiD,eAAe,EAAEC,kBAAkB,CAAC,GAAGlD,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACmD,WAAW,EAAEC,cAAc,CAAC,GAAGpD,QAAQ,CAK1C,CAAC,CAAC,CAAC;EAEPC,SAAS,CAAC,MAAM;IACdoD,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAENpD,SAAS,CAAC,MAAM;IACd,MAAMqD,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI,CAAC9B,QAAQ,CAAC+B,OAAO,EAAE;MAEvB,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;QAC3C,MAAMjC,QAAQ,CAAC+B,OAAO,CAACG,IAAI,CAAC,CAAC;QAC7BF,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;QACzCE,MAAM,CAACC,aAAa,CAAC,IAAIC,KAAK,CAAC,WAAW,CAAC,CAAC;MAC9C,CAAC,CAAC,OAAOC,KAAc,EAAE;QACvBN,OAAO,CAACM,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjD,IAAIA,KAAK,YAAYC,KAAK,IAAID,KAAK,CAACE,IAAI,KAAK,YAAY,EAAE;UACzD;UACA,IAAI9B,cAAc,CAACqB,OAAO,EAAE;YAC1BU,YAAY,CAAC/B,cAAc,CAACqB,OAAO,CAAC;UACtC;;UAEA;UACArB,cAAc,CAACqB,OAAO,GAAGW,UAAU,CAAC,YAAY;YAC9C,IAAI;cAAA,IAAAC,iBAAA;cACFX,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;cAC/C,QAAAU,iBAAA,GAAM3C,QAAQ,CAAC+B,OAAO,cAAAY,iBAAA,uBAAhBA,iBAAA,CAAkBT,IAAI,CAAC,CAAC;cAC9BF,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;cAClDE,MAAM,CAACC,aAAa,CAAC,IAAIC,KAAK,CAAC,WAAW,CAAC,CAAC;YAC9C,CAAC,CAAC,OAAOO,UAAU,EAAE;cACnBZ,OAAO,CAACM,KAAK,CAAC,4BAA4B,EAAEM,UAAU,CAAC;cACvDzD,YAAY,CAAC,KAAK,CAAC;YACrB;UACF,CAAC,EAAE,GAAG,CAAC;QACT,CAAC,MAAM;UACLA,YAAY,CAAC,KAAK,CAAC;QACrB;MACF;IACF,CAAC;IAED,IAAIa,QAAQ,CAAC+B,OAAO,EAAE;MACpB,IAAI7C,SAAS,EAAE;QACb;QACA,IAAIwB,cAAc,CAACqB,OAAO,EAAE;UAC1BU,YAAY,CAAC/B,cAAc,CAACqB,OAAO,CAAC;UACpCrB,cAAc,CAACqB,OAAO,GAAG,IAAI;QAC/B;;QAEA;QACArB,cAAc,CAACqB,OAAO,GAAGW,UAAU,CAAC,MAAM;UACxCZ,SAAS,CAAC,CAAC;QACb,CAAC,EAAE,GAAG,CAAC;MACT,CAAC,MAAM;QACL;QACA,IAAIpB,cAAc,CAACqB,OAAO,EAAE;UAC1BU,YAAY,CAAC/B,cAAc,CAACqB,OAAO,CAAC;UACpCrB,cAAc,CAACqB,OAAO,GAAG,IAAI;QAC/B;QACA/B,QAAQ,CAAC+B,OAAO,CAACc,KAAK,CAAC,CAAC;QACxBV,MAAM,CAACC,aAAa,CAAC,IAAIC,KAAK,CAAC,WAAW,CAAC,CAAC;MAC9C;IACF;;IAEA;IACA,OAAO,MAAM;MACX,IAAI3B,cAAc,CAACqB,OAAO,EAAE;QAC1BU,YAAY,CAAC/B,cAAc,CAACqB,OAAO,CAAC;QACpCrB,cAAc,CAACqB,OAAO,GAAG,IAAI;MAC/B;IACF,CAAC;EACH,CAAC,EAAE,CAAC7C,SAAS,CAAC,CAAC;EAEfT,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXqE,MAAM,CAACC,MAAM,CAAC5C,SAAS,CAAC4B,OAAO,CAAC,CAACiB,OAAO,CAACC,KAAK,IAAI;QAChDC,aAAa,CAACD,KAAK,CAAC;MACtB,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENxE,SAAS,CAAC,MAAM;IACd,IAAIuB,QAAQ,CAAC+B,OAAO,EAAE;MACpB/B,QAAQ,CAAC+B,OAAO,CAACoB,OAAO,GAAG,MAAM;QAC/BnB,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;QAC7CmB,cAAc,CAAC,CAAC;MAClB,CAAC;MAEDpD,QAAQ,CAAC+B,OAAO,CAACsB,YAAY,GAAG,MAAM;QACpC,IAAInE,SAAS,EAAE;UAAA,IAAAoE,kBAAA;UACb,CAAAA,kBAAA,GAAAtD,QAAQ,CAAC+B,OAAO,cAAAuB,kBAAA,uBAAhBA,kBAAA,CAAkBpB,IAAI,CAAC,CAAC,CAACqB,KAAK,CAACjB,KAAK,IAAI;YACtCN,OAAO,CAACM,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;YACnEnD,YAAY,CAAC,KAAK,CAAC;UACrB,CAAC,CAAC;QACJ;MACF,CAAC;IACH;EACF,CAAC,EAAE,CAACa,QAAQ,CAAC+B,OAAO,CAAC,CAAC;EAEtBtD,SAAS,CAAC,MAAM;IACdqE,MAAM,CAACU,OAAO,CAACvD,WAAW,CAAC,CAAC+C,OAAO,CAAC,CAAC,CAACS,OAAO,EAAER,KAAK,CAAC,KAAK;MACxD,IAAIA,KAAK,CAACS,QAAQ,KAAK,CAAC,EAAE;QACxBxD,cAAc,CAACyD,IAAI,KAAK;UACtB,GAAGA,IAAI;UACP,CAACF,OAAO,GAAG;YACT,GAAGR,KAAK;YACRS,QAAQ,EAAET,KAAK,CAACW;UAClB;QACF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC1E,SAAS,EAAE;UACd,MAAM2E,KAAK,GAAGrE,MAAM,CAACsE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKP,OAAO,CAAC;UAChD,IAAII,KAAK,IAAI7D,QAAQ,CAAC+B,OAAO,EAAE;YAC7B,MAAMkC,aAAa,GAAG,MAAAA,CAAA,KAAY;cAChC,IAAI;gBACF,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIzB,UAAU,CAACyB,OAAO,EAAE,GAAG,CAAC,CAAC;gBACtDxE,eAAe,CAACkE,KAAK,CAAC;gBAEtB,IAAI7D,QAAQ,CAAC+B,OAAO,EAAE;kBACpB/B,QAAQ,CAAC+B,OAAO,CAACqC,WAAW,GAAG,CAAC;kBAChCpC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAE4B,KAAK,CAACQ,KAAK,CAAC;kBACjE,MAAMrE,QAAQ,CAAC+B,OAAO,CAACG,IAAI,CAAC,CAAC;kBAC7B/C,YAAY,CAAC,IAAI,CAAC;kBAClB6C,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;gBACtD;cACF,CAAC,CAAC,OAAOK,KAAK,EAAE;gBACdN,OAAO,CAACM,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;gBAC5D,IAAIA,KAAK,YAAYC,KAAK,IAAID,KAAK,CAACE,IAAI,KAAK,YAAY,EAAE;kBACzDR,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;kBACjDS,UAAU,CAAC,YAAY;oBACrB,IAAI;sBACF,IAAI1C,QAAQ,CAAC+B,OAAO,EAAE;wBACpB,MAAM/B,QAAQ,CAAC+B,OAAO,CAACG,IAAI,CAAC,CAAC;wBAC7B/C,YAAY,CAAC,IAAI,CAAC;wBAClB6C,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;sBAC/D;oBACF,CAAC,CAAC,OAAOW,UAAU,EAAE;sBACnBZ,OAAO,CAACM,KAAK,CAAC,6BAA6B,EAAEM,UAAU,CAAC;sBACxDZ,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;sBACzDxB,gBAAgB,CAACkD,IAAI,IACnBA,IAAI,CAACW,QAAQ,CAACb,OAAO,CAAC,GAAGE,IAAI,GAAG,CAAC,GAAGA,IAAI,EAAEF,OAAO,CACnD,CAAC;oBACH;kBACF,CAAC,EAAE,IAAI,CAAC;gBACV;cACF;YACF,CAAC;YAEDQ,aAAa,CAAC,CAAC;UACjB;QACF,CAAC,MAAM;UACLjC,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEwB,OAAO,CAAC;UAC9DhD,gBAAgB,CAACkD,IAAI,IAAI;YACvB,IAAIA,IAAI,CAACW,QAAQ,CAACb,OAAO,CAAC,EAAE,OAAOE,IAAI;YACvC3B,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,CAAC,GAAG0B,IAAI,EAAEF,OAAO,CAAC,CAAC;YACnD,OAAO,CAAC,GAAGE,IAAI,EAAEF,OAAO,CAAC;UAC3B,CAAC,CAAC;QACJ;MACF;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACxD,WAAW,EAAET,MAAM,EAAEN,SAAS,CAAC,CAAC;EAEpCT,SAAS,CAAC,MAAM;IACd;IACA,MAAM8F,cAAc,GAAGC,WAAW,CAAC,MAAM;MACvChF,MAAM,CAACwD,OAAO,CAACa,KAAK,IAAI;QACtB,MAAMY,KAAK,GAAG9C,WAAW,CAACkC,KAAK,CAACG,EAAE,CAAC;QACnC,IAAIS,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEC,WAAW,IAAIzE,WAAW,CAAC4D,KAAK,CAACG,EAAE,CAAC,EAAE;UAC/C,MAAMf,KAAK,GAAGhD,WAAW,CAAC4D,KAAK,CAACG,EAAE,CAAC;UACnC,MAAMI,WAAW,GAAGO,IAAI,CAACC,GAAG,CAAC,CAAC;UAC9B,MAAMC,OAAO,GAAG,IAAIF,IAAI,CAAC1B,KAAK,CAAC4B,OAAO,CAAC,CAACC,OAAO,CAAC,CAAC;UACjD,MAAMpB,QAAQ,GAAGqB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAAC,CAACJ,OAAO,GAAGT,WAAW,IAAI,IAAI,CAAC,CAAC;UAExE,IAAIV,QAAQ,KAAKT,KAAK,CAACS,QAAQ,EAAE;YAC/BxD,cAAc,CAACyD,IAAI,KAAK;cACtB,GAAGA,IAAI;cACP,CAACE,KAAK,CAACG,EAAE,GAAG;gBACV,GAAGf,KAAK;gBACRS;cACF;YACF,CAAC,CAAC,CAAC;UACL;QACF;MACF,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMR,aAAa,CAACqB,cAAc,CAAC;EAC5C,CAAC,EAAE,CAAC/E,MAAM,EAAEmC,WAAW,EAAE1B,WAAW,CAAC,CAAC;EAEtC,MAAM4B,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMqD,IAAI,GAAG,MAAMvG,YAAY,CAACwG,SAAS,CAAC,CAAC;MAC3C1F,SAAS,CAACyF,IAAI,CAAC;;MAEf;MACAA,IAAI,CAAClC,OAAO,CAACa,KAAK,IAAI;QACpBuB,oBAAoB,CAACvB,KAAK,CAACG,EAAE,CAAC;MAChC,CAAC,CAAC;IACJ,CAAC,CAAC,OAAO1B,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAM8C,oBAAoB,GAAG,MAAO3B,OAAe,IAAK;IACtD,IAAI;MACF,MAAMgB,KAAK,GAAG,MAAM9F,YAAY,CAAC0G,eAAe,CAAC5B,OAAO,CAAC;MAEzD,IAAIgB,KAAK,CAACC,WAAW,IAAID,KAAK,CAACa,YAAY,EAAE;QAC3C,MAAMT,OAAO,GAAG,IAAIF,IAAI,CAACF,KAAK,CAACa,YAAY,CAAC,CAACR,OAAO,CAAC,CAAC;QACtD,MAAMF,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;QACtB,MAAMlB,QAAQ,GAAGqB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAAC,CAACJ,OAAO,GAAGD,GAAG,IAAI,IAAI,CAAC,CAAC;QAEhE,IAAIlB,QAAQ,GAAG,CAAC,EAAE;UAChB,MAAM6B,OAAO,GAAGR,IAAI,CAACS,IAAI,CAAC9B,QAAQ,GAAG,EAAE,CAAC;UACxC,MAAM+B,UAAU,GAAGjB,WAAW,CAAC,MAAM;YACnCtE,cAAc,CAACyD,IAAI,IAAI;cACrB,MAAM+B,YAAY,GAAG/B,IAAI,CAACF,OAAO,CAAC;cAClC,IAAI,CAACiC,YAAY,EAAE,OAAO/B,IAAI;cAE9B,MAAMS,WAAW,GAAGO,IAAI,CAACC,GAAG,CAAC,CAAC;cAC9B,MAAMe,YAAY,GAAG,IAAIhB,IAAI,CAACe,YAAY,CAACb,OAAO,CAAC,CAACC,OAAO,CAAC,CAAC;cAC7D,MAAMc,WAAW,GAAGb,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAAC,CAACU,YAAY,GAAGvB,WAAW,IAAI,IAAI,CAAC,CAAC;cAEhF,OAAO;gBACL,GAAGT,IAAI;gBACP,CAACF,OAAO,GAAG;kBACT,GAAGiC,YAAY;kBACfhC,QAAQ,EAAEkC;gBACZ;cACF,CAAC;YACH,CAAC,CAAC;UACJ,CAAC,EAAE,IAAI,CAAC;UAERzF,SAAS,CAAC4B,OAAO,CAAC0B,OAAO,CAAC,GAAGgC,UAAU;UAEvCvF,cAAc,CAACyD,IAAI,KAAK;YACtB,GAAGA,IAAI;YACP,CAACF,OAAO,GAAG;cACTG,QAAQ,EAAE2B,OAAO,GAAG,EAAE;cACtB7B,QAAQ;cACR+B,UAAU;cACVZ,OAAO,EAAEJ,KAAK,CAACa;YACjB;UACF,CAAC,CAAC,CAAC;QACL,CAAC,MAAM;UACL,MAAM3G,YAAY,CAACkH,iBAAiB,CAACpC,OAAO,EAAE;YAC5CiB,WAAW,EAAE,KAAK;YAClBY,YAAY,EAAEQ;UAChB,CAAC,CAAC;QACJ;MACF;MAEAlE,cAAc,CAAC+B,IAAI,KAAK;QACtB,GAAGA,IAAI;QACP,CAACF,OAAO,GAAG;UACTiB,WAAW,EAAED,KAAK,CAACC,WAAW,IAAI,KAAK;UACvCqB,eAAe,EAAEtB,KAAK,CAACsB,eAAe,IAAI,CAAC;UAC3CC,cAAc,EAAEvB,KAAK,CAACuB,cAAc;UACpCC,UAAU,EAAExB,KAAK,CAACwB,UAAU,IAAI;QAClC;MACF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAO3D,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,MAAM4D,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIlG,QAAQ,CAAC+B,OAAO,EAAE;MACpB,MAAMnC,QAAQ,GAAII,QAAQ,CAAC+B,OAAO,CAACqC,WAAW,GAAGpE,QAAQ,CAAC+B,OAAO,CAACoE,QAAQ,GAAI,GAAG;MACjFtG,WAAW,CAACD,QAAQ,CAAC;IACvB;EACF,CAAC;EAED,MAAMwG,mBAAmB,GAAIC,CAAmC,IAAK;IACnE,IAAIrG,QAAQ,CAAC+B,OAAO,EAAE;MACpB,MAAMuE,MAAM,GAAGD,CAAC,CAACE,aAAa,CAACC,qBAAqB,CAAC,CAAC;MACtD,MAAMC,CAAC,GAAGJ,CAAC,CAACK,OAAO,GAAGJ,MAAM,CAACK,IAAI;MACjC,MAAMC,KAAK,GAAGN,MAAM,CAACM,KAAK;MAC1B,MAAMC,UAAU,GAAGJ,CAAC,GAAGG,KAAK;MAC5B5G,QAAQ,CAAC+B,OAAO,CAACqC,WAAW,GAAGpE,QAAQ,CAAC+B,OAAO,CAACoE,QAAQ,GAAGU,UAAU;IACvE;EACF,CAAC;EAED,MAAMzD,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjCpB,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;IAEvD,IAAIvB,cAAc,CAACqB,OAAO,EAAE;MAC1BU,YAAY,CAAC/B,cAAc,CAACqB,OAAO,CAAC;MACpCrB,cAAc,CAACqB,OAAO,GAAG,IAAI;IAC/B;IAEA,IAAI/B,QAAQ,CAAC+B,OAAO,EAAE;MACpB/B,QAAQ,CAAC+B,OAAO,CAACqC,WAAW,GAAG,CAAC;IAClC;IACAvE,WAAW,CAAC,CAAC,CAAC;;IAEd;IACA,MAAMiH,SAAS,GAAGpH,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEsE,EAAE;IAClC,IAAI8C,SAAS,IAAI7G,WAAW,CAAC6G,SAAS,CAAC,EAAE;MACvC,MAAM7D,KAAK,GAAGhD,WAAW,CAAC6G,SAAS,CAAC;MACpC,MAAM1C,WAAW,GAAGO,IAAI,CAACC,GAAG,CAAC,CAAC;MAC9B,MAAMC,OAAO,GAAG,IAAIF,IAAI,CAAC1B,KAAK,CAAC4B,OAAO,CAAC,CAACC,OAAO,CAAC,CAAC;MACjD,MAAMpB,QAAQ,GAAGqB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAAC,CAACJ,OAAO,GAAGT,WAAW,IAAI,IAAI,CAAC,CAAC;;MAExE;MACA,IAAIV,QAAQ,GAAG,CAAC,EAAE;QAChB1B,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;QAC3D,MAAM,IAAIiC,OAAO,CAACC,OAAO,IAAIzB,UAAU,CAACyB,OAAO,EAAE,GAAG,CAAC,CAAC;QACtD,IAAInE,QAAQ,CAAC+B,OAAO,EAAE;UACpB/B,QAAQ,CAAC+B,OAAO,CAACG,IAAI,CAAC,CAAC;UACvB/C,YAAY,CAAC,IAAI,CAAC;UAClB,OAAO,CAAC;QACV;MACF;IACF;;IAEA;IACA,MAAM,IAAI+E,OAAO,CAACC,OAAO,IAAIzB,UAAU,CAACyB,OAAO,EAAE,GAAG,CAAC,CAAC;IAEtD,IAAI3D,aAAa,CAACuG,MAAM,GAAG,CAAC,EAAE;MAC5B,IAAI;QACF/E,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;QAChE,MAAM+E,WAAW,GAAGxG,aAAa,CAAC,CAAC,CAAC;QACpC,MAAMyG,SAAS,GAAGzH,MAAM,CAACsE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKgD,WAAW,CAAC;QAExDvG,gBAAgB,CAACkD,IAAI,IAAIA,IAAI,CAACuD,KAAK,CAAC,CAAC,CAAC,CAAC;QAEvC,IAAID,SAAS,EAAE;UACbjF,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEgF,SAAS,CAAC5C,KAAK,CAAC;UACvE,MAAM,IAAIH,OAAO,CAACC,OAAO,IAAIzB,UAAU,CAACyB,OAAO,EAAE,GAAG,CAAC,CAAC;UACtDxE,eAAe,CAACsH,SAAS,CAAC;UAC1B9H,YAAY,CAAC,IAAI,CAAC;QACpB;MACF,CAAC,CAAC,OAAOmD,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QACzDnD,YAAY,CAAC,KAAK,CAAC;QACnBF,OAAO,CAAC,CAAC;MACX;IACF,CAAC,MAAM;MACL+C,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtC9C,YAAY,CAAC,KAAK,CAAC;MACnBF,OAAO,CAAC,CAAC;IACX;IAEAkD,MAAM,CAACC,aAAa,CAAC,IAAIC,KAAK,CAAC,WAAW,CAAC,CAAC;EAC9C,CAAC;EAED,MAAM8E,UAAU,GAAG,MAAOtD,KAAgB,IAAK;IAC7C,IAAI,CAAAnE,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEsE,EAAE,MAAKH,KAAK,CAACG,EAAE,EAAE;MACjC7E,YAAY,CAAC,CAACD,SAAS,CAAC;IAC1B,CAAC,MAAM;MACL8C,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MAClDtC,eAAe,CAACkE,KAAK,CAAC;MACtB,IAAI7D,QAAQ,CAAC+B,OAAO,EAAE;QACpB/B,QAAQ,CAAC+B,OAAO,CAACqC,WAAW,GAAG,CAAC;MAClC;MACAjF,YAAY,CAAC,IAAI,CAAC;MAClB;MACA;IACF;IAEA,IAAI,CAACD,SAAS,EAAE;MACd,IAAI;QAAA,IAAAkI,qBAAA;QACF,MAAMzI,YAAY,CAACkH,iBAAiB,CAAChC,KAAK,CAACG,EAAE,EAAE;UAC7CgC,cAAc,EAAE,IAAIrB,IAAI,CAAC,CAAC,CAAC0C,WAAW,CAAC,CAAC;UACxCpB,UAAU,EAAE,CAAC,EAAAmB,qBAAA,GAAAzF,WAAW,CAACkC,KAAK,CAACG,EAAE,CAAC,cAAAoD,qBAAA,uBAArBA,qBAAA,CAAuBnB,UAAU,KAAI,CAAC,IAAI;QACzD,CAAC,CAAC;MACJ,CAAC,CAAC,OAAO3D,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACvE;IACF;EACF,CAAC;EAED,MAAMgF,YAAY,GAAG,MAAOC,KAA0C,IAAK;IAAA,IAAAC,mBAAA;IACzE,MAAMC,IAAI,IAAAD,mBAAA,GAAGD,KAAK,CAACG,MAAM,CAACC,KAAK,cAAAH,mBAAA,uBAAlBA,mBAAA,CAAqB,CAAC,CAAC;IACpC,IAAI,CAACC,IAAI,EAAE;IAEX1H,cAAc,CAAC,IAAI,CAAC;IACpB,IAAI;MACFiC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEwF,IAAI,CAACjF,IAAI,CAAC;;MAEtD;MACA,MAAMoF,OAAO,GAAGH,IAAI,CAACjF,IAAI,CAACqF,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;MAC1C,MAAMC,QAAQ,GAAG,GAAGhD,IAAI,CAACiD,MAAM,CAAC,CAAC,IAAIJ,OAAO,EAAE;MAC9C,MAAMK,QAAQ,GAAG,UAAUF,QAAQ,EAAE;MAErC/F,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEgG,QAAQ,CAAC;MAEpD,MAAM;QAAE/C,IAAI,EAAEgD,UAAU;QAAE5F,KAAK,EAAE6F;MAAY,CAAC,GAAG,MAAMvJ,QAAQ,CAACwJ,OAAO,CACpEC,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAACL,QAAQ,EAAER,IAAI,CAAC;MAEzB,IAAIU,WAAW,EAAE;QACfnG,OAAO,CAACM,KAAK,CAAC,iBAAiB,EAAE6F,WAAW,CAAC;QAC7C,MAAMA,WAAW;MACnB;MAEAnG,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEiG,UAAU,CAAC;;MAE/C;MACA,MAAM;QAAEhD,IAAI,EAAE;UAAEqD;QAAU;MAAE,CAAC,GAAG3J,QAAQ,CAACwJ,OAAO,CAC7CC,IAAI,CAAC,OAAO,CAAC,CACbG,YAAY,CAACP,QAAQ,CAAC;MAEzBjG,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEsG,SAAS,CAAC;;MAE7C;MACA,MAAME,QAAQ,GAAG,MAAM9J,YAAY,CAAC+J,QAAQ,CAAC;QAC3CrE,KAAK,EAAEoD,IAAI,CAACjF,IAAI;QAChBmG,GAAG,EAAEJ,SAAS;QACd7D,WAAW,EAAE,KAAK;QAClBqB,eAAe,EAAE,CAAC;QAClBE,UAAU,EAAE;MACd,CAAC,CAAC;MAEFjE,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEwG,QAAQ,CAAC;;MAEnD;MACA,MAAM5G,UAAU,CAAC,CAAC;;MAElB;MACAlC,eAAe,CAAC8I,QAAQ,CAAC;;MAEzB;MACAlB,KAAK,CAACG,MAAM,CAACkB,KAAK,GAAG,EAAE;IAEzB,CAAC,CAAC,OAAOtG,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,SAAS;MACRvC,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,MAAM8I,gBAAgB,GAAG,MAAAA,CAAOpF,OAAe,EAAE8B,OAAe,KAAK;IACnElF,eAAe,CAACoD,OAAO,CAAC;IAExB,IAAItD,SAAS,CAAC4B,OAAO,CAAC0B,OAAO,CAAC,EAAE;MAC9BP,aAAa,CAAC/C,SAAS,CAAC4B,OAAO,CAAC0B,OAAO,CAAC,CAAC;IAC3C;IAEA,MAAMqF,OAAO,GAAGvD,OAAO,GAAG,EAAE;IAC5B,MAAMV,OAAO,GAAG,IAAIF,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGkE,OAAO,GAAG,IAAI,CAAC,CAACzB,WAAW,CAAC,CAAC;IAEnE,MAAM5B,UAAU,GAAGjB,WAAW,CAAC,MAAM;MACnCtE,cAAc,CAACyD,IAAI,IAAI;QACrB,MAAM+B,YAAY,GAAG/B,IAAI,CAACF,OAAO,CAAC;QAClC,IAAI,CAACiC,YAAY,EAAE,OAAO/B,IAAI;QAE9B,MAAMS,WAAW,GAAGO,IAAI,CAACC,GAAG,CAAC,CAAC;QAC9B,MAAMe,YAAY,GAAG,IAAIhB,IAAI,CAACe,YAAY,CAACb,OAAO,CAAC,CAACC,OAAO,CAAC,CAAC;QAC7D,MAAMc,WAAW,GAAGb,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAAC,CAACU,YAAY,GAAGvB,WAAW,IAAI,IAAI,CAAC,CAAC;QAEhF,OAAO;UACL,GAAGT,IAAI;UACP,CAACF,OAAO,GAAG;YACT,GAAGiC,YAAY;YACfhC,QAAQ,EAAEkC;UACZ;QACF,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;IAERzF,SAAS,CAAC4B,OAAO,CAAC0B,OAAO,CAAC,GAAGgC,UAAU;IAEvCvF,cAAc,CAACyD,IAAI,KAAK;MACtB,GAAGA,IAAI;MACP,CAACF,OAAO,GAAG;QACTG,QAAQ,EAAEkF,OAAO;QACjBpF,QAAQ,EAAEoF,OAAO;QACjBrD,UAAU;QACVZ;MACF;IACF,CAAC,CAAC,CAAC;;IAEH;IACA,IAAI;MACF,MAAMlG,YAAY,CAACkH,iBAAiB,CAACpC,OAAO,EAAE;QAC5CiB,WAAW,EAAE,IAAI;QACjBqB,eAAe,EAAER,OAAO;QACxBD,YAAY,EAAET;MAChB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOvC,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAMyG,eAAe,GAAG,MAAOtF,OAAe,IAAK;IACjD,IAAItD,SAAS,CAAC4B,OAAO,CAAC0B,OAAO,CAAC,EAAE;MAC9BP,aAAa,CAAC/C,SAAS,CAAC4B,OAAO,CAAC0B,OAAO,CAAC,CAAC;MACzC,OAAOtD,SAAS,CAAC4B,OAAO,CAAC0B,OAAO,CAAC;IACnC;IAEAvD,cAAc,CAACyD,IAAI,IAAI;MACrB,MAAMqF,SAAS,GAAG;QAAE,GAAGrF;MAAK,CAAC;MAC7B,OAAOqF,SAAS,CAACvF,OAAO,CAAC;MACzB,OAAOuF,SAAS;IAClB,CAAC,CAAC;;IAEF;IACA,IAAI;MACF,MAAMrK,YAAY,CAACkH,iBAAiB,CAACpC,OAAO,EAAE;QAC5CiB,WAAW,EAAE,KAAK;QAClBqB,eAAe,EAAE;MACnB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOzD,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAM2G,YAAY,GAAG,MAAOxF,OAAe,IAAK;IAC9C,IAAI;MACF,MAAM9E,YAAY,CAACuK,WAAW,CAACzF,OAAO,CAAC;MACvC,IAAI,CAAA/D,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEsE,EAAE,MAAKP,OAAO,EAAE;QAChC9D,eAAe,CAAC,IAAI,CAAC;QACrBR,YAAY,CAAC,KAAK,CAAC;MACrB;MACA,MAAM0C,UAAU,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAM6G,UAAU,GAAIL,OAAe,IAAa;IAC9C,MAAMM,IAAI,GAAGrE,IAAI,CAACE,KAAK,CAAC6D,OAAO,GAAG,EAAE,CAAC;IACrC,MAAMO,IAAI,GAAGtE,IAAI,CAACE,KAAK,CAAC6D,OAAO,GAAG,EAAE,CAAC;IACrC,OAAO,GAAGM,IAAI,IAAIC,IAAI,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EACtD,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIV,OAAe,IAAa;IAClD,IAAIA,OAAO,GAAG,EAAE,EAAE;MAChB,OAAO,GAAG/D,IAAI,CAACS,IAAI,CAACsD,OAAO,CAAC,GAAG;IACjC;IACA,MAAMvD,OAAO,GAAGR,IAAI,CAACE,KAAK,CAAC6D,OAAO,GAAG,EAAE,CAAC;IACxC,MAAMW,gBAAgB,GAAG1E,IAAI,CAACS,IAAI,CAACsD,OAAO,GAAG,EAAE,CAAC;IAChD,OAAO,GAAGvD,OAAO,OAAOkE,gBAAgB,GAAG;EAC7C,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACA,IAAIlJ,aAAa,CAACuG,MAAM,GAAG,CAAC,EAAE;MAC5B,MAAMC,WAAW,GAAGxG,aAAa,CAAC,CAAC,CAAC;MACpC,MAAMyG,SAAS,GAAGzH,MAAM,CAACsE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKgD,WAAW,CAAC;MACxD,MAAM/D,KAAK,GAAGhD,WAAW,CAAC+G,WAAW,CAAC;MAEtC,OAAO;QAAEC,SAAS;QAAEhE;MAAM,CAAC;IAC7B;;IAEA;IACA,IAAI0G,kBAAkB,GAAG,IAAI;IAC7B,IAAIC,YAAY,GAAGC,QAAQ;IAE3B/G,MAAM,CAACU,OAAO,CAACvD,WAAW,CAAC,CAAC+C,OAAO,CAAC,CAAC,CAACS,OAAO,EAAER,KAAK,CAAC,KAAK;MACxD,IAAIA,KAAK,CAACS,QAAQ,GAAGkG,YAAY,EAAE;QACjC,MAAM/F,KAAK,GAAGrE,MAAM,CAACsE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKP,OAAO,CAAC;QAChD,IAAII,KAAK,EAAE;UACT8F,kBAAkB,GAAG;YACnB1C,SAAS,EAAEpD,KAAK;YAChBZ,KAAK,EAAEA;UACT,CAAC;UACD2G,YAAY,GAAG3G,KAAK,CAACS,QAAQ;QAC/B;MACF;IACF,CAAC,CAAC;IAEF,OAAOiG,kBAAkB;EAC3B,CAAC;EAED,MAAMG,iBAAiB,GAAG,MAAAA,CAAOrG,OAAe,EAAEsG,QAAgB,KAAK;IACrE,IAAI;MACF,MAAMpL,YAAY,CAACqL,WAAW,CAACvG,OAAO,EAAE;QAAEY,KAAK,EAAE0F;MAAS,CAAC,CAAC;MAC5D;MACAtK,SAAS,CAACkE,IAAI,IAAIA,IAAI,CAACsG,GAAG,CAACpG,KAAK,IAC9BA,KAAK,CAACG,EAAE,KAAKP,OAAO,GAAG;QAAE,GAAGI,KAAK;QAAEQ,KAAK,EAAE0F;MAAS,CAAC,GAAGlG,KACzD,CAAC,CAAC;MACF;MACA,IAAI,CAAAnE,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEsE,EAAE,MAAKP,OAAO,EAAE;QAChC9D,eAAe,CAACgE,IAAI,IAAIA,IAAI,GAAG;UAAE,GAAGA,IAAI;UAAEU,KAAK,EAAE0F;QAAS,CAAC,GAAG,IAAI,CAAC;MACrE;MACAnJ,iBAAiB,CAAC,IAAI,CAAC;IACzB,CAAC,CAAC,OAAO0B,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAM4H,aAAa,GAAGA,CAAC;IACrBzG,OAAO;IACP0G,SAAS;IACTC,QAAQ;IACRC;EAMF,CAAC,kBACCtL,OAAA;IACEuL,SAAS,EAAC,oBAAoB;IAC9BC,OAAO,EAAGlE,CAAC,IAAK;MACd,IAAIA,CAAC,CAACqB,MAAM,KAAKrB,CAAC,CAACE,aAAa,EAAE6D,QAAQ,CAAC,CAAC;IAC9C,CAAE;IAAAI,QAAA,eAEFzL,OAAA;MACEuL,SAAS,EAAC,6EAA6E;MACvFG,KAAK,EAAE;QACLC,GAAG,EAAEL,cAAc,GAAG,GAAGA,cAAc,CAACM,CAAC,GAAG,EAAE,IAAI,GAAG,KAAK;QAC1DhE,IAAI,EAAE0D,cAAc,GAAG,GAAGA,cAAc,CAAC5D,CAAC,GAAG,GAAG,IAAI,GAAG,KAAK;QAC5DmE,SAAS,EAAErJ,WAAW,GAAG,YAAY,GAAG,UAAU;QAClDsJ,OAAO,EAAEtJ,WAAW,GAAG,CAAC,GAAG,CAAC;QAC5BuJ,UAAU,EAAE;MACd,CAAE;MAAAN,QAAA,gBAEFzL,OAAA;QAAIuL,SAAS,EAAC,yCAAyC;QAAAE,QAAA,EAAC;MAAmB;QAAAzC,QAAA,EAAAgD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChFlM,OAAA;QAAGuL,SAAS,EAAC,4BAA4B;QAAAE,QAAA,EAAC;MAE1C;QAAAzC,QAAA,EAAAgD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJlM,OAAA;QAAKuL,SAAS,EAAC,wBAAwB;QAAAE,QAAA,gBACrCzL,OAAA;UACEwL,OAAO,EAAEH,QAAS;UAClBE,SAAS,EAAC,6FAA6F;UAAAE,QAAA,EACxG;QAED;UAAAzC,QAAA,EAAAgD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTlM,OAAA;UACEwL,OAAO,EAAEJ,SAAU;UACnBG,SAAS,EAAC,gGAAgG;UAAAE,QAAA,EAC3G;QAED;UAAAzC,QAAA,EAAAgD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAlD,QAAA,EAAAgD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAlD,QAAA,EAAAgD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAlD,QAAA,EAAAgD,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CACN;EAED,MAAMC,cAAc,GAAGA,CAAC;IACtBzH,OAAO;IACP0H,UAAU;IACVhB,SAAS;IACTC,QAAQ;IACRC,cAAc;IACde,UAAU;IACVC;EASF,CAAC,KAAK;IACJ,oBACEtM,OAAA;MAAKuL,SAAS,EAAC,oBAAoB;MAACC,OAAO,EAAGlE,CAAC,IAAK;QAClD,IAAIA,CAAC,CAACqB,MAAM,KAAKrB,CAAC,CAACE,aAAa,EAAE6D,QAAQ,CAAC,CAAC;MAC9C,CAAE;MAAAI,QAAA,eACAzL,OAAA;QACEuL,SAAS,EAAC,6EAA6E;QACvFG,KAAK,EAAE;UACLC,GAAG,EAAEL,cAAc,GAAG,GAAGA,cAAc,CAACM,CAAC,GAAG,EAAE,IAAI,GAAG,KAAK;UAC1DhE,IAAI,EAAE0D,cAAc,GAAG,GAAGA,cAAc,CAAC5D,CAAC,GAAG,GAAG,IAAI,GAAG,KAAK;UAC5DmE,SAAS,EAAErJ,WAAW,GAAG,YAAY,GAAG,UAAU;UAClDsJ,OAAO,EAAEtJ,WAAW,GAAG,CAAC,GAAG,CAAC;UAC5BuJ,UAAU,EAAE;QACd,CAAE;QAAAN,QAAA,gBAEFzL,OAAA;UAAIuL,SAAS,EAAC,yCAAyC;UAAAE,QAAA,EAAC;QAAa;UAAAzC,QAAA,EAAAgD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1ElM,OAAA;UAAGuL,SAAS,EAAC,qCAAqC;UAAAE,QAAA,EAC/CW;QAAU;UAAApD,QAAA,EAAAgD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eAEJlM,OAAA;UAAKuL,SAAS,EAAC,eAAe;UAAAE,QAAA,gBAC5BzL,OAAA;YACEuM,IAAI,EAAC,QAAQ;YACbC,GAAG,EAAC,GAAG;YACP3C,KAAK,EAAEwC,UAAW;YAClBI,QAAQ,EAAGnF,CAAC,IAAKgF,aAAa,CAAChF,CAAC,CAACqB,MAAM,CAACkB,KAAK,CAAE;YAC/C6C,WAAW,EAAC,IAAI;YAChBnB,SAAS,EAAC,8PAA8P;YACxQoB,SAAS,EAAGrF,CAAC,IAAK;cAChB,IAAIA,CAAC,CAACsF,GAAG,KAAK,OAAO,EAAE;gBACrB,MAAM/C,KAAK,GAAGgD,QAAQ,CAACR,UAAU,CAAC;gBAClC,IAAIxC,KAAK,GAAG,CAAC,EAAEuB,SAAS,CAACvB,KAAK,CAAC;cACjC,CAAC,MAAM,IAAIvC,CAAC,CAACsF,GAAG,KAAK,QAAQ,EAAE;gBAC7BvB,QAAQ,CAAC,CAAC;cACZ;YACF,CAAE;YACFyB,SAAS;UAAA;YAAA9D,QAAA,EAAAgD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACFlM,OAAA;YAAMuL,SAAS,EAAC,iEAAiE;YAAAE,QAAA,EAAC;UAElF;YAAAzC,QAAA,EAAAgD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAlD,QAAA,EAAAgD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAENlM,OAAA;UAAKuL,SAAS,EAAC,wBAAwB;UAAAE,QAAA,gBACrCzL,OAAA;YACEwL,OAAO,EAAEH,QAAS;YAClBE,SAAS,EAAC,6FAA6F;YAAAE,QAAA,EACxG;UAED;YAAAzC,QAAA,EAAAgD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTlM,OAAA;YACEwL,OAAO,EAAEA,CAAA,KAAM;cACb,MAAM3B,KAAK,GAAGgD,QAAQ,CAACR,UAAU,CAAC;cAClC,IAAIxC,KAAK,GAAG,CAAC,EAAEuB,SAAS,CAACvB,KAAK,CAAC;YACjC,CAAE;YACFkD,QAAQ,EAAE,CAACV,UAAU,IAAIQ,QAAQ,CAACR,UAAU,CAAC,IAAI,CAAE;YACnDd,SAAS,EAAC,gJAAgJ;YAAAE,QAAA,EAC3J;UAED;YAAAzC,QAAA,EAAAgD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAlD,QAAA,EAAAgD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAlD,QAAA,EAAAgD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAlD,QAAA,EAAAgD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;EAED,MAAMc,qBAAqB,GAAGA,CAAC1F,CAAmB,EAAE5C,OAAe,KAAK;IACtE,MAAMuI,IAAI,GAAG3F,CAAC,CAACE,aAAa,CAACC,qBAAqB,CAAC,CAAC;IACpDpF,gBAAgB,CAAC;MACfqF,CAAC,EAAEuF,IAAI,CAACrF,IAAI,GAAGqF,IAAI,CAACpF,KAAK,GAAC,CAAC;MAC3B+D,CAAC,EAAEqB,IAAI,CAACtB,GAAG,GAAGsB,IAAI,CAACC,MAAM,GAAC;IAC5B,CAAC,CAAC;IACFzK,cAAc,CAAC,IAAI,CAAC;IACpBkB,UAAU,CAAC,MAAM;MACflB,cAAc,CAAC,KAAK,CAAC;MACrBN,kBAAkB,CAACuC,OAAO,CAAC;IAC7B,CAAC,EAAE,EAAE,CAAC;EACR,CAAC;EAED,MAAMyI,uBAAuB,GAAGA,CAAC7F,CAAmB,EAAE5C,OAAe,KAAK;IACxE,MAAMuI,IAAI,GAAG3F,CAAC,CAACE,aAAa,CAACC,qBAAqB,CAAC,CAAC;IACpDlF,kBAAkB,CAAC;MACjBmF,CAAC,EAAEuF,IAAI,CAACrF,IAAI,GAAGqF,IAAI,CAACpF,KAAK,GAAC,CAAC;MAC3B+D,CAAC,EAAEqB,IAAI,CAACtB,GAAG,GAAGsB,IAAI,CAACC,MAAM,GAAC;IAC5B,CAAC,CAAC;IACFzK,cAAc,CAAC,IAAI,CAAC;IACpBkB,UAAU,CAAC,MAAM;MACflB,cAAc,CAAC,KAAK,CAAC;MACrBR,oBAAoB,CAACyC,OAAO,CAAC;IAC/B,CAAC,EAAE,EAAE,CAAC;EACR,CAAC;;EAED;EACAhF,SAAS,CAAC,MAAM;IACd,MAAMgM,KAAK,GAAG0B,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;IAC7C3B,KAAK,CAAC4B,SAAS,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA,KAAK;IACDF,QAAQ,CAACG,IAAI,CAACC,WAAW,CAAC9B,KAAK,CAAC;IAChC,OAAO,MAAMA,KAAK,CAAC+B,MAAM,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEzN,OAAA;IAAKuL,SAAS,EAAC,qDAAqD;IAAAE,QAAA,gBAElEzL,OAAA;MAAKuL,SAAS,EAAC,0DAA0D;MAAAE,QAAA,gBAEvEzL,OAAA;QAAKuL,SAAS,EAAC,kBAAkB;QAAAE,QAAA,eAC/BzL,OAAA;UAAIuL,SAAS,EAAC,4BAA4B;UAAAE,QAAA,EACvC,CAAA9K,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE2E,KAAK,KAAI;QAAoB;UAAA0D,QAAA,EAAAgD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C;MAAC;QAAAlD,QAAA,EAAAgD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAENlM,OAAA;QACE0N,GAAG,EAAEzM,QAAS;QACd0M,GAAG,EAAEhN,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEiJ,GAAI;QACvBgE,YAAY,EAAEzG,gBAAiB;QAC/BjH,OAAO,EAAEmE,cAAe;QACxBkH,SAAS,EAAC;MAAQ;QAAAvC,QAAA,EAAAgD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eAGFlM,OAAA;QACEuL,SAAS,EAAC,mDAAmD;QAC7DC,OAAO,EAAEnE,mBAAoB;QAAAoE,QAAA,eAE7BzL,OAAA;UACEuL,SAAS,EAAC,kCAAkC;UAC5CG,KAAK,EAAE;YAAE7D,KAAK,EAAE,GAAGhH,QAAQ;UAAI;QAAE;UAAAmI,QAAA,EAAAgD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC;MAAC;QAAAlD,QAAA,EAAAgD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGNlM,OAAA;QAAKuL,SAAS,EAAC,iDAAiD;QAAAE,QAAA,gBAC9DzL,OAAA;UAAAyL,QAAA,EAAOrB,UAAU,CAAC,EAAA9J,kBAAA,GAAAW,QAAQ,CAAC+B,OAAO,cAAA1C,kBAAA,uBAAhBA,kBAAA,CAAkB+E,WAAW,KAAI,CAAC;QAAC;UAAA2D,QAAA,EAAAgD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7DlM,OAAA;UAAAyL,QAAA,EAAOrB,UAAU,CAAC,EAAA7J,kBAAA,GAAAU,QAAQ,CAAC+B,OAAO,cAAAzC,kBAAA,uBAAhBA,kBAAA,CAAkB6G,QAAQ,KAAI,CAAC;QAAC;UAAA4B,QAAA,EAAAgD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAlD,QAAA,EAAAgD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,eAGNlM,OAAA;QAAKuL,SAAS,EAAC,WAAW;QAAAE,QAAA,gBAExBzL,OAAA;UAAKuL,SAAS,EAAC,qBAAqB;UAAAE,QAAA,eAClCzL,OAAA;YACEwL,OAAO,EAAEA,CAAA,KAAM7K,YAAY,IAAIyH,UAAU,CAACzH,YAAY,CAAE;YACxD4K,SAAS,EAAC,uDAAuD;YACjEwB,QAAQ,EAAE,CAACpM,YAAa;YAAA8K,QAAA,eAExBzL,OAAA;cACEuL,SAAS,EAAC,wBAAwB;cAClCsC,IAAI,EAAC,MAAM;cACXC,MAAM,EAAC,cAAc;cACrBC,OAAO,EAAC,WAAW;cAAAtC,QAAA,EAElBtL,SAAS,gBACRH,OAAA;gBACEgO,aAAa,EAAC,OAAO;gBACrBC,cAAc,EAAC,OAAO;gBACtBC,WAAW,EAAE,CAAE;gBACfC,CAAC,EAAC;cAA+C;gBAAAnF,QAAA,EAAAgD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClD,CAAC,gBAEFlM,OAAA;gBACEgO,aAAa,EAAC,OAAO;gBACrBC,cAAc,EAAC,OAAO;gBACtBC,WAAW,EAAE,CAAE;gBACfC,CAAC,EAAC;cAAqI;gBAAAnF,QAAA,EAAAgD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxI;YACF;cAAAlD,QAAA,EAAAgD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAlD,QAAA,EAAAgD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;UAAAlD,QAAA,EAAAgD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EAGL,CAAC,MAAM;UACN,MAAMkC,QAAQ,GAAGzD,gBAAgB,CAAC,CAAC;UACnC,IAAI,EAACyD,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAElG,SAAS,GAAE,OAAO,IAAI;UAErC,oBACElI,OAAA;YAAKuL,SAAS,EAAC,kBAAkB;YAAAE,QAAA,eAC/BzL,OAAA;cAAKuL,SAAS,EAAC,2CAA2C;cAAAE,QAAA,gBACxDzL,OAAA;gBAAKuL,SAAS,EAAC,uBAAuB;gBAAAE,QAAA,GAAC,cAC5B,EAAC2C,QAAQ,CAAClG,SAAS,CAAC5C,KAAK;cAAA;gBAAA0D,QAAA,EAAAgD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/B,CAAC,EACLkC,QAAQ,CAAClK,KAAK,iBACblE,OAAA;gBAAKuL,SAAS,EAAC,wBAAwB;gBAAAE,QAAA,GAAC,KACnC,EAAChB,cAAc,CAAC2D,QAAQ,CAAClK,KAAK,CAACS,QAAQ,CAAC;cAAA;gBAAAqE,QAAA,EAAAgD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxC,CACN;YAAA;cAAAlD,QAAA,EAAAgD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAlD,QAAA,EAAAgD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAEV,CAAC,EAAE,CAAC;MAAA;QAAAlD,QAAA,EAAAgD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAlD,QAAA,EAAAgD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNlM,OAAA;MAAKuL,SAAS,EAAC,4FAA4F;MAAAE,QAAA,gBACzGzL,OAAA;QAAKuL,SAAS,EAAC,yBAAyB;QAAAE,QAAA,eACtCzL,OAAA;UAAMuL,SAAS,EAAC,4BAA4B;UAAAE,QAAA,EAAC;QAAe;UAAAzC,QAAA,EAAAgD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAlD,QAAA,EAAAgD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,eAGNlM,OAAA;QAAKuL,SAAS,EAAC,mBAAmB;QAAAE,QAAA,eAChCzL,OAAA;UAAOuL,SAAS,EAAC,+GAA+G;UAAAE,QAAA,GAC7H1K,WAAW,GAAG,aAAa,GAAG,cAAc,eAC7Cf,OAAA;YACEuM,IAAI,EAAC,MAAM;YACXhB,SAAS,EAAC,QAAQ;YAClB8C,MAAM,EAAC,SAAS;YAChB5B,QAAQ,EAAElE,YAAa;YACvBwE,QAAQ,EAAEhM;UAAY;YAAAiI,QAAA,EAAAgD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC;QAAA;UAAAlD,QAAA,EAAAgD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAlD,QAAA,EAAAgD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAlD,QAAA,EAAAgD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNlM,OAAA;MAAKuL,SAAS,EAAC,yCAAyC;MAAAE,QAAA,gBACtDzL,OAAA;QAAKuL,SAAS,EAAC,wCAAwC;QAAAE,QAAA,EAAC;MAExD;QAAAzC,QAAA,EAAAgD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAELzL,MAAM,CAACyK,GAAG,CAAEpG,KAAK,iBAChB9E,OAAA,CAACF,MAAM,CAACwO,GAAG;QAETC,OAAO,EAAE,KAAM;QACfhD,SAAS,EAAC,uGAAuG;QACjHiD,MAAM;QACNzC,UAAU,EAAE;UACVyC,MAAM,EAAE;YACNpH,QAAQ,EAAE,GAAG;YACbqH,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;UACxB;QACF,CAAE;QAAAhD,QAAA,gBAEFzL,OAAA;UACEwL,OAAO,EAAEA,CAAA,KAAMpD,UAAU,CAACtD,KAAK,CAAE;UACjCyG,SAAS,EAAC,uDAAuD;UAAAE,QAAA,eAEjEzL,OAAA;YACEuL,SAAS,EAAC,wBAAwB;YAClCsC,IAAI,EAAC,MAAM;YACXC,MAAM,EAAC,cAAc;YACrBC,OAAO,EAAC,WAAW;YAAAtC,QAAA,EAElBtL,SAAS,IAAI,CAAAQ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEsE,EAAE,MAAKH,KAAK,CAACG,EAAE,gBACzCjF,OAAA;cACEgO,aAAa,EAAC,OAAO;cACrBC,cAAc,EAAC,OAAO;cACtBC,WAAW,EAAE,CAAE;cACfC,CAAC,EAAC;YAA+C;cAAAnF,QAAA,EAAAgD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC,gBAEFlM,OAAA;cACEgO,aAAa,EAAC,OAAO;cACrBC,cAAc,EAAC,OAAO;cACtBC,WAAW,EAAE,CAAE;cACfC,CAAC,EAAC;YAAqI;cAAAnF,QAAA,EAAAgD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxI;UACF;YAAAlD,QAAA,EAAAgD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAlD,QAAA,EAAAgD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,EAERtK,cAAc,KAAKkD,KAAK,CAACG,EAAE,gBAC1BjF,OAAA;UACEuM,IAAI,EAAC,MAAM;UACX1C,KAAK,EAAE/H,YAAa;UACpB2K,QAAQ,EAAGnF,CAAC,IAAKvF,eAAe,CAACuF,CAAC,CAACqB,MAAM,CAACkB,KAAK,CAAE;UACjD6E,MAAM,EAAEA,CAAA,KAAM;YACZ,IAAI5M,YAAY,CAAC6M,IAAI,CAAC,CAAC,IAAI7M,YAAY,KAAKgD,KAAK,CAACQ,KAAK,EAAE;cACvDyF,iBAAiB,CAACjG,KAAK,CAACG,EAAE,EAAEnD,YAAY,CAAC;YAC3C,CAAC,MAAM;cACLD,iBAAiB,CAAC,IAAI,CAAC;YACzB;UACF,CAAE;UACF8K,SAAS,EAAGrF,CAAC,IAAK;YAChB,IAAIA,CAAC,CAACsF,GAAG,KAAK,OAAO,EAAE;cACrB,IAAI9K,YAAY,CAAC6M,IAAI,CAAC,CAAC,IAAI7M,YAAY,KAAKgD,KAAK,CAACQ,KAAK,EAAE;gBACvDyF,iBAAiB,CAACjG,KAAK,CAACG,EAAE,EAAEnD,YAAY,CAAC;cAC3C,CAAC,MAAM;gBACLD,iBAAiB,CAAC,IAAI,CAAC;cACzB;YACF,CAAC,MAAM,IAAIyF,CAAC,CAACsF,GAAG,KAAK,QAAQ,EAAE;cAC7B/K,iBAAiB,CAAC,IAAI,CAAC;YACzB;UACF,CAAE;UACF0J,SAAS,EAAC,uHAAuH;UACjIuB,SAAS;QAAA;UAAA9D,QAAA,EAAAgD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,gBAEFlM,OAAA;UAAKuL,SAAS,EAAC,gCAAgC;UAAAE,QAAA,eAC7CzL,OAAA;YAAKuL,SAAS,EAAC,0BAA0B;YAAAE,QAAA,gBACzCzL,OAAA;cACIuL,SAAS,EAAC,8CAA8C;cAC1DqD,aAAa,EAAEA,CAAA,KAAM;gBACnB/M,iBAAiB,CAACiD,KAAK,CAACG,EAAE,CAAC;gBAC3BlD,eAAe,CAAC+C,KAAK,CAACQ,KAAK,CAAC;cAC9B,CAAE;cAAAmG,QAAA,EAED3G,KAAK,CAACQ;YAAK;cAAA0D,QAAA,EAAAgD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC,eACPlM,OAAA;cACEwL,OAAO,EAAEA,CAAA,KAAM;gBACb3J,iBAAiB,CAACiD,KAAK,CAACG,EAAE,CAAC;gBAC3BlD,eAAe,CAAC+C,KAAK,CAACQ,KAAK,CAAC;cAC9B,CAAE;cACAiG,SAAS,EAAC,2FAA2F;cACvGjG,KAAK,EAAC,aAAa;cAAAmG,QAAA,eAEnBzL,OAAA;gBACIuL,SAAS,EAAC,wBAAwB;gBACpCsC,IAAI,EAAC,MAAM;gBACXC,MAAM,EAAC,cAAc;gBACrBC,OAAO,EAAC,WAAW;gBAAAtC,QAAA,eAEnBzL,OAAA;kBACEgO,aAAa,EAAC,OAAO;kBACrBC,cAAc,EAAC,OAAO;kBACtBC,WAAW,EAAE,CAAE;kBACfC,CAAC,EAAC;gBAAwH;kBAAAnF,QAAA,EAAAgD,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3H;cAAC;gBAAAlD,QAAA,EAAAgD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC;YAAC;cAAAlD,QAAA,EAAAgD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAlD,QAAA,EAAAgD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ;QAAC;UAAAlD,QAAA,EAAAgD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,eAEDlM,OAAA;UAAKuL,SAAS,EAAC,kCAAkC;UAAAE,QAAA,GAC5CvK,WAAW,CAAC4D,KAAK,CAACG,EAAE,CAAC,gBACpBjF,OAAA;YACEwL,OAAO,EAAGlE,CAAC,IAAK;cACd6F,uBAAuB,CAAC7F,CAAC,EAAExC,KAAK,CAACG,EAAE,CAAC;YACtC,CAAE;YACFsG,SAAS,EAAC,oHAAoH;YAC9HjG,KAAK,EAAC,yCAAmC;YAAAmG,QAAA,gBAEzCzL,OAAA;cACEuL,SAAS,EAAC,SAAS;cACnBsC,IAAI,EAAC,MAAM;cACXC,MAAM,EAAC,cAAc;cACrBC,OAAO,EAAC,WAAW;cAAAtC,QAAA,eAEnBzL,OAAA;gBACEgO,aAAa,EAAC,OAAO;gBACrBC,cAAc,EAAC,OAAO;gBACtBC,WAAW,EAAE,CAAE;gBACfC,CAAC,EAAC;cAA6G;gBAAAnF,QAAA,EAAAgD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChH;YAAC;cAAAlD,QAAA,EAAAgD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACNlM,OAAA;cAAMuL,SAAS,EAAC,SAAS;cAAAE,QAAA,EACtBhB,cAAc,CAACvJ,WAAW,CAAC4D,KAAK,CAACG,EAAE,CAAC,CAACN,QAAQ;YAAC;cAAAqE,QAAA,EAAAgD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C,CAAC;UAAA;YAAAlD,QAAA,EAAAgD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,gBAETlM,OAAA;YACEwL,OAAO,EAAGlE,CAAC,IAAK;cACd0F,qBAAqB,CAAC1F,CAAC,EAAExC,KAAK,CAACG,EAAE,CAAC;YACpC,CAAE;YACFsG,SAAS,EAAC,uFAAuF;YACjGjG,KAAK,EAAC,sCAA6B;YAAAmG,QAAA,eAEnCzL,OAAA;cACEuL,SAAS,EAAC,SAAS;cACnBsC,IAAI,EAAC,MAAM;cACXC,MAAM,EAAC,cAAc;cACrBC,OAAO,EAAC,WAAW;cAAAtC,QAAA,eAEnBzL,OAAA;gBACEgO,aAAa,EAAC,OAAO;gBACrBC,cAAc,EAAC,OAAO;gBACtBC,WAAW,EAAE,CAAE;gBACfC,CAAC,EAAC;cAA6G;gBAAAnF,QAAA,EAAAgD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChH;YAAC;cAAAlD,QAAA,EAAAgD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UAAC;YAAAlD,QAAA,EAAAgD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CACT,eAEHlM,OAAA;YACEwL,OAAO,EAAEA,CAAA,KAAMtB,YAAY,CAACpF,KAAK,CAACG,EAAE,CAAE;YACtCsG,SAAS,EAAC,uFAAuF;YAAAE,QAAA,eAEjGzL,OAAA;cACEuL,SAAS,EAAC,SAAS;cACnBsC,IAAI,EAAC,MAAM;cACXC,MAAM,EAAC,cAAc;cACrBC,OAAO,EAAC,WAAW;cAAAtC,QAAA,eAEnBzL,OAAA;gBACEgO,aAAa,EAAC,OAAO;gBACrBC,cAAc,EAAC,OAAO;gBACtBC,WAAW,EAAE,CAAE;gBACfC,CAAC,EAAC;cAA8H;gBAAAnF,QAAA,EAAAgD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjI;YAAC;cAAAlD,QAAA,EAAAgD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UAAC;YAAAlD,QAAA,EAAAgD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAlD,QAAA,EAAAgD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA,GA3KDpH,KAAK,CAACG,EAAE;QAAA+D,QAAA,EAAAgD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA4KH,CACb,CAAC;IAAA;MAAAlD,QAAA,EAAAgD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAELhK,eAAe,iBACdlC,OAAA,CAACmM,cAAc;MACbzH,OAAO,EAAExC,eAAgB;MACzBkK,UAAU,EAAE,EAAA5L,YAAA,GAAAC,MAAM,CAACsE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAK/C,eAAe,CAAC,cAAA1B,YAAA,uBAA1CA,YAAA,CAA4C8E,KAAK,KAAI,EAAG;MACpE8F,SAAS,EAAG5E,OAAO,IAAK;QACtBsD,gBAAgB,CAAC5H,eAAe,EAAEsE,OAAO,CAAC;QAC1CrE,kBAAkB,CAAC,IAAI,CAAC;QACxBE,gBAAgB,CAAC,IAAI,CAAC;QACtBM,kBAAkB,CAAC,EAAE,CAAC;MACxB,CAAE;MACF0I,QAAQ,EAAEA,CAAA,KAAM;QACdlJ,kBAAkB,CAAC,IAAI,CAAC;QACxBE,gBAAgB,CAAC,IAAI,CAAC;QACtBM,kBAAkB,CAAC,EAAE,CAAC;MACxB,CAAE;MACF2I,cAAc,EAAElJ,aAAc;MAC9BiK,UAAU,EAAE3J,eAAgB;MAC5B4J,aAAa,EAAE3J;IAAmB;MAAAqG,QAAA,EAAAgD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CACF,EAEAlK,iBAAiB,iBAChBhC,OAAA,CAACmL,aAAa;MACZzG,OAAO,EAAE1C,iBAAkB;MAC3BoJ,SAAS,EAAEA,CAAA,KAAM;QACfpB,eAAe,CAAChI,iBAAiB,CAAC;QAClCC,oBAAoB,CAAC,IAAI,CAAC;QAC1BM,kBAAkB,CAAC,IAAI,CAAC;MAC1B,CAAE;MACF8I,QAAQ,EAAEA,CAAA,KAAM;QACdpJ,oBAAoB,CAAC,IAAI,CAAC;QAC1BM,kBAAkB,CAAC,IAAI,CAAC;MAC1B,CAAE;MACF+I,cAAc,EAAEhJ;IAAgB;MAAA0G,QAAA,EAAAgD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CACF;EAAA;IAAAlD,QAAA,EAAAgD,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAGZ,CAAC;AAAC7L,EAAA,CA/lCIJ,WAAuC;AAAA4O,EAAA,GAAvC5O,WAAuC;AAimC7C,eAAeA,WAAW;AAAC,IAAA4O,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}