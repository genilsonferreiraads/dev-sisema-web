{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genil\\\\pasta teste\\\\src\\\\components\\\\AudioPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { audioService } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = () => {\n  _s();\n  const [audios, setAudios] = useState([]);\n  useEffect(() => {\n    loadAudios();\n  }, []);\n  const loadAudios = async () => {\n    try {\n      const data = await audioService.getAudios();\n      setAudios(data);\n    } catch (error) {\n      console.error('Erro ao carregar áudios:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#1e1e1e] rounded-lg shadow-lg p-4 border border-[#404040]\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4 text-[#e1aa1e]\",\n      children: \"Lista de \\xC1udios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: audios.map(audio => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border border-[#404040] rounded-lg bg-[#2d2d2d] hover:bg-[#353535] transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-medium text-[#e1aa1e] mb-2\",\n          children: audio.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          className: \"w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: audio.url,\n            type: \"audio/mpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), \"Seu navegador n\\xE3o suporta o elemento de \\xE1udio.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, audio.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"i2//ja07faPP2cab/cQl3o9VBgk=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","audioService","jsxDEV","_jsxDEV","AudioPlayer","_s","audios","setAudios","loadAudios","data","getAudios","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","audio","title","controls","src","url","type","id","_c","$RefreshReg$"],"sources":["C:/Users/genil/pasta teste/src/components/AudioPlayer.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { audioService, AudioData } from '../lib/supabase';\r\n\r\nconst AudioPlayer = () => {\r\n  const [audios, setAudios] = useState<AudioData[]>([]);\r\n\r\n  useEffect(() => {\r\n    loadAudios();\r\n  }, []);\r\n\r\n  const loadAudios = async () => {\r\n    try {\r\n      const data = await audioService.getAudios();\r\n      setAudios(data);\r\n    } catch (error) {\r\n      console.error('Erro ao carregar áudios:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-[#1e1e1e] rounded-lg shadow-lg p-4 border border-[#404040]\">\r\n      <h2 className=\"text-xl font-semibold mb-4 text-[#e1aa1e]\">Lista de Áudios</h2>\r\n      <div className=\"space-y-4\">\r\n        {audios.map((audio) => (\r\n          <div key={audio.id} className=\"p-4 border border-[#404040] rounded-lg bg-[#2d2d2d] hover:bg-[#353535] transition-colors\">\r\n            <h3 className=\"font-medium text-[#e1aa1e] mb-2\">{audio.title}</h3>\r\n            <audio controls className=\"w-full\">\r\n              <source src={audio.url} type=\"audio/mpeg\" />\r\n              Seu navegador não suporta o elemento de áudio.\r\n            </audio>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioPlayer; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAmB,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAc,EAAE,CAAC;EAErDC,SAAS,CAAC,MAAM;IACdQ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMR,YAAY,CAACS,SAAS,CAAC,CAAC;MAC3CH,SAAS,CAACE,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,oBACER,OAAA;IAAKU,SAAS,EAAC,+DAA+D;IAAAC,QAAA,gBAC5EX,OAAA;MAAIU,SAAS,EAAC,2CAA2C;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9Ef,OAAA;MAAKU,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBR,MAAM,CAACa,GAAG,CAAEC,KAAK,iBAChBjB,OAAA;QAAoBU,SAAS,EAAC,0FAA0F;QAAAC,QAAA,gBACtHX,OAAA;UAAIU,SAAS,EAAC,iCAAiC;UAAAC,QAAA,EAAEM,KAAK,CAACC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClEf,OAAA;UAAOmB,QAAQ;UAACT,SAAS,EAAC,QAAQ;UAAAC,QAAA,gBAChCX,OAAA;YAAQoB,GAAG,EAAEH,KAAK,CAACI,GAAI;YAACC,IAAI,EAAC;UAAY;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,wDAE9C;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GALAE,KAAK,CAACM,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACb,EAAA,CAhCID,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}