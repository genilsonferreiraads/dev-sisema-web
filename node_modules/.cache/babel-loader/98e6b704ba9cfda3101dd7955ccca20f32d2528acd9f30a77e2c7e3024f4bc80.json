{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genil\\\\Desktop\\\\em desemvolvimento Sistema academia\\\\src\\\\components\\\\VideoPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { videoService } from '../lib/supabase';\nimport VideoSidebar from './VideoSidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VideoPlayer = ({\n  videoId,\n  onEnded,\n  autoplay = false,\n  isPlaying = false,\n  setIsPlaying = () => {},\n  shouldAutoplay = false\n}) => {\n  _s();\n  var _videos$3;\n  const opts = {\n    height: '100%',\n    width: '100%',\n    playerVars: {\n      autoplay: autoplay ? 1 : 0,\n      controls: 1,\n      rel: 0\n    }\n  };\n  const [videos, setVideos] = useState([]);\n  const [newVideoUrl, setNewVideoUrl] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [player, setPlayer] = useState(null);\n  const [isPlayerReady, setIsPlayerReady] = useState(false);\n  const [localIsPlaying, setLocalIsPlaying] = useState(isPlaying);\n  const [isInitializing, setIsInitializing] = useState(false);\n  useEffect(() => {\n    setLocalIsPlaying(isPlaying);\n  }, [isPlaying]);\n  const updatePlayingState = state => {\n    setLocalIsPlaying(state);\n    setIsPlaying(state);\n  };\n  useEffect(() => {\n    loadVideos();\n  }, []);\n  const loadYouTubeAPI = () => {\n    return new Promise(resolve => {\n      var _firstScriptTag$paren;\n      const existingScript = document.querySelector('script[src=\"https://www.youtube.com/iframe_api\"]');\n      if (existingScript) {\n        if (window.YT && window.YT.Player) {\n          resolve();\n          return;\n        }\n      }\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n      tag.async = true;\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      (_firstScriptTag$paren = firstScriptTag.parentNode) === null || _firstScriptTag$paren === void 0 ? void 0 : _firstScriptTag$paren.insertBefore(tag, firstScriptTag);\n      window.onYouTubeIframeAPIReady = () => {\n        resolve();\n      };\n    });\n  };\n  const initializePlayer = async (videoId, shouldAutoplay = false) => {\n    if (isInitializing) return null;\n    setIsInitializing(true);\n    try {\n      var _YT, _videos$;\n      await loadYouTubeAPI();\n      if (!((_YT = window.YT) !== null && _YT !== void 0 && _YT.Player)) {\n        throw new Error('API do YouTube não está disponível');\n      }\n      if (player) {\n        try {\n          player.destroy();\n        } catch (e) {\n          console.error('Erro ao destruir player existente:', e);\n        }\n        setPlayer(null);\n        setIsPlayerReady(false);\n      }\n      const playerContainer = document.getElementById('youtube-player');\n      if (!playerContainer) {\n        throw new Error('Container do player não encontrado');\n      }\n      while (playerContainer.firstChild) {\n        playerContainer.removeChild(playerContainer.firstChild);\n      }\n      const currentVideoId = videoId || extractVideoId((selectedVideo === null || selectedVideo === void 0 ? void 0 : selectedVideo.url) || ((_videos$ = videos[0]) === null || _videos$ === void 0 ? void 0 : _videos$.url));\n      if (!currentVideoId) {\n        throw new Error('VideoId não encontrado');\n      }\n      return new Promise((resolve, reject) => {\n        try {\n          const newPlayer = new window.YT.Player('youtube-player', {\n            videoId: currentVideoId,\n            height: '100%',\n            width: '100%',\n            events: {\n              onReady: event => {\n                handlePlayerReady(event, shouldAutoplay);\n                resolve(event.target);\n              },\n              onStateChange: handleStateChange,\n              onError: error => {\n                console.error('Erro do player:', error);\n                reject(error);\n              }\n            },\n            playerVars: {\n              enablejsapi: 1,\n              origin: window.location.origin,\n              widget_referrer: window.location.origin,\n              playsinline: 1,\n              controls: 1,\n              rel: 0,\n              modestbranding: 1,\n              autoplay: shouldAutoplay ? 1 : 0\n            }\n          });\n          setPlayer(newPlayer);\n        } catch (error) {\n          reject(error);\n        }\n      });\n    } catch (error) {\n      console.error('Erro ao inicializar player:', error);\n      // Tenta novamente após um delay\n      setTimeout(() => {\n        setIsInitializing(false);\n        initializePlayer(videoId, shouldAutoplay);\n      }, 2000);\n      return null;\n    } finally {\n      setIsInitializing(false);\n    }\n  };\n  useEffect(() => {\n    if (selectedVideo || videos[0]) {\n      var _videos$2;\n      const videoId = extractVideoId((selectedVideo === null || selectedVideo === void 0 ? void 0 : selectedVideo.url) || ((_videos$2 = videos[0]) === null || _videos$2 === void 0 ? void 0 : _videos$2.url));\n      if (videoId) {\n        initializePlayer(videoId, shouldAutoplay);\n      }\n    }\n    return () => {\n      if (player) {\n        try {\n          player.destroy();\n          setPlayer(null);\n          setIsPlayerReady(false);\n        } catch (error) {\n          console.error('Erro ao destruir player:', error);\n        }\n      }\n    };\n  }, [selectedVideo === null || selectedVideo === void 0 ? void 0 : selectedVideo.url, (_videos$3 = videos[0]) === null || _videos$3 === void 0 ? void 0 : _videos$3.url]);\n  const loadVideos = async () => {\n    try {\n      const data = await videoService.getRecentVideos();\n      setVideos(data);\n    } catch (error) {\n      console.error('Erro ao carregar vídeos:', error);\n    }\n  };\n\n  // Função para converter URL do YouTube em formato embed\n  const getEmbedUrl = url => {\n    console.log('URL original:', url);\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        var _url$split$, _url$split$2;\n        const videoId = url.includes('youtube.com') ? (_url$split$ = url.split('v=')[1]) === null || _url$split$ === void 0 ? void 0 : _url$split$.split('&')[0] : (_url$split$2 = url.split('youtu.be/')[1]) === null || _url$split$2 === void 0 ? void 0 : _url$split$2.split('?')[0];\n        const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      if (url.includes('vimeo.com')) {\n        var _url$split$3;\n        const videoId = (_url$split$3 = url.split('vimeo.com/')[1]) === null || _url$split$3 === void 0 ? void 0 : _url$split$3.split('?')[0];\n        const embedUrl = `https://player.vimeo.com/video/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      return url;\n    } catch (error) {\n      console.error('Erro ao processar URL:', error);\n      return url;\n    }\n  };\n\n  // Função para extrair título do vídeo do YouTube\n  const getVideoTitle = async url => {\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        var _url$split$4, _url$split$5, _data$items$, _data$items$$snippet;\n        const videoId = url.includes('youtube.com') ? (_url$split$4 = url.split('v=')[1]) === null || _url$split$4 === void 0 ? void 0 : _url$split$4.split('&')[0] : (_url$split$5 = url.split('youtu.be/')[1]) === null || _url$split$5 === void 0 ? void 0 : _url$split$5.split('?')[0];\n        const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=AIzaSyAyTc_jYQSVM_3kg95t8ai3CWckZGG0v4c&part=snippet`);\n        const data = await response.json();\n        if (data.error) {\n          console.error('Erro da API do YouTube:', data.error);\n          return 'Vídeo do YouTube';\n        }\n        return ((_data$items$ = data.items[0]) === null || _data$items$ === void 0 ? void 0 : (_data$items$$snippet = _data$items$.snippet) === null || _data$items$$snippet === void 0 ? void 0 : _data$items$$snippet.title) || 'Vídeo do YouTube';\n      }\n      if (url.includes('vimeo.com')) {\n        var _url$split$6, _data$;\n        const videoId = (_url$split$6 = url.split('vimeo.com/')[1]) === null || _url$split$6 === void 0 ? void 0 : _url$split$6.split('?')[0];\n        const response = await fetch(`https://vimeo.com/api/v2/video/${videoId}.json`);\n        const data = await response.json();\n        return ((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.title) || 'Vídeo do Vimeo';\n      }\n      return 'Vídeo';\n    } catch (error) {\n      console.error('Erro ao obter título do vídeo:', error);\n      return 'Vídeo';\n    }\n  };\n  const handleAddVideo = async e => {\n    if (e) e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    if (!newVideoUrl.trim()) {\n      setError('Por favor, insira uma URL válida');\n      setIsLoading(false);\n      return;\n    }\n    try {\n      const embedUrl = getEmbedUrl(newVideoUrl);\n      const videoTitle = await getVideoTitle(newVideoUrl);\n      const newVideo = await videoService.addVideo(embedUrl, videoTitle);\n      setVideos(prev => [newVideo, ...prev]);\n      setNewVideoUrl('');\n      setSelectedVideo(newVideo);\n    } catch (error) {\n      console.error('Erro detalhado:', error);\n      setError(error.message || error.error_description || 'Erro ao adicionar vídeo. Verifique se a URL é válida.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDelete = async videoId => {\n    try {\n      await videoService.deleteVideo(videoId);\n      setVideos(prev => prev.filter(video => video.id !== videoId));\n    } catch (error) {\n      console.error('Erro ao deletar vídeo:', error);\n    }\n  };\n  const handleVideoSelect = async (video, shouldAutoplay = false) => {\n    try {\n      if (isInitializing) return;\n      const videoId = extractVideoId(video.url);\n      if (!videoId) {\n        throw new Error('VideoId não encontrado');\n      }\n      window.dispatchEvent(new Event('videoStarting'));\n      if (player && isPlayerReady) {\n        await new Promise((resolve, reject) => {\n          try {\n            player.loadVideoById({\n              videoId: videoId,\n              startSeconds: 0,\n              suggestedQuality: 'large'\n            });\n            const timeoutId = setTimeout(() => {\n              reject(new Error('Timeout ao carregar vídeo'));\n            }, 5000);\n            player.addEventListener('onStateChange', function onStateChange(event) {\n              if (event.data !== -1) {\n                // -1 significa não iniciado\n                clearTimeout(timeoutId);\n                player.removeEventListener('onStateChange', onStateChange);\n                if (shouldAutoplay) {\n                  player.playVideo();\n                  updatePlayingState(true);\n                }\n                resolve();\n              }\n            });\n          } catch (e) {\n            reject(e);\n          }\n        });\n      } else {\n        await initializePlayer(videoId, shouldAutoplay);\n      }\n    } catch (error) {\n      console.error('Erro em handleVideoSelect:', error);\n      setError('Não foi possível reproduzir o vídeo. Por favor, tente novamente.');\n    }\n  };\n  const handlePlayerReady = (event, shouldAutoplay = false) => {\n    try {\n      console.log('Player pronto, shouldAutoplay:', shouldAutoplay);\n      const newPlayer = event.target;\n      setPlayer(newPlayer);\n      setIsPlayerReady(true);\n      if (shouldAutoplay) {\n        console.log('Iniciando reprodução automática');\n        newPlayer.playVideo();\n        updatePlayingState(true);\n      }\n    } catch (error) {\n      console.error('Erro em handlePlayerReady:', error);\n    }\n  };\n  const handleStateChange = event => {\n    try {\n      if (event.data === 0) {\n        // vídeo terminou\n        updatePlayingState(false);\n        window.dispatchEvent(new Event('externalMediaStop'));\n        onEnded === null || onEnded === void 0 ? void 0 : onEnded();\n      } else if (event.data === 1) {\n        // vídeo começou a tocar\n        updatePlayingState(true);\n        window.dispatchEvent(new Event('externalMediaPlay'));\n      } else if (event.data === 2) {\n        // vídeo foi pausado\n        updatePlayingState(false);\n        window.dispatchEvent(new Event('externalMediaStop'));\n      } else if (event.data === -1) {\n        // vídeo não iniciado\n        updatePlayingState(false);\n      } else if (event.data === 3) {// vídeo bufferizando\n        // Não altera o estado aqui\n      }\n    } catch (error) {\n      console.error('Erro no handleStateChange:', error);\n    }\n  };\n\n  // Função para extrair videoId do YouTube\n  const extractVideoId = (url = '') => {\n    try {\n      if (!url) return '';\n      let videoId = '';\n      if (url.includes('youtube.com/embed/')) {\n        var _url$split$7;\n        videoId = (_url$split$7 = url.split('embed/')[1]) === null || _url$split$7 === void 0 ? void 0 : _url$split$7.split('?')[0];\n      } else if (url.includes('youtube.com/watch')) {\n        var _url$split$8;\n        videoId = (_url$split$8 = url.split('v=')[1]) === null || _url$split$8 === void 0 ? void 0 : _url$split$8.split('&')[0];\n      } else if (url.includes('youtu.be/')) {\n        var _url$split$9;\n        videoId = (_url$split$9 = url.split('youtu.be/')[1]) === null || _url$split$9 === void 0 ? void 0 : _url$split$9.split('?')[0];\n      }\n      console.log('Extraído videoId:', videoId, 'da URL:', url);\n      return videoId;\n    } catch (error) {\n      console.error('Erro ao extrair videoId:', error);\n      return '';\n    }\n  };\n\n  // Adicione esta função para controlar o fade do volume do iframe\n  const fadeIframeVolume = (start, end, duration) => {\n    if (!player || !isPlayerReady) return;\n    const steps = 20;\n    const stepValue = (end - start) / steps;\n    const stepDuration = duration / steps;\n    let currentStep = 0;\n    const fadeInterval = setInterval(() => {\n      currentStep++;\n      const newVolume = start + stepValue * currentStep;\n      const volume = Math.min(Math.max(newVolume, 0), 1) * 100;\n      player.setVolume(volume);\n      if (currentStep >= steps) {\n        clearInterval(fadeInterval);\n      }\n    }, stepDuration);\n  };\n\n  // Adicione este useEffect para escutar eventos de áudio\n  useEffect(() => {\n    const handleAudioPlay = () => {\n      if (isPlayerReady) {\n        fadeIframeVolume(1, 0.10, 500);\n      }\n    };\n    const handleAudioStop = () => {\n      if (isPlayerReady) {\n        fadeIframeVolume(0.10, 1, 500);\n      }\n    };\n    window.addEventListener('audioPlay', handleAudioPlay);\n    window.addEventListener('audioStop', handleAudioStop);\n    return () => {\n      window.removeEventListener('audioPlay', handleAudioPlay);\n      window.removeEventListener('audioStop', handleAudioStop);\n    };\n  }, [isPlayerReady]);\n\n  // Adicione este useEffect para monitorar mudanças no selectedVideo\n  useEffect(() => {\n    if (selectedVideo) {\n      const videoId = extractVideoId(selectedVideo.url);\n      if (videoId) {\n        console.log('Detectada mudança no selectedVideo, iniciando com autoplay');\n        handleVideoSelect(selectedVideo, true);\n      }\n    }\n  }, [selectedVideo]);\n\n  // Adicione este useEffect para lidar com erros de rede\n  useEffect(() => {\n    const handleOnline = () => {\n      if (selectedVideo) {\n        initializePlayer(extractVideoId(selectedVideo.url), true);\n      }\n    };\n    window.addEventListener('online', handleOnline);\n    return () => window.removeEventListener('online', handleOnline);\n  }, [selectedVideo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddVideo,\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          value: newVideoUrl,\n          onChange: e => setNewVideoUrl(e.target.value),\n          placeholder: \"Cole a URL do YouTube ou Vimeo aqui\",\n          className: \"w-full bg-[#2d2d2d] border border-[#404040] text-gray-200 rounded px-3 py-2 focus:border-[#e1aa1e] focus:outline-none\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-400 text-sm\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleAddVideo(),\n        className: `flex-1 ${isLoading ? 'bg-[#e1aa1e]/50 cursor-not-allowed' : 'bg-[#e1aa1e] hover:bg-[#e1aa1e]/80'} text-gray-900 px-3 py-1.5 rounded transition-colors flex items-center justify-center gap-2`,\n        disabled: isLoading,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-4 h-4\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M12 4v16m8-8H4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), isLoading ? 'Adicionando...' : 'Buscar Vídeo']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setIsSidebarOpen(true),\n        className: \"flex-1 bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-3 py-1.5 rounded flex items-center justify-center gap-2 transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-4 h-4\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M4 6h16M4 12h16M4 18h16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this), \"\\xDAltimos V\\xEDdeos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-lg overflow-hidden border border-[#404040]\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative pt-[56.25%]\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"youtube-player\",\n            className: \"absolute top-0 left-0 w-full h-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoSidebar, {\n      isOpen: isSidebarOpen,\n      onClose: () => setIsSidebarOpen(false),\n      videos: videos,\n      onVideoSelect: handleVideoSelect,\n      setIsPlaying: setIsPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 469,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"s5Chx9rGLoV1Iprm3TSDst4X9Q4=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","videoService","VideoSidebar","jsxDEV","_jsxDEV","VideoPlayer","videoId","onEnded","autoplay","isPlaying","setIsPlaying","shouldAutoplay","_s","_videos$3","opts","height","width","playerVars","controls","rel","videos","setVideos","newVideoUrl","setNewVideoUrl","error","setError","isLoading","setIsLoading","isSidebarOpen","setIsSidebarOpen","selectedVideo","setSelectedVideo","player","setPlayer","isPlayerReady","setIsPlayerReady","localIsPlaying","setLocalIsPlaying","isInitializing","setIsInitializing","updatePlayingState","state","loadVideos","loadYouTubeAPI","Promise","resolve","_firstScriptTag$paren","existingScript","document","querySelector","window","YT","Player","tag","createElement","src","async","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","initializePlayer","_YT","_videos$","Error","destroy","e","console","playerContainer","getElementById","firstChild","removeChild","currentVideoId","extractVideoId","url","reject","newPlayer","events","onReady","event","handlePlayerReady","target","onStateChange","handleStateChange","onError","enablejsapi","origin","location","widget_referrer","playsinline","modestbranding","setTimeout","_videos$2","data","getRecentVideos","getEmbedUrl","log","includes","_url$split$","_url$split$2","split","embedUrl","_url$split$3","getVideoTitle","_url$split$4","_url$split$5","_data$items$","_data$items$$snippet","response","fetch","json","items","snippet","title","_url$split$6","_data$","handleAddVideo","preventDefault","trim","videoTitle","newVideo","addVideo","prev","message","error_description","handleDelete","deleteVideo","filter","video","id","handleVideoSelect","dispatchEvent","Event","loadVideoById","startSeconds","suggestedQuality","timeoutId","addEventListener","clearTimeout","removeEventListener","playVideo","_url$split$7","_url$split$8","_url$split$9","fadeIframeVolume","start","end","duration","steps","stepValue","stepDuration","currentStep","fadeInterval","setInterval","newVolume","volume","Math","min","max","setVolume","clearInterval","handleAudioPlay","handleAudioStop","handleOnline","className","children","onSubmit","type","value","onChange","placeholder","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","isOpen","onClose","onVideoSelect","_c","$RefreshReg$"],"sources":["C:/Users/genil/Desktop/em desemvolvimento Sistema academia/src/components/VideoPlayer.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { videoService, VideoData } from '../lib/supabase';\nimport VideoSidebar from './VideoSidebar';\n\ninterface VideoPlayerProps {\n  videoId: string;\n  onEnded?: () => void;\n  autoplay?: boolean;\n  isPlaying?: boolean;\n  setIsPlaying?: (playing: boolean) => void;\n  shouldAutoplay?: boolean;\n}\n\nexport const VideoPlayer: React.FC<VideoPlayerProps> = ({ \n  videoId, \n  onEnded,\n  autoplay = false,\n  isPlaying = false,\n  setIsPlaying = () => {},\n  shouldAutoplay = false\n}) => {\n  const opts = {\n    height: '100%',\n    width: '100%',\n    playerVars: {\n      autoplay: autoplay ? 1 : 0,\n      controls: 1,\n      rel: 0,\n    },\n  };\n\n  const [videos, setVideos] = useState<VideoData[]>([]);\n  const [newVideoUrl, setNewVideoUrl] = useState('');\n  const [error, setError] = useState<string>('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [selectedVideo, setSelectedVideo] = useState<VideoData | null>(null);\n  const [player, setPlayer] = useState<any>(null);\n  const [isPlayerReady, setIsPlayerReady] = useState(false);\n  const [localIsPlaying, setLocalIsPlaying] = useState(isPlaying);\n  const [isInitializing, setIsInitializing] = useState(false);\n\n  useEffect(() => {\n    setLocalIsPlaying(isPlaying);\n  }, [isPlaying]);\n\n  const updatePlayingState = (state: boolean) => {\n    setLocalIsPlaying(state);\n    setIsPlaying(state);\n  };\n\n  useEffect(() => {\n    loadVideos();\n  }, []);\n\n  const loadYouTubeAPI = () => {\n    return new Promise<void>((resolve) => {\n      const existingScript = document.querySelector('script[src=\"https://www.youtube.com/iframe_api\"]');\n      if (existingScript) {\n        if ((window as any).YT && (window as any).YT.Player) {\n          resolve();\n          return;\n        }\n      }\n\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n      tag.async = true;\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode?.insertBefore(tag, firstScriptTag);\n\n      (window as any).onYouTubeIframeAPIReady = () => {\n        resolve();\n      };\n    });\n  };\n\n  const initializePlayer = async (videoId?: string, shouldAutoplay: boolean = false) => {\n    if (isInitializing) return null;\n    setIsInitializing(true);\n\n    try {\n      await loadYouTubeAPI();\n      \n      if (!(window as any).YT?.Player) {\n        throw new Error('API do YouTube não está disponível');\n      }\n\n      if (player) {\n        try {\n          player.destroy();\n        } catch (e) {\n          console.error('Erro ao destruir player existente:', e);\n        }\n        setPlayer(null);\n        setIsPlayerReady(false);\n      }\n\n      const playerContainer = document.getElementById('youtube-player');\n      if (!playerContainer) {\n        throw new Error('Container do player não encontrado');\n      }\n\n      while (playerContainer.firstChild) {\n        playerContainer.removeChild(playerContainer.firstChild);\n      }\n\n      const currentVideoId = videoId || extractVideoId(selectedVideo?.url || videos[0]?.url);\n      if (!currentVideoId) {\n        throw new Error('VideoId não encontrado');\n      }\n\n      return new Promise((resolve, reject) => {\n        try {\n          const newPlayer = new (window as any).YT.Player('youtube-player', {\n            videoId: currentVideoId,\n            height: '100%',\n            width: '100%',\n            events: {\n              onReady: (event: any) => {\n                handlePlayerReady(event, shouldAutoplay);\n                resolve(event.target);\n              },\n              onStateChange: handleStateChange,\n              onError: (error: any) => {\n                console.error('Erro do player:', error);\n                reject(error);\n              }\n            },\n            playerVars: {\n              enablejsapi: 1,\n              origin: window.location.origin,\n              widget_referrer: window.location.origin,\n              playsinline: 1,\n              controls: 1,\n              rel: 0,\n              modestbranding: 1,\n              autoplay: shouldAutoplay ? 1 : 0\n            }\n          });\n\n          setPlayer(newPlayer);\n        } catch (error) {\n          reject(error);\n        }\n      });\n    } catch (error) {\n      console.error('Erro ao inicializar player:', error);\n      // Tenta novamente após um delay\n      setTimeout(() => {\n        setIsInitializing(false);\n        initializePlayer(videoId, shouldAutoplay);\n      }, 2000);\n      return null;\n    } finally {\n      setIsInitializing(false);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedVideo || videos[0]) {\n      const videoId = extractVideoId(selectedVideo?.url || videos[0]?.url);\n      if (videoId) {\n        initializePlayer(videoId, shouldAutoplay);\n      }\n    }\n\n    return () => {\n      if (player) {\n        try {\n          player.destroy();\n          setPlayer(null);\n          setIsPlayerReady(false);\n        } catch (error) {\n          console.error('Erro ao destruir player:', error);\n        }\n      }\n    };\n  }, [selectedVideo?.url, videos[0]?.url]);\n\n  const loadVideos = async () => {\n    try {\n      const data = await videoService.getRecentVideos();\n      setVideos(data);\n    } catch (error) {\n      console.error('Erro ao carregar vídeos:', error);\n    }\n  };\n\n  // Função para converter URL do YouTube em formato embed\n  const getEmbedUrl = (url: string) => {\n    console.log('URL original:', url);\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        const videoId = url.includes('youtube.com') \n          ? url.split('v=')[1]?.split('&')[0]\n          : url.split('youtu.be/')[1]?.split('?')[0];\n        \n        const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      if (url.includes('vimeo.com')) {\n        const videoId = url.split('vimeo.com/')[1]?.split('?')[0];\n        const embedUrl = `https://player.vimeo.com/video/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      return url;\n    } catch (error) {\n      console.error('Erro ao processar URL:', error);\n      return url;\n    }\n  };\n\n  // Função para extrair título do vídeo do YouTube\n  const getVideoTitle = async (url: string): Promise<string> => {\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        const videoId = url.includes('youtube.com')\n          ? url.split('v=')[1]?.split('&')[0]\n          : url.split('youtu.be/')[1]?.split('?')[0];\n        \n        const response = await fetch(\n          `https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=AIzaSyAyTc_jYQSVM_3kg95t8ai3CWckZGG0v4c&part=snippet`\n        );\n        const data = await response.json();\n        \n        if (data.error) {\n          console.error('Erro da API do YouTube:', data.error);\n          return 'Vídeo do YouTube';\n        }\n\n        return data.items[0]?.snippet?.title || 'Vídeo do YouTube';\n      }\n      \n      if (url.includes('vimeo.com')) {\n        const videoId = url.split('vimeo.com/')[1]?.split('?')[0];\n        const response = await fetch(`https://vimeo.com/api/v2/video/${videoId}.json`);\n        const data = await response.json();\n        return data[0]?.title || 'Vídeo do Vimeo';\n      }\n      \n      return 'Vídeo';\n    } catch (error) {\n      console.error('Erro ao obter título do vídeo:', error);\n      return 'Vídeo';\n    }\n  };\n\n  const handleAddVideo = async (e?: React.FormEvent) => {\n    if (e) e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    \n    if (!newVideoUrl.trim()) {\n      setError('Por favor, insira uma URL válida');\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      const embedUrl = getEmbedUrl(newVideoUrl);\n      const videoTitle = await getVideoTitle(newVideoUrl);\n      \n      const newVideo = await videoService.addVideo(embedUrl, videoTitle);\n      setVideos(prev => [newVideo, ...prev]);\n      setNewVideoUrl('');\n      setSelectedVideo(newVideo);\n    } catch (error: any) {\n      console.error('Erro detalhado:', error);\n      setError(\n        error.message || \n        error.error_description || \n        'Erro ao adicionar vídeo. Verifique se a URL é válida.'\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDelete = async (videoId: string) => {\n    try {\n      await videoService.deleteVideo(videoId);\n      setVideos(prev => prev.filter(video => video.id !== videoId));\n    } catch (error) {\n      console.error('Erro ao deletar vídeo:', error);\n    }\n  };\n\n  const handleVideoSelect = async (video: VideoData, shouldAutoplay: boolean = false) => {\n    try {\n      if (isInitializing) return;\n      \n      const videoId = extractVideoId(video.url);\n      if (!videoId) {\n        throw new Error('VideoId não encontrado');\n      }\n\n      window.dispatchEvent(new Event('videoStarting'));\n\n      if (player && isPlayerReady) {\n        await new Promise<void>((resolve, reject) => {\n          try {\n            player.loadVideoById({\n              videoId: videoId,\n              startSeconds: 0,\n              suggestedQuality: 'large'\n            });\n\n            const timeoutId = setTimeout(() => {\n              reject(new Error('Timeout ao carregar vídeo'));\n            }, 5000);\n\n            player.addEventListener('onStateChange', function onStateChange(event: any) {\n              if (event.data !== -1) { // -1 significa não iniciado\n                clearTimeout(timeoutId);\n                player.removeEventListener('onStateChange', onStateChange);\n                if (shouldAutoplay) {\n                  player.playVideo();\n                  updatePlayingState(true);\n                }\n                resolve();\n              }\n            });\n          } catch (e) {\n            reject(e);\n          }\n        });\n      } else {\n        await initializePlayer(videoId, shouldAutoplay);\n      }\n    } catch (error) {\n      console.error('Erro em handleVideoSelect:', error);\n      setError('Não foi possível reproduzir o vídeo. Por favor, tente novamente.');\n    }\n  };\n\n  const handlePlayerReady = (event: any, shouldAutoplay: boolean = false) => {\n    try {\n      console.log('Player pronto, shouldAutoplay:', shouldAutoplay);\n      const newPlayer = event.target;\n      setPlayer(newPlayer);\n      setIsPlayerReady(true);\n      \n      if (shouldAutoplay) {\n        console.log('Iniciando reprodução automática');\n        newPlayer.playVideo();\n        updatePlayingState(true);\n      }\n    } catch (error) {\n      console.error('Erro em handlePlayerReady:', error);\n    }\n  };\n\n  const handleStateChange = (event: any) => {\n    try {\n      if (event.data === 0) { // vídeo terminou\n        updatePlayingState(false);\n        window.dispatchEvent(new Event('externalMediaStop'));\n        onEnded?.();\n      } else if (event.data === 1) { // vídeo começou a tocar\n        updatePlayingState(true);\n        window.dispatchEvent(new Event('externalMediaPlay'));\n      } else if (event.data === 2) { // vídeo foi pausado\n        updatePlayingState(false);\n        window.dispatchEvent(new Event('externalMediaStop'));\n      } else if (event.data === -1) { // vídeo não iniciado\n        updatePlayingState(false);\n      } else if (event.data === 3) { // vídeo bufferizando\n        // Não altera o estado aqui\n      }\n    } catch (error) {\n      console.error('Erro no handleStateChange:', error);\n    }\n  };\n\n  // Função para extrair videoId do YouTube\n  const extractVideoId = (url: string = '') => {\n    try {\n      if (!url) return '';\n      \n      let videoId = '';\n      \n      if (url.includes('youtube.com/embed/')) {\n        videoId = url.split('embed/')[1]?.split('?')[0];\n      } else if (url.includes('youtube.com/watch')) {\n        videoId = url.split('v=')[1]?.split('&')[0];\n      } else if (url.includes('youtu.be/')) {\n        videoId = url.split('youtu.be/')[1]?.split('?')[0];\n      }\n\n      console.log('Extraído videoId:', videoId, 'da URL:', url);\n      return videoId;\n    } catch (error) {\n      console.error('Erro ao extrair videoId:', error);\n      return '';\n    }\n  };\n\n  // Adicione esta função para controlar o fade do volume do iframe\n  const fadeIframeVolume = (start: number, end: number, duration: number) => {\n    if (!player || !isPlayerReady) return;\n\n    const steps = 20;\n    const stepValue = (end - start) / steps;\n    const stepDuration = duration / steps;\n    let currentStep = 0;\n\n    const fadeInterval = setInterval(() => {\n      currentStep++;\n      const newVolume = start + (stepValue * currentStep);\n      const volume = Math.min(Math.max(newVolume, 0), 1) * 100;\n      player.setVolume(volume);\n\n      if (currentStep >= steps) {\n        clearInterval(fadeInterval);\n      }\n    }, stepDuration);\n  };\n\n  // Adicione este useEffect para escutar eventos de áudio\n  useEffect(() => {\n    const handleAudioPlay = () => {\n      if (isPlayerReady) {\n        fadeIframeVolume(1, 0.10, 500);\n      }\n    };\n\n    const handleAudioStop = () => {\n      if (isPlayerReady) {\n        fadeIframeVolume(0.10, 1, 500);\n      }\n    };\n\n    window.addEventListener('audioPlay', handleAudioPlay);\n    window.addEventListener('audioStop', handleAudioStop);\n\n    return () => {\n      window.removeEventListener('audioPlay', handleAudioPlay);\n      window.removeEventListener('audioStop', handleAudioStop);\n    };\n  }, [isPlayerReady]);\n\n  // Adicione este useEffect para monitorar mudanças no selectedVideo\n  useEffect(() => {\n    if (selectedVideo) {\n      const videoId = extractVideoId(selectedVideo.url);\n      if (videoId) {\n        console.log('Detectada mudança no selectedVideo, iniciando com autoplay');\n        handleVideoSelect(selectedVideo, true);\n      }\n    }\n  }, [selectedVideo]);\n\n  // Adicione este useEffect para lidar com erros de rede\n  useEffect(() => {\n    const handleOnline = () => {\n      if (selectedVideo) {\n        initializePlayer(extractVideoId(selectedVideo.url), true);\n      }\n    };\n\n    window.addEventListener('online', handleOnline);\n    return () => window.removeEventListener('online', handleOnline);\n  }, [selectedVideo]);\n\n  return (\n    <div className=\"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\">\n      {/* Formulário de busca */}\n      <form onSubmit={handleAddVideo} className=\"mb-3\">\n        <div className=\"flex flex-col gap-2\">\n          <input\n            type=\"url\"\n            value={newVideoUrl}\n            onChange={(e) => setNewVideoUrl(e.target.value)}\n            placeholder=\"Cole a URL do YouTube ou Vimeo aqui\"\n            className=\"w-full bg-[#2d2d2d] border border-[#404040] text-gray-200 rounded px-3 py-2 focus:border-[#e1aa1e] focus:outline-none\"\n            disabled={isLoading}\n          />\n          {error && <p className=\"text-red-400 text-sm\">{error}</p>}\n        </div>\n      </form>\n\n      {/* Botões de ação */}\n      <div className=\"flex gap-2 mb-3\">\n        <button\n          type=\"button\"\n          onClick={() => handleAddVideo()}\n          className={`flex-1 ${\n            isLoading \n              ? 'bg-[#e1aa1e]/50 cursor-not-allowed' \n              : 'bg-[#e1aa1e] hover:bg-[#e1aa1e]/80'\n          } text-gray-900 px-3 py-1.5 rounded transition-colors flex items-center justify-center gap-2`}\n          disabled={isLoading}\n        >\n          <svg\n            className=\"w-4 h-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M12 4v16m8-8H4\"\n            />\n          </svg>\n          {isLoading ? 'Adicionando...' : 'Buscar Vídeo'}\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsSidebarOpen(true)}\n          className=\"flex-1 bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-3 py-1.5 rounded flex items-center justify-center gap-2 transition-colors\"\n        >\n          <svg\n            className=\"w-4 h-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M4 6h16M4 12h16M4 18h16\"\n            />\n          </svg>\n          Últimos Vídeos\n        </button>\n      </div>\n\n      {/* Área do vídeo */}\n      <div>\n        <div className=\"rounded-lg overflow-hidden border border-[#404040]\">\n          <div className=\"relative pt-[56.25%]\">\n            <div\n              id=\"youtube-player\"\n              className=\"absolute top-0 left-0 w-full h-full\"\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Menu lateral */}\n      <VideoSidebar\n        isOpen={isSidebarOpen}\n        onClose={() => setIsSidebarOpen(false)}\n        videos={videos}\n        onVideoSelect={handleVideoSelect}\n        setIsPlaying={setIsPlaying}\n      />\n    </div>\n  );\n};\n\nexport default VideoPlayer; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAmB,iBAAiB;AACzD,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW1C,OAAO,MAAMC,WAAuC,GAAGA,CAAC;EACtDC,OAAO;EACPC,OAAO;EACPC,QAAQ,GAAG,KAAK;EAChBC,SAAS,GAAG,KAAK;EACjBC,YAAY,GAAGA,CAAA,KAAM,CAAC,CAAC;EACvBC,cAAc,GAAG;AACnB,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,SAAA;EACJ,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;MACVT,QAAQ,EAAEA,QAAQ,GAAG,CAAC,GAAG,CAAC;MAC1BU,QAAQ,EAAE,CAAC;MACXC,GAAG,EAAE;IACP;EACF,CAAC;EAED,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAc,EAAE,CAAC;EACrD,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC6B,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC+B,aAAa,EAAEC,gBAAgB,CAAC,GAAGhC,QAAQ,CAAmB,IAAI,CAAC;EAC1E,MAAM,CAACiC,MAAM,EAAEC,SAAS,CAAC,GAAGlC,QAAQ,CAAM,IAAI,CAAC;EAC/C,MAAM,CAACmC,aAAa,EAAEC,gBAAgB,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACqC,cAAc,EAAEC,iBAAiB,CAAC,GAAGtC,QAAQ,CAACU,SAAS,CAAC;EAC/D,MAAM,CAAC6B,cAAc,EAAEC,iBAAiB,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EAE3DC,SAAS,CAAC,MAAM;IACdqC,iBAAiB,CAAC5B,SAAS,CAAC;EAC9B,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAM+B,kBAAkB,GAAIC,KAAc,IAAK;IAC7CJ,iBAAiB,CAACI,KAAK,CAAC;IACxB/B,YAAY,CAAC+B,KAAK,CAAC;EACrB,CAAC;EAEDzC,SAAS,CAAC,MAAM;IACd0C,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,OAAO,IAAIC,OAAO,CAAQC,OAAO,IAAK;MAAA,IAAAC,qBAAA;MACpC,MAAMC,cAAc,GAAGC,QAAQ,CAACC,aAAa,CAAC,kDAAkD,CAAC;MACjG,IAAIF,cAAc,EAAE;QAClB,IAAKG,MAAM,CAASC,EAAE,IAAKD,MAAM,CAASC,EAAE,CAACC,MAAM,EAAE;UACnDP,OAAO,CAAC,CAAC;UACT;QACF;MACF;MAEA,MAAMQ,GAAG,GAAGL,QAAQ,CAACM,aAAa,CAAC,QAAQ,CAAC;MAC5CD,GAAG,CAACE,GAAG,GAAG,oCAAoC;MAC9CF,GAAG,CAACG,KAAK,GAAG,IAAI;MAChB,MAAMC,cAAc,GAAGT,QAAQ,CAACU,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;MACjE,CAAAZ,qBAAA,GAAAW,cAAc,CAACE,UAAU,cAAAb,qBAAA,uBAAzBA,qBAAA,CAA2Bc,YAAY,CAACP,GAAG,EAAEI,cAAc,CAAC;MAE3DP,MAAM,CAASW,uBAAuB,GAAG,MAAM;QAC9ChB,OAAO,CAAC,CAAC;MACX,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,MAAMiB,gBAAgB,GAAG,MAAAA,CAAOxD,OAAgB,EAAEK,cAAuB,GAAG,KAAK,KAAK;IACpF,IAAI2B,cAAc,EAAE,OAAO,IAAI;IAC/BC,iBAAiB,CAAC,IAAI,CAAC;IAEvB,IAAI;MAAA,IAAAwB,GAAA,EAAAC,QAAA;MACF,MAAMrB,cAAc,CAAC,CAAC;MAEtB,IAAI,GAAAoB,GAAA,GAAEb,MAAM,CAASC,EAAE,cAAAY,GAAA,eAAlBA,GAAA,CAAoBX,MAAM,GAAE;QAC/B,MAAM,IAAIa,KAAK,CAAC,oCAAoC,CAAC;MACvD;MAEA,IAAIjC,MAAM,EAAE;QACV,IAAI;UACFA,MAAM,CAACkC,OAAO,CAAC,CAAC;QAClB,CAAC,CAAC,OAAOC,CAAC,EAAE;UACVC,OAAO,CAAC5C,KAAK,CAAC,oCAAoC,EAAE2C,CAAC,CAAC;QACxD;QACAlC,SAAS,CAAC,IAAI,CAAC;QACfE,gBAAgB,CAAC,KAAK,CAAC;MACzB;MAEA,MAAMkC,eAAe,GAAGrB,QAAQ,CAACsB,cAAc,CAAC,gBAAgB,CAAC;MACjE,IAAI,CAACD,eAAe,EAAE;QACpB,MAAM,IAAIJ,KAAK,CAAC,oCAAoC,CAAC;MACvD;MAEA,OAAOI,eAAe,CAACE,UAAU,EAAE;QACjCF,eAAe,CAACG,WAAW,CAACH,eAAe,CAACE,UAAU,CAAC;MACzD;MAEA,MAAME,cAAc,GAAGnE,OAAO,IAAIoE,cAAc,CAAC,CAAA5C,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAE6C,GAAG,OAAAX,QAAA,GAAI5C,MAAM,CAAC,CAAC,CAAC,cAAA4C,QAAA,uBAATA,QAAA,CAAWW,GAAG,EAAC;MACtF,IAAI,CAACF,cAAc,EAAE;QACnB,MAAM,IAAIR,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MAEA,OAAO,IAAIrB,OAAO,CAAC,CAACC,OAAO,EAAE+B,MAAM,KAAK;QACtC,IAAI;UACF,MAAMC,SAAS,GAAG,IAAK3B,MAAM,CAASC,EAAE,CAACC,MAAM,CAAC,gBAAgB,EAAE;YAChE9C,OAAO,EAAEmE,cAAc;YACvB1D,MAAM,EAAE,MAAM;YACdC,KAAK,EAAE,MAAM;YACb8D,MAAM,EAAE;cACNC,OAAO,EAAGC,KAAU,IAAK;gBACvBC,iBAAiB,CAACD,KAAK,EAAErE,cAAc,CAAC;gBACxCkC,OAAO,CAACmC,KAAK,CAACE,MAAM,CAAC;cACvB,CAAC;cACDC,aAAa,EAAEC,iBAAiB;cAChCC,OAAO,EAAG7D,KAAU,IAAK;gBACvB4C,OAAO,CAAC5C,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;gBACvCoD,MAAM,CAACpD,KAAK,CAAC;cACf;YACF,CAAC;YACDP,UAAU,EAAE;cACVqE,WAAW,EAAE,CAAC;cACdC,MAAM,EAAErC,MAAM,CAACsC,QAAQ,CAACD,MAAM;cAC9BE,eAAe,EAAEvC,MAAM,CAACsC,QAAQ,CAACD,MAAM;cACvCG,WAAW,EAAE,CAAC;cACdxE,QAAQ,EAAE,CAAC;cACXC,GAAG,EAAE,CAAC;cACNwE,cAAc,EAAE,CAAC;cACjBnF,QAAQ,EAAEG,cAAc,GAAG,CAAC,GAAG;YACjC;UACF,CAAC,CAAC;UAEFsB,SAAS,CAAC4C,SAAS,CAAC;QACtB,CAAC,CAAC,OAAOrD,KAAK,EAAE;UACdoD,MAAM,CAACpD,KAAK,CAAC;QACf;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACd4C,OAAO,CAAC5C,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD;MACAoE,UAAU,CAAC,MAAM;QACfrD,iBAAiB,CAAC,KAAK,CAAC;QACxBuB,gBAAgB,CAACxD,OAAO,EAAEK,cAAc,CAAC;MAC3C,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,IAAI;IACb,CAAC,SAAS;MACR4B,iBAAiB,CAAC,KAAK,CAAC;IAC1B;EACF,CAAC;EAEDvC,SAAS,CAAC,MAAM;IACd,IAAI8B,aAAa,IAAIV,MAAM,CAAC,CAAC,CAAC,EAAE;MAAA,IAAAyE,SAAA;MAC9B,MAAMvF,OAAO,GAAGoE,cAAc,CAAC,CAAA5C,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAE6C,GAAG,OAAAkB,SAAA,GAAIzE,MAAM,CAAC,CAAC,CAAC,cAAAyE,SAAA,uBAATA,SAAA,CAAWlB,GAAG,EAAC;MACpE,IAAIrE,OAAO,EAAE;QACXwD,gBAAgB,CAACxD,OAAO,EAAEK,cAAc,CAAC;MAC3C;IACF;IAEA,OAAO,MAAM;MACX,IAAIqB,MAAM,EAAE;QACV,IAAI;UACFA,MAAM,CAACkC,OAAO,CAAC,CAAC;UAChBjC,SAAS,CAAC,IAAI,CAAC;UACfE,gBAAgB,CAAC,KAAK,CAAC;QACzB,CAAC,CAAC,OAAOX,KAAK,EAAE;UACd4C,OAAO,CAAC5C,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAClD;MACF;IACF,CAAC;EACH,CAAC,EAAE,CAACM,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAE6C,GAAG,GAAA9D,SAAA,GAAEO,MAAM,CAAC,CAAC,CAAC,cAAAP,SAAA,uBAATA,SAAA,CAAW8D,GAAG,CAAC,CAAC;EAExC,MAAMjC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMoD,IAAI,GAAG,MAAM7F,YAAY,CAAC8F,eAAe,CAAC,CAAC;MACjD1E,SAAS,CAACyE,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOtE,KAAK,EAAE;MACd4C,OAAO,CAAC5C,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;;EAED;EACA,MAAMwE,WAAW,GAAIrB,GAAW,IAAK;IACnCP,OAAO,CAAC6B,GAAG,CAAC,eAAe,EAAEtB,GAAG,CAAC;IACjC,IAAI;MACF,IAAIA,GAAG,CAACuB,QAAQ,CAAC,aAAa,CAAC,IAAIvB,GAAG,CAACuB,QAAQ,CAAC,UAAU,CAAC,EAAE;QAAA,IAAAC,WAAA,EAAAC,YAAA;QAC3D,MAAM9F,OAAO,GAAGqE,GAAG,CAACuB,QAAQ,CAAC,aAAa,CAAC,IAAAC,WAAA,GACvCxB,GAAG,CAAC0B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAAF,WAAA,uBAAlBA,WAAA,CAAoBE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAAD,YAAA,GACjCzB,GAAG,CAAC0B,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,cAAAD,YAAA,uBAAzBA,YAAA,CAA2BC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAE5C,MAAMC,QAAQ,GAAG,iCAAiChG,OAAO,EAAE;QAC3D8D,OAAO,CAAC6B,GAAG,CAAC,iBAAiB,EAAEK,QAAQ,CAAC;QACxC,OAAOA,QAAQ;MACjB;MACA,IAAI3B,GAAG,CAACuB,QAAQ,CAAC,WAAW,CAAC,EAAE;QAAA,IAAAK,YAAA;QAC7B,MAAMjG,OAAO,IAAAiG,YAAA,GAAG5B,GAAG,CAAC0B,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,cAAAE,YAAA,uBAA1BA,YAAA,CAA4BF,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACzD,MAAMC,QAAQ,GAAG,kCAAkChG,OAAO,EAAE;QAC5D8D,OAAO,CAAC6B,GAAG,CAAC,iBAAiB,EAAEK,QAAQ,CAAC;QACxC,OAAOA,QAAQ;MACjB;MACA,OAAO3B,GAAG;IACZ,CAAC,CAAC,OAAOnD,KAAK,EAAE;MACd4C,OAAO,CAAC5C,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAOmD,GAAG;IACZ;EACF,CAAC;;EAED;EACA,MAAM6B,aAAa,GAAG,MAAO7B,GAAW,IAAsB;IAC5D,IAAI;MACF,IAAIA,GAAG,CAACuB,QAAQ,CAAC,aAAa,CAAC,IAAIvB,GAAG,CAACuB,QAAQ,CAAC,UAAU,CAAC,EAAE;QAAA,IAAAO,YAAA,EAAAC,YAAA,EAAAC,YAAA,EAAAC,oBAAA;QAC3D,MAAMtG,OAAO,GAAGqE,GAAG,CAACuB,QAAQ,CAAC,aAAa,CAAC,IAAAO,YAAA,GACvC9B,GAAG,CAAC0B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAAI,YAAA,uBAAlBA,YAAA,CAAoBJ,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAAK,YAAA,GACjC/B,GAAG,CAAC0B,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,cAAAK,YAAA,uBAAzBA,YAAA,CAA2BL,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAE5C,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mDAAmDxG,OAAO,2DAC5D,CAAC;QACD,MAAMwF,IAAI,GAAG,MAAMe,QAAQ,CAACE,IAAI,CAAC,CAAC;QAElC,IAAIjB,IAAI,CAACtE,KAAK,EAAE;UACd4C,OAAO,CAAC5C,KAAK,CAAC,yBAAyB,EAAEsE,IAAI,CAACtE,KAAK,CAAC;UACpD,OAAO,kBAAkB;QAC3B;QAEA,OAAO,EAAAmF,YAAA,GAAAb,IAAI,CAACkB,KAAK,CAAC,CAAC,CAAC,cAAAL,YAAA,wBAAAC,oBAAA,GAAbD,YAAA,CAAeM,OAAO,cAAAL,oBAAA,uBAAtBA,oBAAA,CAAwBM,KAAK,KAAI,kBAAkB;MAC5D;MAEA,IAAIvC,GAAG,CAACuB,QAAQ,CAAC,WAAW,CAAC,EAAE;QAAA,IAAAiB,YAAA,EAAAC,MAAA;QAC7B,MAAM9G,OAAO,IAAA6G,YAAA,GAAGxC,GAAG,CAAC0B,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,cAAAc,YAAA,uBAA1BA,YAAA,CAA4Bd,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACzD,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkCxG,OAAO,OAAO,CAAC;QAC9E,MAAMwF,IAAI,GAAG,MAAMe,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClC,OAAO,EAAAK,MAAA,GAAAtB,IAAI,CAAC,CAAC,CAAC,cAAAsB,MAAA,uBAAPA,MAAA,CAASF,KAAK,KAAI,gBAAgB;MAC3C;MAEA,OAAO,OAAO;IAChB,CAAC,CAAC,OAAO1F,KAAK,EAAE;MACd4C,OAAO,CAAC5C,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD,OAAO,OAAO;IAChB;EACF,CAAC;EAED,MAAM6F,cAAc,GAAG,MAAOlD,CAAmB,IAAK;IACpD,IAAIA,CAAC,EAAEA,CAAC,CAACmD,cAAc,CAAC,CAAC;IACzB7F,QAAQ,CAAC,EAAE,CAAC;IACZE,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI,CAACL,WAAW,CAACiG,IAAI,CAAC,CAAC,EAAE;MACvB9F,QAAQ,CAAC,kCAAkC,CAAC;MAC5CE,YAAY,CAAC,KAAK,CAAC;MACnB;IACF;IAEA,IAAI;MACF,MAAM2E,QAAQ,GAAGN,WAAW,CAAC1E,WAAW,CAAC;MACzC,MAAMkG,UAAU,GAAG,MAAMhB,aAAa,CAAClF,WAAW,CAAC;MAEnD,MAAMmG,QAAQ,GAAG,MAAMxH,YAAY,CAACyH,QAAQ,CAACpB,QAAQ,EAAEkB,UAAU,CAAC;MAClEnG,SAAS,CAACsG,IAAI,IAAI,CAACF,QAAQ,EAAE,GAAGE,IAAI,CAAC,CAAC;MACtCpG,cAAc,CAAC,EAAE,CAAC;MAClBQ,gBAAgB,CAAC0F,QAAQ,CAAC;IAC5B,CAAC,CAAC,OAAOjG,KAAU,EAAE;MACnB4C,OAAO,CAAC5C,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvCC,QAAQ,CACND,KAAK,CAACoG,OAAO,IACbpG,KAAK,CAACqG,iBAAiB,IACvB,uDACF,CAAC;IACH,CAAC,SAAS;MACRlG,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMmG,YAAY,GAAG,MAAOxH,OAAe,IAAK;IAC9C,IAAI;MACF,MAAML,YAAY,CAAC8H,WAAW,CAACzH,OAAO,CAAC;MACvCe,SAAS,CAACsG,IAAI,IAAIA,IAAI,CAACK,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAK5H,OAAO,CAAC,CAAC;IAC/D,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACd4C,OAAO,CAAC5C,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAM2G,iBAAiB,GAAG,MAAAA,CAAOF,KAAgB,EAAEtH,cAAuB,GAAG,KAAK,KAAK;IACrF,IAAI;MACF,IAAI2B,cAAc,EAAE;MAEpB,MAAMhC,OAAO,GAAGoE,cAAc,CAACuD,KAAK,CAACtD,GAAG,CAAC;MACzC,IAAI,CAACrE,OAAO,EAAE;QACZ,MAAM,IAAI2D,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MAEAf,MAAM,CAACkF,aAAa,CAAC,IAAIC,KAAK,CAAC,eAAe,CAAC,CAAC;MAEhD,IAAIrG,MAAM,IAAIE,aAAa,EAAE;QAC3B,MAAM,IAAIU,OAAO,CAAO,CAACC,OAAO,EAAE+B,MAAM,KAAK;UAC3C,IAAI;YACF5C,MAAM,CAACsG,aAAa,CAAC;cACnBhI,OAAO,EAAEA,OAAO;cAChBiI,YAAY,EAAE,CAAC;cACfC,gBAAgB,EAAE;YACpB,CAAC,CAAC;YAEF,MAAMC,SAAS,GAAG7C,UAAU,CAAC,MAAM;cACjChB,MAAM,CAAC,IAAIX,KAAK,CAAC,2BAA2B,CAAC,CAAC;YAChD,CAAC,EAAE,IAAI,CAAC;YAERjC,MAAM,CAAC0G,gBAAgB,CAAC,eAAe,EAAE,SAASvD,aAAaA,CAACH,KAAU,EAAE;cAC1E,IAAIA,KAAK,CAACc,IAAI,KAAK,CAAC,CAAC,EAAE;gBAAE;gBACvB6C,YAAY,CAACF,SAAS,CAAC;gBACvBzG,MAAM,CAAC4G,mBAAmB,CAAC,eAAe,EAAEzD,aAAa,CAAC;gBAC1D,IAAIxE,cAAc,EAAE;kBAClBqB,MAAM,CAAC6G,SAAS,CAAC,CAAC;kBAClBrG,kBAAkB,CAAC,IAAI,CAAC;gBAC1B;gBACAK,OAAO,CAAC,CAAC;cACX;YACF,CAAC,CAAC;UACJ,CAAC,CAAC,OAAOsB,CAAC,EAAE;YACVS,MAAM,CAACT,CAAC,CAAC;UACX;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,MAAML,gBAAgB,CAACxD,OAAO,EAAEK,cAAc,CAAC;MACjD;IACF,CAAC,CAAC,OAAOa,KAAK,EAAE;MACd4C,OAAO,CAAC5C,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDC,QAAQ,CAAC,kEAAkE,CAAC;IAC9E;EACF,CAAC;EAED,MAAMwD,iBAAiB,GAAGA,CAACD,KAAU,EAAErE,cAAuB,GAAG,KAAK,KAAK;IACzE,IAAI;MACFyD,OAAO,CAAC6B,GAAG,CAAC,gCAAgC,EAAEtF,cAAc,CAAC;MAC7D,MAAMkE,SAAS,GAAGG,KAAK,CAACE,MAAM;MAC9BjD,SAAS,CAAC4C,SAAS,CAAC;MACpB1C,gBAAgB,CAAC,IAAI,CAAC;MAEtB,IAAIxB,cAAc,EAAE;QAClByD,OAAO,CAAC6B,GAAG,CAAC,iCAAiC,CAAC;QAC9CpB,SAAS,CAACgE,SAAS,CAAC,CAAC;QACrBrG,kBAAkB,CAAC,IAAI,CAAC;MAC1B;IACF,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACd4C,OAAO,CAAC5C,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAM4D,iBAAiB,GAAIJ,KAAU,IAAK;IACxC,IAAI;MACF,IAAIA,KAAK,CAACc,IAAI,KAAK,CAAC,EAAE;QAAE;QACtBtD,kBAAkB,CAAC,KAAK,CAAC;QACzBU,MAAM,CAACkF,aAAa,CAAC,IAAIC,KAAK,CAAC,mBAAmB,CAAC,CAAC;QACpD9H,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAG,CAAC;MACb,CAAC,MAAM,IAAIyE,KAAK,CAACc,IAAI,KAAK,CAAC,EAAE;QAAE;QAC7BtD,kBAAkB,CAAC,IAAI,CAAC;QACxBU,MAAM,CAACkF,aAAa,CAAC,IAAIC,KAAK,CAAC,mBAAmB,CAAC,CAAC;MACtD,CAAC,MAAM,IAAIrD,KAAK,CAACc,IAAI,KAAK,CAAC,EAAE;QAAE;QAC7BtD,kBAAkB,CAAC,KAAK,CAAC;QACzBU,MAAM,CAACkF,aAAa,CAAC,IAAIC,KAAK,CAAC,mBAAmB,CAAC,CAAC;MACtD,CAAC,MAAM,IAAIrD,KAAK,CAACc,IAAI,KAAK,CAAC,CAAC,EAAE;QAAE;QAC9BtD,kBAAkB,CAAC,KAAK,CAAC;MAC3B,CAAC,MAAM,IAAIwC,KAAK,CAACc,IAAI,KAAK,CAAC,EAAE,CAAE;QAC7B;MAAA;IAEJ,CAAC,CAAC,OAAOtE,KAAK,EAAE;MACd4C,OAAO,CAAC5C,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;;EAED;EACA,MAAMkD,cAAc,GAAGA,CAACC,GAAW,GAAG,EAAE,KAAK;IAC3C,IAAI;MACF,IAAI,CAACA,GAAG,EAAE,OAAO,EAAE;MAEnB,IAAIrE,OAAO,GAAG,EAAE;MAEhB,IAAIqE,GAAG,CAACuB,QAAQ,CAAC,oBAAoB,CAAC,EAAE;QAAA,IAAA4C,YAAA;QACtCxI,OAAO,IAAAwI,YAAA,GAAGnE,GAAG,CAAC0B,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAAyC,YAAA,uBAAtBA,YAAA,CAAwBzC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACjD,CAAC,MAAM,IAAI1B,GAAG,CAACuB,QAAQ,CAAC,mBAAmB,CAAC,EAAE;QAAA,IAAA6C,YAAA;QAC5CzI,OAAO,IAAAyI,YAAA,GAAGpE,GAAG,CAAC0B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAA0C,YAAA,uBAAlBA,YAAA,CAAoB1C,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC7C,CAAC,MAAM,IAAI1B,GAAG,CAACuB,QAAQ,CAAC,WAAW,CAAC,EAAE;QAAA,IAAA8C,YAAA;QACpC1I,OAAO,IAAA0I,YAAA,GAAGrE,GAAG,CAAC0B,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,cAAA2C,YAAA,uBAAzBA,YAAA,CAA2B3C,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACpD;MAEAjC,OAAO,CAAC6B,GAAG,CAAC,mBAAmB,EAAE3F,OAAO,EAAE,SAAS,EAAEqE,GAAG,CAAC;MACzD,OAAOrE,OAAO;IAChB,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACd4C,OAAO,CAAC5C,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,OAAO,EAAE;IACX;EACF,CAAC;;EAED;EACA,MAAMyH,gBAAgB,GAAGA,CAACC,KAAa,EAAEC,GAAW,EAAEC,QAAgB,KAAK;IACzE,IAAI,CAACpH,MAAM,IAAI,CAACE,aAAa,EAAE;IAE/B,MAAMmH,KAAK,GAAG,EAAE;IAChB,MAAMC,SAAS,GAAG,CAACH,GAAG,GAAGD,KAAK,IAAIG,KAAK;IACvC,MAAME,YAAY,GAAGH,QAAQ,GAAGC,KAAK;IACrC,IAAIG,WAAW,GAAG,CAAC;IAEnB,MAAMC,YAAY,GAAGC,WAAW,CAAC,MAAM;MACrCF,WAAW,EAAE;MACb,MAAMG,SAAS,GAAGT,KAAK,GAAII,SAAS,GAAGE,WAAY;MACnD,MAAMI,MAAM,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACJ,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG;MACxD3H,MAAM,CAACgI,SAAS,CAACJ,MAAM,CAAC;MAExB,IAAIJ,WAAW,IAAIH,KAAK,EAAE;QACxBY,aAAa,CAACR,YAAY,CAAC;MAC7B;IACF,CAAC,EAAEF,YAAY,CAAC;EAClB,CAAC;;EAED;EACAvJ,SAAS,CAAC,MAAM;IACd,MAAMkK,eAAe,GAAGA,CAAA,KAAM;MAC5B,IAAIhI,aAAa,EAAE;QACjB+G,gBAAgB,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC;MAChC;IACF,CAAC;IAED,MAAMkB,eAAe,GAAGA,CAAA,KAAM;MAC5B,IAAIjI,aAAa,EAAE;QACjB+G,gBAAgB,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC;MAChC;IACF,CAAC;IAED/F,MAAM,CAACwF,gBAAgB,CAAC,WAAW,EAAEwB,eAAe,CAAC;IACrDhH,MAAM,CAACwF,gBAAgB,CAAC,WAAW,EAAEyB,eAAe,CAAC;IAErD,OAAO,MAAM;MACXjH,MAAM,CAAC0F,mBAAmB,CAAC,WAAW,EAAEsB,eAAe,CAAC;MACxDhH,MAAM,CAAC0F,mBAAmB,CAAC,WAAW,EAAEuB,eAAe,CAAC;IAC1D,CAAC;EACH,CAAC,EAAE,CAACjI,aAAa,CAAC,CAAC;;EAEnB;EACAlC,SAAS,CAAC,MAAM;IACd,IAAI8B,aAAa,EAAE;MACjB,MAAMxB,OAAO,GAAGoE,cAAc,CAAC5C,aAAa,CAAC6C,GAAG,CAAC;MACjD,IAAIrE,OAAO,EAAE;QACX8D,OAAO,CAAC6B,GAAG,CAAC,4DAA4D,CAAC;QACzEkC,iBAAiB,CAACrG,aAAa,EAAE,IAAI,CAAC;MACxC;IACF;EACF,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;;EAEnB;EACA9B,SAAS,CAAC,MAAM;IACd,MAAMoK,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAItI,aAAa,EAAE;QACjBgC,gBAAgB,CAACY,cAAc,CAAC5C,aAAa,CAAC6C,GAAG,CAAC,EAAE,IAAI,CAAC;MAC3D;IACF,CAAC;IAEDzB,MAAM,CAACwF,gBAAgB,CAAC,QAAQ,EAAE0B,YAAY,CAAC;IAC/C,OAAO,MAAMlH,MAAM,CAAC0F,mBAAmB,CAAC,QAAQ,EAAEwB,YAAY,CAAC;EACjE,CAAC,EAAE,CAACtI,aAAa,CAAC,CAAC;EAEnB,oBACE1B,OAAA;IAAKiK,SAAS,EAAC,qDAAqD;IAAAC,QAAA,gBAElElK,OAAA;MAAMmK,QAAQ,EAAElD,cAAe;MAACgD,SAAS,EAAC,MAAM;MAAAC,QAAA,eAC9ClK,OAAA;QAAKiK,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClClK,OAAA;UACEoK,IAAI,EAAC,KAAK;UACVC,KAAK,EAAEnJ,WAAY;UACnBoJ,QAAQ,EAAGvG,CAAC,IAAK5C,cAAc,CAAC4C,CAAC,CAACe,MAAM,CAACuF,KAAK,CAAE;UAChDE,WAAW,EAAC,qCAAqC;UACjDN,SAAS,EAAC,uHAAuH;UACjIO,QAAQ,EAAElJ;QAAU;UAAAmJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC,EACDxJ,KAAK,iBAAIpB,OAAA;UAAGiK,SAAS,EAAC,sBAAsB;UAAAC,QAAA,EAAE9I;QAAK;UAAAqJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAGP5K,OAAA;MAAKiK,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BlK,OAAA;QACEoK,IAAI,EAAC,QAAQ;QACbS,OAAO,EAAEA,CAAA,KAAM5D,cAAc,CAAC,CAAE;QAChCgD,SAAS,EAAE,UACT3I,SAAS,GACL,oCAAoC,GACpC,oCAAoC,6FACoD;QAC9FkJ,QAAQ,EAAElJ,SAAU;QAAA4I,QAAA,gBAEpBlK,OAAA;UACEiK,SAAS,EAAC,SAAS;UACnBa,IAAI,EAAC,MAAM;UACXC,MAAM,EAAC,cAAc;UACrBC,OAAO,EAAC,WAAW;UAAAd,QAAA,eAEnBlK,OAAA;YACEiL,aAAa,EAAC,OAAO;YACrBC,cAAc,EAAC,OAAO;YACtBC,WAAW,EAAE,CAAE;YACfC,CAAC,EAAC;UAAgB;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,EACLtJ,SAAS,GAAG,gBAAgB,GAAG,cAAc;MAAA;QAAAmJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eAET5K,OAAA;QACEoK,IAAI,EAAC,QAAQ;QACbS,OAAO,EAAEA,CAAA,KAAMpJ,gBAAgB,CAAC,IAAI,CAAE;QACtCwI,SAAS,EAAC,4JAA4J;QAAAC,QAAA,gBAEtKlK,OAAA;UACEiK,SAAS,EAAC,SAAS;UACnBa,IAAI,EAAC,MAAM;UACXC,MAAM,EAAC,cAAc;UACrBC,OAAO,EAAC,WAAW;UAAAd,QAAA,eAEnBlK,OAAA;YACEiL,aAAa,EAAC,OAAO;YACrBC,cAAc,EAAC,OAAO;YACtBC,WAAW,EAAE,CAAE;YACfC,CAAC,EAAC;UAAyB;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,wBAER;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGN5K,OAAA;MAAAkK,QAAA,eACElK,OAAA;QAAKiK,SAAS,EAAC,oDAAoD;QAAAC,QAAA,eACjElK,OAAA;UAAKiK,SAAS,EAAC,sBAAsB;UAAAC,QAAA,eACnClK,OAAA;YACE8H,EAAE,EAAC,gBAAgB;YACnBmC,SAAS,EAAC;UAAqC;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN5K,OAAA,CAACF,YAAY;MACXuL,MAAM,EAAE7J,aAAc;MACtB8J,OAAO,EAAEA,CAAA,KAAM7J,gBAAgB,CAAC,KAAK,CAAE;MACvCT,MAAM,EAAEA,MAAO;MACfuK,aAAa,EAAExD,iBAAkB;MACjCzH,YAAY,EAAEA;IAAa;MAAAmK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpK,EAAA,CA/hBWP,WAAuC;AAAAuL,EAAA,GAAvCvL,WAAuC;AAiiBpD,eAAeA,WAAW;AAAC,IAAAuL,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}