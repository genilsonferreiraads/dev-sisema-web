{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genil\\\\pasta teste\\\\src\\\\components\\\\AudioPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { audioService } from '../lib/supabase';\nimport { supabase } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  onEnded,\n  isPlaying,\n  setIsPlaying\n}) => {\n  _s();\n  var _audioRef$current3, _audioRef$current4;\n  const [audios, setAudios] = useState([]);\n  const [currentAudio, setCurrentAudio] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const audioRef = useRef(null);\n  const [audioTimers, setAudioTimers] = useState({});\n  const [showIntervalInput, setShowIntervalInput] = useState(null);\n  const timersRef = useRef({});\n  const [timerAudioId, setTimerAudioId] = useState(null);\n  const [pendingAudioId, setPendingAudioId] = useState(null);\n  const [pendingAudios, setPendingAudios] = useState([]);\n  const playAttemptRef = useRef(null);\n  useEffect(() => {\n    loadAudios();\n  }, []);\n  useEffect(() => {\n    const playAudio = async () => {\n      if (!audioRef.current) return;\n      try {\n        console.log('Tentando reproduzir áudio...');\n        await audioRef.current.play();\n        console.log('Áudio iniciado com sucesso');\n        window.dispatchEvent(new Event('audioPlay'));\n      } catch (error) {\n        console.error('Erro ao reproduzir áudio:', error);\n        if (error instanceof Error && error.name === 'AbortError') {\n          // Limpa qualquer tentativa pendente\n          if (playAttemptRef.current) {\n            clearTimeout(playAttemptRef.current);\n          }\n\n          // Tenta novamente após um delay\n          playAttemptRef.current = setTimeout(async () => {\n            try {\n              var _audioRef$current;\n              console.log('Tentando reproduzir novamente...');\n              await ((_audioRef$current = audioRef.current) === null || _audioRef$current === void 0 ? void 0 : _audioRef$current.play());\n              console.log('Áudio iniciado na segunda tentativa');\n              window.dispatchEvent(new Event('audioPlay'));\n            } catch (retryError) {\n              console.error('Erro na segunda tentativa:', retryError);\n              setIsPlaying(false);\n            }\n          }, 500);\n        } else {\n          setIsPlaying(false);\n        }\n      }\n    };\n    if (audioRef.current) {\n      if (isPlaying) {\n        // Limpa qualquer tentativa pendente antes de iniciar uma nova\n        if (playAttemptRef.current) {\n          clearTimeout(playAttemptRef.current);\n          playAttemptRef.current = null;\n        }\n\n        // Adiciona um pequeno delay antes de tentar reproduzir\n        playAttemptRef.current = setTimeout(() => {\n          playAudio();\n        }, 100);\n      } else {\n        // Limpa qualquer tentativa pendente\n        if (playAttemptRef.current) {\n          clearTimeout(playAttemptRef.current);\n          playAttemptRef.current = null;\n        }\n        audioRef.current.pause();\n        window.dispatchEvent(new Event('audioStop'));\n      }\n    }\n\n    // Cleanup\n    return () => {\n      if (playAttemptRef.current) {\n        clearTimeout(playAttemptRef.current);\n        playAttemptRef.current = null;\n      }\n    };\n  }, [isPlaying]);\n  useEffect(() => {\n    return () => {\n      Object.values(timersRef.current).forEach(timer => {\n        clearInterval(timer);\n      });\n    };\n  }, []);\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.onended = () => {\n        console.log('Áudio terminou (evento nativo)');\n        handleAudioEnd();\n      };\n      audioRef.current.onloadeddata = () => {\n        if (isPlaying) {\n          var _audioRef$current2;\n          (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.play().catch(error => {\n            console.error('Erro ao reproduzir áudio após carregamento:', error);\n            setIsPlaying(false);\n          });\n        }\n      };\n    }\n  }, [audioRef.current]);\n  useEffect(() => {\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      if (timer.timeLeft === 0) {\n        setAudioTimers(prev => ({\n          ...prev,\n          [audioId]: {\n            ...timer,\n            timeLeft: timer.interval\n          }\n        }));\n        if (!isPlaying) {\n          const audio = audios.find(a => a.id === audioId);\n          if (audio && audioRef.current) {\n            const playWithDelay = async () => {\n              try {\n                await new Promise(resolve => setTimeout(resolve, 500));\n                setCurrentAudio(audio);\n                if (audioRef.current) {\n                  audioRef.current.currentTime = 0;\n                  console.log('Tentando reproduzir áudio automático:', audio.title);\n                  await audioRef.current.play();\n                  setIsPlaying(true);\n                  console.log('Áudio automático iniciado com sucesso');\n                }\n              } catch (error) {\n                console.error('Erro ao reproduzir áudio automático:', error);\n                if (error instanceof Error && error.name === 'AbortError') {\n                  console.log('Tentando novamente em 1 segundo...');\n                  setTimeout(async () => {\n                    try {\n                      if (audioRef.current) {\n                        await audioRef.current.play();\n                        setIsPlaying(true);\n                        console.log('Áudio automático iniciado na segunda tentativa');\n                      }\n                    } catch (retryError) {\n                      console.error('Falha na segunda tentativa:', retryError);\n                      console.log('Adicionando à fila de pendentes após falha');\n                      setPendingAudios(prev => prev.includes(audioId) ? prev : [...prev, audioId]);\n                    }\n                  }, 1000);\n                }\n              }\n            };\n            playWithDelay();\n          }\n        } else {\n          console.log('Adicionando áudio à fila de pendentes:', audioId);\n          setPendingAudios(prev => {\n            if (prev.includes(audioId)) return prev;\n            console.log('Fila atualizada:', [...prev, audioId]);\n            return [...prev, audioId];\n          });\n        }\n      }\n    });\n  }, [audioTimers, audios, isPlaying]);\n  const loadAudios = async () => {\n    try {\n      const data = await audioService.getAudios();\n      console.log('Áudios carregados:', data); // Para debug\n      setAudios(data);\n    } catch (error) {\n      console.error('Erro ao carregar áudios:', error);\n    }\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const progress = audioRef.current.currentTime / audioRef.current.duration * 100;\n      setProgress(progress);\n    }\n  };\n  const handleProgressClick = e => {\n    if (audioRef.current) {\n      const bounds = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - bounds.left;\n      const width = bounds.width;\n      const percentage = x / width;\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\n    }\n  };\n  const handleAudioEnd = async () => {\n    console.log('Áudio terminou, verificando pendentes...');\n    console.log('Fila de pendentes:', pendingAudios);\n    if (playAttemptRef.current) {\n      clearTimeout(playAttemptRef.current);\n      playAttemptRef.current = null;\n    }\n    if (audioRef.current) {\n      audioRef.current.currentTime = 0;\n    }\n    setProgress(0);\n\n    // Adiciona um delay antes de verificar a fila de pendentes\n    await new Promise(resolve => setTimeout(resolve, 300));\n    if (pendingAudios.length > 0) {\n      try {\n        console.log('Existem áudios pendentes, reproduzindo próximo...');\n        const nextAudioId = pendingAudios[0];\n        const nextAudio = audios.find(a => a.id === nextAudioId);\n        setPendingAudios(prev => prev.slice(1));\n        if (nextAudio) {\n          console.log('Iniciando reprodução do áudio pendente:', nextAudio.title);\n          // Aumenta o delay antes de iniciar o próximo áudio\n          await new Promise(resolve => setTimeout(resolve, 800));\n          setCurrentAudio(nextAudio);\n          setIsPlaying(true);\n        }\n      } catch (error) {\n        console.error('Erro ao reproduzir próximo áudio:', error);\n        setIsPlaying(false);\n        onEnded();\n      }\n    } else {\n      console.log('Não há áudios pendentes');\n      setIsPlaying(false);\n      onEnded();\n    }\n    window.dispatchEvent(new Event('audioStop'));\n  };\n  const togglePlay = audio => {\n    if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id) {\n      setIsPlaying(!isPlaying);\n    } else {\n      console.log('Mudando para novo áudio manualmente');\n      setCurrentAudio(audio);\n      if (audioRef.current) {\n        audioRef.current.currentTime = 0;\n      }\n      setIsPlaying(true);\n      // Não vamos mais limpar a fila de pendentes ao tocar manualmente\n      // setPendingAudios([]);\n    }\n  };\n  const handleUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    setIsUploading(true);\n    try {\n      console.log('Iniciando upload do arquivo:', file.name);\n\n      // Upload do arquivo\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${Math.random()}.${fileExt}`;\n      const filePath = `audios/${fileName}`;\n      console.log('Tentando fazer upload para:', filePath);\n      const {\n        data: uploadData,\n        error: uploadError\n      } = await supabase.storage.from('media').upload(filePath, file);\n      if (uploadError) {\n        console.error('Erro no upload:', uploadError);\n        throw uploadError;\n      }\n      console.log('Upload bem sucedido:', uploadData);\n\n      // Obtém a URL pública\n      const {\n        data: {\n          publicUrl\n        }\n      } = supabase.storage.from('media').getPublicUrl(filePath);\n      console.log('URL pública gerada:', publicUrl);\n\n      // Adiciona ao banco de dados\n      const newAudio = await audioService.addAudio({\n        title: file.name,\n        url: publicUrl,\n        is_auto_play: false\n      });\n      console.log('Áudio adicionado ao banco:', newAudio);\n\n      // Recarrega todos os áudios\n      await loadAudios();\n\n      // Seleciona o novo áudio\n      setCurrentAudio(newAudio);\n\n      // Limpa o input\n      event.target.value = '';\n    } catch (error) {\n      console.error('Erro detalhado no upload:', error);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const startRepeatTimer = (audioId, minutes) => {\n    // Não vamos mais alterar o áudio atual ou seu estado de reprodução\n    // Apenas armazenamos qual áudio será reproduzido quando o timer zerar\n    setTimerAudioId(audioId);\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n    }\n    const seconds = minutes * 60;\n    const intervalId = setInterval(() => {\n      setAudioTimers(prev => {\n        const currentTimer = prev[audioId];\n        if (!currentTimer) return prev;\n        const newTimeLeft = currentTimer.timeLeft - 1;\n        return {\n          ...prev,\n          [audioId]: {\n            ...currentTimer,\n            timeLeft: newTimeLeft\n          }\n        };\n      });\n    }, 1000);\n    timersRef.current[audioId] = intervalId;\n    setAudioTimers(prev => ({\n      ...prev,\n      [audioId]: {\n        interval: seconds,\n        timeLeft: seconds,\n        intervalId\n      }\n    }));\n    setShowIntervalInput(null);\n  };\n  const stopRepeatTimer = audioId => {\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n      delete timersRef.current[audioId];\n    }\n    setAudioTimers(prev => {\n      const newTimers = {\n        ...prev\n      };\n      delete newTimers[audioId];\n      return newTimers;\n    });\n  };\n  const handleDelete = async audioId => {\n    try {\n      await audioService.deleteAudio(audioId);\n      if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId) {\n        setCurrentAudio(null);\n        setIsPlaying(false);\n      }\n      await loadAudios();\n    } catch (error) {\n      console.error('Erro ao deletar áudio:', error);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Primeiro, vamos criar uma função auxiliar para pegar o próximo áudio e seu timer\n  const getNextAudioInfo = () => {\n    if (pendingAudios.length === 0) return null;\n    const nextAudioId = pendingAudios[0];\n    const nextAudio = audios.find(a => a.id === nextAudioId);\n    const timer = audioTimers[nextAudioId];\n    return {\n      nextAudio,\n      timer\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 bg-[#2d2d2d] rounded-lg p-4 border border-[#404040]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-[#e1aa1e] font-medium\",\n          children: (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.title) || 'Selecione um áudio'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.url,\n        onTimeUpdate: handleTimeUpdate,\n        onEnded: handleAudioEnd,\n        className: \"hidden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-1 bg-[#404040] rounded-full cursor-pointer mb-4\",\n        onClick: handleProgressClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-full bg-[#e1aa1e] rounded-full\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between text-xs text-gray-400 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: formatTime(((_audioRef$current3 = audioRef.current) === null || _audioRef$current3 === void 0 ? void 0 : _audioRef$current3.currentTime) || 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: formatTime(((_audioRef$current4 = audioRef.current) === null || _audioRef$current4 === void 0 ? void 0 : _audioRef$current4.duration) || 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => currentAudio && togglePlay(currentAudio),\n            className: \"p-2 hover:bg-[#404040] rounded-full transition-colors\",\n            disabled: !currentAudio,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-8 h-8 text-[#e1aa1e]\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: isPlaying ? /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), (() => {\n          const nextInfo = getNextAudioInfo();\n          if (!(nextInfo !== null && nextInfo !== void 0 && nextInfo.nextAudio)) return null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-right bg-[#1e1e1e] px-3 py-1 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-400\",\n                children: [\"Pr\\xF3ximo: \", nextInfo.nextAudio.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 19\n              }, this), nextInfo.timer && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-[#e1aa1e]\",\n                children: [\"Em \", Math.ceil(nextInfo.timer.timeLeft), \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 15\n          }, this);\n        })()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm text-gray-400 px-2\",\n        children: \"Lista de \\xC1udios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"bg-[#e1aa1e] hover:bg-[#e1aa1e]/80 text-gray-900 px-3 py-1.5 rounded cursor-pointer transition-colors text-sm\",\n        children: [isUploading ? 'Enviando...' : 'Anexar Áudio', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"hidden\",\n          accept: \"audio/*\",\n          onChange: handleUpload,\n          disabled: isUploading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2 max-h-[400px] overflow-y-auto\",\n      children: audios.map(audio => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors ${(currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id ? 'bg-[#2d2d2d]' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => togglePlay(audio),\n          className: \"p-1 hover:bg-[#404040] rounded-full transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-6 h-6 text-[#e1aa1e]\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: isPlaying && (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id ? /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"flex-1 truncate\",\n          children: audio.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1\",\n            children: showIntervalInput === audio.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"1\",\n                placeholder: \"Min\",\n                className: \"w-16 px-2 py-1 bg-[#2d2d2d] border border-[#404040] rounded text-gray-200 [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\",\n                onKeyDown: e => {\n                  if (e.key === 'Enter') {\n                    const value = parseInt(e.target.value);\n                    if (value > 0) startRepeatTimer(audio.id, value);\n                  }\n                },\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  const input = document.querySelector('input[type=\"number\"]');\n                  const value = parseInt(input.value);\n                  if (value > 0) startRepeatTimer(audio.id, value);\n                },\n                className: \"text-[#e1aa1e] hover:text-[#e1aa1e]/80 text-sm px-2 py-1\",\n                children: \"OK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  if (audioTimers[audio.id]) {\n                    stopRepeatTimer(audio.id);\n                  } else {\n                    setShowIntervalInput(audio.id);\n                  }\n                },\n                className: `p-1 hover:bg-[#404040] rounded-full transition-colors ${audioTimers[audio.id] ? 'text-[#e1aa1e]' : 'text-gray-400'}`,\n                title: audioTimers[audio.id] ? 'Parar repetição' : 'Repetir',\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"w-5 h-5\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  viewBox: \"0 0 24 24\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    strokeWidth: 2,\n                    d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 617,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 21\n              }, this), audioTimers[audio.id] && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-[#e1aa1e]\",\n                children: formatTime(audioTimers[audio.id].timeLeft)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(audio.id),\n            className: \"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-5 h-5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 13\n        }, this)]\n      }, audio.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 422,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"0K+ZCwq3sH9yl4zXvoZ8aedESGY=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","audioService","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioPlayer","onEnded","isPlaying","setIsPlaying","_s","_audioRef$current3","_audioRef$current4","audios","setAudios","currentAudio","setCurrentAudio","progress","setProgress","isUploading","setIsUploading","audioRef","audioTimers","setAudioTimers","showIntervalInput","setShowIntervalInput","timersRef","timerAudioId","setTimerAudioId","pendingAudioId","setPendingAudioId","pendingAudios","setPendingAudios","playAttemptRef","loadAudios","playAudio","current","console","log","play","window","dispatchEvent","Event","error","Error","name","clearTimeout","setTimeout","_audioRef$current","retryError","pause","Object","values","forEach","timer","clearInterval","onended","handleAudioEnd","onloadeddata","_audioRef$current2","catch","entries","audioId","timeLeft","prev","interval","audio","find","a","id","playWithDelay","Promise","resolve","currentTime","title","includes","data","getAudios","handleTimeUpdate","duration","handleProgressClick","e","bounds","currentTarget","getBoundingClientRect","x","clientX","left","width","percentage","length","nextAudioId","nextAudio","slice","togglePlay","handleUpload","event","_event$target$files","file","target","files","fileExt","split","pop","fileName","Math","random","filePath","uploadData","uploadError","storage","from","upload","publicUrl","getPublicUrl","newAudio","addAudio","url","is_auto_play","value","startRepeatTimer","minutes","seconds","intervalId","setInterval","currentTimer","newTimeLeft","stopRepeatTimer","newTimers","handleDelete","deleteAudio","formatTime","mins","floor","secs","toString","padStart","getNextAudioInfo","className","children","_jsxFileName","lineNumber","columnNumber","ref","src","onTimeUpdate","onClick","style","disabled","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","nextInfo","ceil","type","accept","onChange","map","min","placeholder","onKeyDown","key","parseInt","autoFocus","input","document","querySelector","_c","$RefreshReg$"],"sources":["C:/Users/genil/pasta teste/src/components/AudioPlayer.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { audioService, AudioData } from '../lib/supabase';\r\nimport { supabase } from '../lib/supabase';\r\n\r\ninterface AudioTimer {\r\n  interval: number;\r\n  timeLeft: number;\r\n  intervalId: NodeJS.Timeout;\r\n}\r\n\r\ninterface AudioPlayerProps {\r\n  onEnded: () => void;\r\n  isPlaying: boolean;\r\n  setIsPlaying: (playing: boolean) => void;\r\n}\r\n\r\nconst AudioPlayer: React.FC<AudioPlayerProps> = ({ onEnded, isPlaying, setIsPlaying }) => {\r\n  const [audios, setAudios] = useState<AudioData[]>([]);\r\n  const [currentAudio, setCurrentAudio] = useState<AudioData | null>(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const audioRef = useRef<HTMLAudioElement>(null);\r\n  const [audioTimers, setAudioTimers] = useState<Record<string, AudioTimer>>({});\r\n  const [showIntervalInput, setShowIntervalInput] = useState<string | null>(null);\r\n  const timersRef = useRef<Record<string, NodeJS.Timeout>>({});\r\n  const [timerAudioId, setTimerAudioId] = useState<string | null>(null);\r\n  const [pendingAudioId, setPendingAudioId] = useState<string | null>(null);\r\n  const [pendingAudios, setPendingAudios] = useState<string[]>([]);\r\n  const playAttemptRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  useEffect(() => {\r\n    loadAudios();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const playAudio = async () => {\r\n      if (!audioRef.current) return;\r\n\r\n      try {\r\n        console.log('Tentando reproduzir áudio...');\r\n        await audioRef.current.play();\r\n        console.log('Áudio iniciado com sucesso');\r\n        window.dispatchEvent(new Event('audioPlay'));\r\n      } catch (error: unknown) {\r\n        console.error('Erro ao reproduzir áudio:', error);\r\n        if (error instanceof Error && error.name === 'AbortError') {\r\n          // Limpa qualquer tentativa pendente\r\n          if (playAttemptRef.current) {\r\n            clearTimeout(playAttemptRef.current);\r\n          }\r\n          \r\n          // Tenta novamente após um delay\r\n          playAttemptRef.current = setTimeout(async () => {\r\n            try {\r\n              console.log('Tentando reproduzir novamente...');\r\n              await audioRef.current?.play();\r\n              console.log('Áudio iniciado na segunda tentativa');\r\n              window.dispatchEvent(new Event('audioPlay'));\r\n            } catch (retryError) {\r\n              console.error('Erro na segunda tentativa:', retryError);\r\n              setIsPlaying(false);\r\n            }\r\n          }, 500);\r\n        } else {\r\n          setIsPlaying(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    if (audioRef.current) {\r\n      if (isPlaying) {\r\n        // Limpa qualquer tentativa pendente antes de iniciar uma nova\r\n        if (playAttemptRef.current) {\r\n          clearTimeout(playAttemptRef.current);\r\n          playAttemptRef.current = null;\r\n        }\r\n        \r\n        // Adiciona um pequeno delay antes de tentar reproduzir\r\n        playAttemptRef.current = setTimeout(() => {\r\n          playAudio();\r\n        }, 100);\r\n      } else {\r\n        // Limpa qualquer tentativa pendente\r\n        if (playAttemptRef.current) {\r\n          clearTimeout(playAttemptRef.current);\r\n          playAttemptRef.current = null;\r\n        }\r\n        audioRef.current.pause();\r\n        window.dispatchEvent(new Event('audioStop'));\r\n      }\r\n    }\r\n\r\n    // Cleanup\r\n    return () => {\r\n      if (playAttemptRef.current) {\r\n        clearTimeout(playAttemptRef.current);\r\n        playAttemptRef.current = null;\r\n      }\r\n    };\r\n  }, [isPlaying]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      Object.values(timersRef.current).forEach(timer => {\r\n        clearInterval(timer);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      audioRef.current.onended = () => {\r\n        console.log('Áudio terminou (evento nativo)');\r\n        handleAudioEnd();\r\n      };\r\n\r\n      audioRef.current.onloadeddata = () => {\r\n        if (isPlaying) {\r\n          audioRef.current?.play().catch(error => {\r\n            console.error('Erro ao reproduzir áudio após carregamento:', error);\r\n            setIsPlaying(false);\r\n          });\r\n        }\r\n      };\r\n    }\r\n  }, [audioRef.current]);\r\n\r\n  useEffect(() => {\r\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\r\n      if (timer.timeLeft === 0) {\r\n        setAudioTimers(prev => ({\r\n          ...prev,\r\n          [audioId]: {\r\n            ...timer,\r\n            timeLeft: timer.interval\r\n          }\r\n        }));\r\n\r\n        if (!isPlaying) {\r\n          const audio = audios.find(a => a.id === audioId);\r\n          if (audio && audioRef.current) {\r\n            const playWithDelay = async () => {\r\n              try {\r\n                await new Promise(resolve => setTimeout(resolve, 500));\r\n                setCurrentAudio(audio);\r\n                \r\n                if (audioRef.current) {\r\n                  audioRef.current.currentTime = 0;\r\n                  console.log('Tentando reproduzir áudio automático:', audio.title);\r\n                  await audioRef.current.play();\r\n                  setIsPlaying(true);\r\n                  console.log('Áudio automático iniciado com sucesso');\r\n                }\r\n              } catch (error) {\r\n                console.error('Erro ao reproduzir áudio automático:', error);\r\n                if (error instanceof Error && error.name === 'AbortError') {\r\n                  console.log('Tentando novamente em 1 segundo...');\r\n                  setTimeout(async () => {\r\n                    try {\r\n                      if (audioRef.current) {\r\n                        await audioRef.current.play();\r\n                        setIsPlaying(true);\r\n                        console.log('Áudio automático iniciado na segunda tentativa');\r\n                      }\r\n                    } catch (retryError) {\r\n                      console.error('Falha na segunda tentativa:', retryError);\r\n                      console.log('Adicionando à fila de pendentes após falha');\r\n                      setPendingAudios(prev => \r\n                        prev.includes(audioId) ? prev : [...prev, audioId]\r\n                      );\r\n                    }\r\n                  }, 1000);\r\n                }\r\n              }\r\n            };\r\n\r\n            playWithDelay();\r\n          }\r\n        } else {\r\n          console.log('Adicionando áudio à fila de pendentes:', audioId);\r\n          setPendingAudios(prev => {\r\n            if (prev.includes(audioId)) return prev;\r\n            console.log('Fila atualizada:', [...prev, audioId]);\r\n            return [...prev, audioId];\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }, [audioTimers, audios, isPlaying]);\r\n\r\n  const loadAudios = async () => {\r\n    try {\r\n      const data = await audioService.getAudios();\r\n      console.log('Áudios carregados:', data); // Para debug\r\n      setAudios(data);\r\n    } catch (error) {\r\n      console.error('Erro ao carregar áudios:', error);\r\n    }\r\n  };\r\n\r\n  const handleTimeUpdate = () => {\r\n    if (audioRef.current) {\r\n      const progress = (audioRef.current.currentTime / audioRef.current.duration) * 100;\r\n      setProgress(progress);\r\n    }\r\n  };\r\n\r\n  const handleProgressClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if (audioRef.current) {\r\n      const bounds = e.currentTarget.getBoundingClientRect();\r\n      const x = e.clientX - bounds.left;\r\n      const width = bounds.width;\r\n      const percentage = x / width;\r\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\r\n    }\r\n  };\r\n\r\n  const handleAudioEnd = async () => {\r\n    console.log('Áudio terminou, verificando pendentes...');\r\n    console.log('Fila de pendentes:', pendingAudios);\r\n    \r\n    if (playAttemptRef.current) {\r\n      clearTimeout(playAttemptRef.current);\r\n      playAttemptRef.current = null;\r\n    }\r\n\r\n    if (audioRef.current) {\r\n      audioRef.current.currentTime = 0;\r\n    }\r\n    setProgress(0);\r\n\r\n    // Adiciona um delay antes de verificar a fila de pendentes\r\n    await new Promise(resolve => setTimeout(resolve, 300));\r\n\r\n    if (pendingAudios.length > 0) {\r\n      try {\r\n        console.log('Existem áudios pendentes, reproduzindo próximo...');\r\n        const nextAudioId = pendingAudios[0];\r\n        const nextAudio = audios.find(a => a.id === nextAudioId);\r\n\r\n        setPendingAudios(prev => prev.slice(1));\r\n\r\n        if (nextAudio) {\r\n          console.log('Iniciando reprodução do áudio pendente:', nextAudio.title);\r\n          // Aumenta o delay antes de iniciar o próximo áudio\r\n          await new Promise(resolve => setTimeout(resolve, 800));\r\n          setCurrentAudio(nextAudio);\r\n          setIsPlaying(true);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro ao reproduzir próximo áudio:', error);\r\n        setIsPlaying(false);\r\n        onEnded();\r\n      }\r\n    } else {\r\n      console.log('Não há áudios pendentes');\r\n      setIsPlaying(false);\r\n      onEnded();\r\n    }\r\n\r\n    window.dispatchEvent(new Event('audioStop'));\r\n  };\r\n\r\n  const togglePlay = (audio: AudioData) => {\r\n    if (currentAudio?.id === audio.id) {\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      console.log('Mudando para novo áudio manualmente');\r\n      setCurrentAudio(audio);\r\n      if (audioRef.current) {\r\n        audioRef.current.currentTime = 0;\r\n      }\r\n      setIsPlaying(true);\r\n      // Não vamos mais limpar a fila de pendentes ao tocar manualmente\r\n      // setPendingAudios([]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    setIsUploading(true);\r\n    try {\r\n      console.log('Iniciando upload do arquivo:', file.name);\r\n      \r\n      // Upload do arquivo\r\n      const fileExt = file.name.split('.').pop();\r\n      const fileName = `${Math.random()}.${fileExt}`;\r\n      const filePath = `audios/${fileName}`;\r\n\r\n      console.log('Tentando fazer upload para:', filePath);\r\n\r\n      const { data: uploadData, error: uploadError } = await supabase.storage\r\n        .from('media')\r\n        .upload(filePath, file);\r\n\r\n      if (uploadError) {\r\n        console.error('Erro no upload:', uploadError);\r\n        throw uploadError;\r\n      }\r\n\r\n      console.log('Upload bem sucedido:', uploadData);\r\n\r\n      // Obtém a URL pública\r\n      const { data: { publicUrl } } = supabase.storage\r\n        .from('media')\r\n        .getPublicUrl(filePath);\r\n\r\n      console.log('URL pública gerada:', publicUrl);\r\n\r\n      // Adiciona ao banco de dados\r\n      const newAudio = await audioService.addAudio({\r\n        title: file.name,\r\n        url: publicUrl,\r\n        is_auto_play: false\r\n      });\r\n\r\n      console.log('Áudio adicionado ao banco:', newAudio);\r\n\r\n      // Recarrega todos os áudios\r\n      await loadAudios();\r\n      \r\n      // Seleciona o novo áudio\r\n      setCurrentAudio(newAudio);\r\n      \r\n      // Limpa o input\r\n      event.target.value = '';\r\n\r\n    } catch (error) {\r\n      console.error('Erro detalhado no upload:', error);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const startRepeatTimer = (audioId: string, minutes: number) => {\r\n    // Não vamos mais alterar o áudio atual ou seu estado de reprodução\r\n    // Apenas armazenamos qual áudio será reproduzido quando o timer zerar\r\n    setTimerAudioId(audioId);\r\n\r\n    if (timersRef.current[audioId]) {\r\n      clearInterval(timersRef.current[audioId]);\r\n    }\r\n\r\n    const seconds = minutes * 60;\r\n    \r\n    const intervalId = setInterval(() => {\r\n      setAudioTimers(prev => {\r\n        const currentTimer = prev[audioId];\r\n        if (!currentTimer) return prev;\r\n\r\n        const newTimeLeft = currentTimer.timeLeft - 1;\r\n        return {\r\n          ...prev,\r\n          [audioId]: {\r\n            ...currentTimer,\r\n            timeLeft: newTimeLeft\r\n          }\r\n        };\r\n      });\r\n    }, 1000);\r\n\r\n    timersRef.current[audioId] = intervalId;\r\n\r\n    setAudioTimers(prev => ({\r\n      ...prev,\r\n      [audioId]: {\r\n        interval: seconds,\r\n        timeLeft: seconds,\r\n        intervalId\r\n      }\r\n    }));\r\n\r\n    setShowIntervalInput(null);\r\n  };\r\n\r\n  const stopRepeatTimer = (audioId: string) => {\r\n    if (timersRef.current[audioId]) {\r\n      clearInterval(timersRef.current[audioId]);\r\n      delete timersRef.current[audioId];\r\n    }\r\n\r\n    setAudioTimers(prev => {\r\n      const newTimers = { ...prev };\r\n      delete newTimers[audioId];\r\n      return newTimers;\r\n    });\r\n  };\r\n\r\n  const handleDelete = async (audioId: string) => {\r\n    try {\r\n      await audioService.deleteAudio(audioId);\r\n      if (currentAudio?.id === audioId) {\r\n        setCurrentAudio(null);\r\n        setIsPlaying(false);\r\n      }\r\n      await loadAudios();\r\n    } catch (error) {\r\n      console.error('Erro ao deletar áudio:', error);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds: number): string => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = Math.floor(seconds % 60);\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  // Primeiro, vamos criar uma função auxiliar para pegar o próximo áudio e seu timer\r\n  const getNextAudioInfo = () => {\r\n    if (pendingAudios.length === 0) return null;\r\n    \r\n    const nextAudioId = pendingAudios[0];\r\n    const nextAudio = audios.find(a => a.id === nextAudioId);\r\n    const timer = audioTimers[nextAudioId];\r\n    \r\n    return { nextAudio, timer };\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\">\r\n      {/* Player Central */}\r\n      <div className=\"mb-3 bg-[#2d2d2d] rounded-lg p-4 border border-[#404040]\">\r\n        {/* Título do Áudio Centralizado */}\r\n        <div className=\"mb-4 text-center\">\r\n          <h3 className=\"text-[#e1aa1e] font-medium\">\r\n            {currentAudio?.title || 'Selecione um áudio'}\r\n          </h3>\r\n        </div>\r\n\r\n        <audio\r\n          ref={audioRef}\r\n          src={currentAudio?.url}\r\n          onTimeUpdate={handleTimeUpdate}\r\n          onEnded={handleAudioEnd}\r\n          className=\"hidden\"\r\n        />\r\n\r\n        {/* Barra de Progresso */}\r\n        <div\r\n          className=\"h-1 bg-[#404040] rounded-full cursor-pointer mb-4\"\r\n          onClick={handleProgressClick}\r\n        >\r\n          <div\r\n            className=\"h-full bg-[#e1aa1e] rounded-full\"\r\n            style={{ width: `${progress}%` }}\r\n          />\r\n        </div>\r\n\r\n        {/* Tempo */}\r\n        <div className=\"flex justify-between text-xs text-gray-400 mb-3\">\r\n          <span>{formatTime(audioRef.current?.currentTime || 0)}</span>\r\n          <span>{formatTime(audioRef.current?.duration || 0)}</span>\r\n        </div>\r\n\r\n        {/* Layout em duas linhas */}\r\n        <div className=\"space-y-4\">\r\n          {/* Controle de Reprodução Centralizado */}\r\n          <div className=\"flex justify-center\">\r\n            <button\r\n              onClick={() => currentAudio && togglePlay(currentAudio)}\r\n              className=\"p-2 hover:bg-[#404040] rounded-full transition-colors\"\r\n              disabled={!currentAudio}\r\n            >\r\n              <svg\r\n                className=\"w-8 h-8 text-[#e1aa1e]\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                {isPlaying ? (\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                ) : (\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                )}\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Próxima Reprodução - Alinhado à direita */}\r\n          {(() => {\r\n            const nextInfo = getNextAudioInfo();\r\n            if (!nextInfo?.nextAudio) return null;\r\n\r\n            return (\r\n              <div className=\"flex justify-end\">\r\n                <div className=\"text-right bg-[#1e1e1e] px-3 py-1 rounded\">\r\n                  <div className=\"text-xs text-gray-400\">\r\n                    Próximo: {nextInfo.nextAudio.title}\r\n                  </div>\r\n                  {nextInfo.timer && (\r\n                    <div className=\"text-xs text-[#e1aa1e]\">\r\n                      Em {Math.ceil(nextInfo.timer.timeLeft)}s\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })()}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Painel de Controle */}\r\n      <div className=\"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\">\r\n        <span className=\"text-sm text-gray-400 px-2\">Lista de Áudios</span>\r\n        <label className=\"bg-[#e1aa1e] hover:bg-[#e1aa1e]/80 text-gray-900 px-3 py-1.5 rounded cursor-pointer transition-colors text-sm\">\r\n          {isUploading ? 'Enviando...' : 'Anexar Áudio'}\r\n          <input\r\n            type=\"file\"\r\n            className=\"hidden\"\r\n            accept=\"audio/*\"\r\n            onChange={handleUpload}\r\n            disabled={isUploading}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      {/* Lista de Áudios */}\r\n      <div className=\"space-y-2 max-h-[400px] overflow-y-auto\">\r\n        {audios.map((audio) => (\r\n          <div\r\n            key={audio.id}\r\n            className={`flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors ${\r\n              currentAudio?.id === audio.id ? 'bg-[#2d2d2d]' : ''\r\n            }`}\r\n          >\r\n            <button\r\n              onClick={() => togglePlay(audio)}\r\n              className=\"p-1 hover:bg-[#404040] rounded-full transition-colors\"\r\n            >\r\n              <svg\r\n                className=\"w-6 h-6 text-[#e1aa1e]\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                {isPlaying && currentAudio?.id === audio.id ? (\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                ) : (\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                )}\r\n              </svg>\r\n            </button>\r\n            <span className=\"flex-1 truncate\">{audio.title}</span>\r\n            \r\n            {/* Controles do item */}\r\n            <div className=\"flex items-center gap-2\">\r\n              <div className=\"flex items-center gap-1\">\r\n                {showIntervalInput === audio.id ? (\r\n                  <div className=\"flex items-center gap-1\">\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      placeholder=\"Min\"\r\n                      className=\"w-16 px-2 py-1 bg-[#2d2d2d] border border-[#404040] rounded text-gray-200 [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\"\r\n                      onKeyDown={(e) => {\r\n                        if (e.key === 'Enter') {\r\n                          const value = parseInt((e.target as HTMLInputElement).value);\r\n                          if (value > 0) startRepeatTimer(audio.id, value);\r\n                        }\r\n                      }}\r\n                      autoFocus\r\n                    />\r\n                    <button\r\n                      onClick={() => {\r\n                        const input = document.querySelector('input[type=\"number\"]') as HTMLInputElement;\r\n                        const value = parseInt(input.value);\r\n                        if (value > 0) startRepeatTimer(audio.id, value);\r\n                      }}\r\n                      className=\"text-[#e1aa1e] hover:text-[#e1aa1e]/80 text-sm px-2 py-1\"\r\n                    >\r\n                      OK\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <button\r\n                      onClick={() => {\r\n                        if (audioTimers[audio.id]) {\r\n                          stopRepeatTimer(audio.id);\r\n                        } else {\r\n                          setShowIntervalInput(audio.id);\r\n                        }\r\n                      }}\r\n                      className={`p-1 hover:bg-[#404040] rounded-full transition-colors ${\r\n                        audioTimers[audio.id] ? 'text-[#e1aa1e]' : 'text-gray-400'\r\n                      }`}\r\n                      title={audioTimers[audio.id] ? 'Parar repetição' : 'Repetir'}\r\n                    >\r\n                      <svg\r\n                        className=\"w-5 h-5\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        viewBox=\"0 0 24 24\"\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth={2}\r\n                          d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n                    {audioTimers[audio.id] && (\r\n                      <span className=\"text-xs text-[#e1aa1e]\">\r\n                        {formatTime(audioTimers[audio.id].timeLeft)}\r\n                      </span>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              <button\r\n                onClick={() => handleDelete(audio.id)}\r\n                className=\"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\"\r\n              >\r\n                <svg\r\n                  className=\"w-5 h-5\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioPlayer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}