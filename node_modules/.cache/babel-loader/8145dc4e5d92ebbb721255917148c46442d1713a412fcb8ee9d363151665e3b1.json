{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genil\\\\pasta teste\\\\src\\\\components\\\\AudioPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { audioService } from '../lib/supabase';\nimport { supabase } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  onEnded,\n  isPlaying,\n  setIsPlaying\n}) => {\n  _s();\n  const [audios, setAudios] = useState([]);\n  const [currentAudio, setCurrentAudio] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const audioRef = useRef(null);\n  const [audioTimers, setAudioTimers] = useState({});\n  const [showIntervalInput, setShowIntervalInput] = useState(null);\n  const timersRef = useRef({});\n  const [timerAudioId, setTimerAudioId] = useState(null);\n  const [pendingAudioId, setPendingAudioId] = useState(null);\n  const [pendingAudios, setPendingAudios] = useState([]);\n  useEffect(() => {\n    loadAudios();\n  }, []);\n  useEffect(() => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.play().catch(error => {\n          console.error('Erro ao reproduzir áudio:', error);\n          setIsPlaying(false);\n        });\n      } else {\n        audioRef.current.pause();\n      }\n    }\n  }, [isPlaying]);\n  useEffect(() => {\n    return () => {\n      Object.values(timersRef.current).forEach(timer => {\n        clearInterval(timer);\n      });\n    };\n  }, []);\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.onended = () => {\n        console.log('Áudio terminou (evento nativo)');\n        handleAudioEnd();\n      };\n    }\n  }, [audioRef.current]);\n  useEffect(() => {\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      if (timer.timeLeft === 0) {\n        // Resetar o timer\n        setAudioTimers(prev => ({\n          ...prev,\n          [audioId]: {\n            ...timer,\n            timeLeft: timer.interval\n          }\n        }));\n\n        // Se não há áudio tocando, reproduzir imediatamente\n        if (!isPlaying) {\n          const audio = audios.find(a => a.id === audioId);\n          if (audio && audioRef.current) {\n            setCurrentAudio(audio);\n            audioRef.current.currentTime = 0;\n            audioRef.current.play().then(() => {\n              setIsPlaying(true);\n            }).catch(error => {\n              console.error('Erro ao reproduzir áudio:', error);\n            });\n          }\n        } else {\n          // Adicionar à fila de pendentes se não estiver já na fila\n          setPendingAudios(prev => prev.includes(audioId) ? prev : [...prev, audioId]);\n        }\n      }\n    });\n  }, [audioTimers, audios, isPlaying]);\n  const loadAudios = async () => {\n    try {\n      const data = await audioService.getAudios();\n      console.log('Áudios carregados:', data); // Para debug\n      setAudios(data);\n    } catch (error) {\n      console.error('Erro ao carregar áudios:', error);\n    }\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const progress = audioRef.current.currentTime / audioRef.current.duration * 100;\n      setProgress(progress);\n    }\n  };\n  const handleProgressClick = e => {\n    if (audioRef.current) {\n      const bounds = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - bounds.left;\n      const width = bounds.width;\n      const percentage = x / width;\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\n    }\n  };\n  const handleAudioEnd = () => {\n    audioRef.current.currentTime = 0;\n    setProgress(0);\n\n    // Verificar se há áudios pendentes\n    if (pendingAudios.length > 0) {\n      // Pegar o próximo áudio da fila\n      const nextAudioId = pendingAudios[0];\n      const nextAudio = audios.find(a => a.id === nextAudioId);\n\n      // Remover o áudio da fila de pendentes\n      setPendingAudios(prev => prev.slice(1));\n      if (nextAudio && audioRef.current) {\n        setCurrentAudio(nextAudio);\n        audioRef.current.currentTime = 0;\n        audioRef.current.play().then(() => {\n          setIsPlaying(true);\n        }).catch(error => {\n          console.error('Erro ao reproduzir próximo áudio:', error);\n        });\n      }\n    } else {\n      setIsPlaying(false);\n      onEnded();\n    }\n  };\n  const togglePlay = audio => {\n    if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id) {\n      setIsPlaying(!isPlaying);\n    } else {\n      setCurrentAudio(audio);\n      if (audioRef.current) {\n        audioRef.current.currentTime = 0;\n      }\n      setIsPlaying(true);\n      // Limpar a fila de áudios pendentes quando um áudio é tocado manualmente\n      setPendingAudios([]);\n    }\n  };\n  const handleUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    setIsUploading(true);\n    try {\n      console.log('Iniciando upload do arquivo:', file.name);\n\n      // Upload do arquivo\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${Math.random()}.${fileExt}`;\n      const filePath = `audios/${fileName}`;\n      console.log('Tentando fazer upload para:', filePath);\n      const {\n        data: uploadData,\n        error: uploadError\n      } = await supabase.storage.from('media').upload(filePath, file);\n      if (uploadError) {\n        console.error('Erro no upload:', uploadError);\n        throw uploadError;\n      }\n      console.log('Upload bem sucedido:', uploadData);\n\n      // Obtém a URL pública\n      const {\n        data: {\n          publicUrl\n        }\n      } = supabase.storage.from('media').getPublicUrl(filePath);\n      console.log('URL pública gerada:', publicUrl);\n\n      // Adiciona ao banco de dados\n      const newAudio = await audioService.addAudio({\n        title: file.name,\n        url: publicUrl,\n        is_auto_play: false\n      });\n      console.log('Áudio adicionado ao banco:', newAudio);\n\n      // Recarrega todos os áudios\n      await loadAudios();\n\n      // Seleciona o novo áudio\n      setCurrentAudio(newAudio);\n\n      // Limpa o input\n      event.target.value = '';\n    } catch (error) {\n      console.error('Erro detalhado no upload:', error);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const startRepeatTimer = (audioId, minutes) => {\n    // Não vamos mais alterar o áudio atual ou seu estado de reprodução\n    // Apenas armazenamos qual áudio será reproduzido quando o timer zerar\n    setTimerAudioId(audioId);\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n    }\n    const seconds = minutes * 60;\n    const intervalId = setInterval(() => {\n      setAudioTimers(prev => {\n        const currentTimer = prev[audioId];\n        if (!currentTimer) return prev;\n        const newTimeLeft = currentTimer.timeLeft - 1;\n        return {\n          ...prev,\n          [audioId]: {\n            ...currentTimer,\n            timeLeft: newTimeLeft\n          }\n        };\n      });\n    }, 1000);\n    timersRef.current[audioId] = intervalId;\n    setAudioTimers(prev => ({\n      ...prev,\n      [audioId]: {\n        interval: seconds,\n        timeLeft: seconds,\n        intervalId\n      }\n    }));\n    setShowIntervalInput(null);\n  };\n  const stopRepeatTimer = audioId => {\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n      delete timersRef.current[audioId];\n    }\n    setAudioTimers(prev => {\n      const newTimers = {\n        ...prev\n      };\n      delete newTimers[audioId];\n      return newTimers;\n    });\n  };\n  const handleDelete = async audioId => {\n    try {\n      await audioService.deleteAudio(audioId);\n      if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId) {\n        setCurrentAudio(null);\n        setIsPlaying(false);\n      }\n      await loadAudios();\n    } catch (error) {\n      console.error('Erro ao deletar áudio:', error);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 bg-[#2d2d2d] rounded-lg p-4 border border-[#404040]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-[#e1aa1e] font-medium truncate\",\n          children: (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.title) || 'Selecione um áudio'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.url,\n        onTimeUpdate: handleTimeUpdate,\n        onEnded: handleAudioEnd,\n        className: \"hidden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-1 bg-[#404040] rounded-full cursor-pointer\",\n        onClick: handleProgressClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-full bg-[#e1aa1e] rounded-full\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between text-xs text-gray-400 mt-1 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: audioRef.current ? `${Math.floor(audioRef.current.currentTime / 60)}:${String(Math.floor(audioRef.current.currentTime % 60)).padStart(2, '0')}` : '0:00'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: audioRef.current ? `${Math.floor(audioRef.current.duration / 60)}:${String(Math.floor(audioRef.current.duration % 60)).padStart(2, '0')}` : '0:00'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => currentAudio && togglePlay(currentAudio),\n          className: \"p-2 hover:bg-[#404040] rounded-full transition-colors\",\n          disabled: !currentAudio,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-8 h-8 text-[#e1aa1e]\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: isPlaying ? /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm text-gray-400 px-2\",\n        children: \"Lista de \\xC1udios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"bg-[#e1aa1e] hover:bg-[#e1aa1e]/80 text-gray-900 px-3 py-1.5 rounded cursor-pointer transition-colors text-sm\",\n        children: [isUploading ? 'Enviando...' : 'Anexar Áudio', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"hidden\",\n          accept: \"audio/*\",\n          onChange: handleUpload,\n          disabled: isUploading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2 max-h-[400px] overflow-y-auto\",\n      children: audios.map(audio => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors ${(currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id ? 'bg-[#2d2d2d]' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => togglePlay(audio),\n          className: \"p-1 hover:bg-[#404040] rounded-full transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-6 h-6 text-[#e1aa1e]\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: isPlaying && (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id ? /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"flex-1 truncate\",\n          children: audio.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1\",\n            children: showIntervalInput === audio.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"1\",\n                placeholder: \"Min\",\n                className: \"w-16 px-2 py-1 bg-[#2d2d2d] border border-[#404040] rounded text-gray-200 [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\",\n                onKeyDown: e => {\n                  if (e.key === 'Enter') {\n                    const value = parseInt(e.target.value);\n                    if (value > 0) startRepeatTimer(audio.id, value);\n                  }\n                },\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  const input = document.querySelector('input[type=\"number\"]');\n                  const value = parseInt(input.value);\n                  if (value > 0) startRepeatTimer(audio.id, value);\n                },\n                className: \"text-[#e1aa1e] hover:text-[#e1aa1e]/80 text-sm px-2 py-1\",\n                children: \"OK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  if (audioTimers[audio.id]) {\n                    stopRepeatTimer(audio.id);\n                  } else {\n                    setShowIntervalInput(audio.id);\n                  }\n                },\n                className: `p-1 hover:bg-[#404040] rounded-full transition-colors ${audioTimers[audio.id] ? 'text-[#e1aa1e]' : 'text-gray-400'}`,\n                title: audioTimers[audio.id] ? 'Parar repetição' : 'Repetir',\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"w-5 h-5\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  viewBox: \"0 0 24 24\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    strokeWidth: 2,\n                    d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 485,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 21\n              }, this), audioTimers[audio.id] && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-[#e1aa1e]\",\n                children: formatTime(audioTimers[audio.id].timeLeft)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(audio.id),\n            className: \"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-5 h-5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this)]\n      }, audio.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"v++PvfARQEEMD5F8mXFD5eMZ8z0=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","audioService","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioPlayer","onEnded","isPlaying","setIsPlaying","_s","audios","setAudios","currentAudio","setCurrentAudio","progress","setProgress","isUploading","setIsUploading","audioRef","audioTimers","setAudioTimers","showIntervalInput","setShowIntervalInput","timersRef","timerAudioId","setTimerAudioId","pendingAudioId","setPendingAudioId","pendingAudios","setPendingAudios","loadAudios","current","play","catch","error","console","pause","Object","values","forEach","timer","clearInterval","onended","log","handleAudioEnd","entries","audioId","timeLeft","prev","interval","audio","find","a","id","currentTime","then","includes","data","getAudios","handleTimeUpdate","duration","handleProgressClick","e","bounds","currentTarget","getBoundingClientRect","x","clientX","left","width","percentage","length","nextAudioId","nextAudio","slice","togglePlay","handleUpload","event","_event$target$files","file","target","files","name","fileExt","split","pop","fileName","Math","random","filePath","uploadData","uploadError","storage","from","upload","publicUrl","getPublicUrl","newAudio","addAudio","title","url","is_auto_play","value","startRepeatTimer","minutes","seconds","intervalId","setInterval","currentTimer","newTimeLeft","stopRepeatTimer","newTimers","handleDelete","deleteAudio","formatTime","mins","floor","secs","toString","padStart","className","children","_jsxFileName","lineNumber","columnNumber","ref","src","onTimeUpdate","onClick","style","String","disabled","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","type","accept","onChange","map","min","placeholder","onKeyDown","key","parseInt","autoFocus","input","document","querySelector","_c","$RefreshReg$"],"sources":["C:/Users/genil/pasta teste/src/components/AudioPlayer.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { audioService, AudioData } from '../lib/supabase';\r\nimport { supabase } from '../lib/supabase';\r\n\r\ninterface AudioTimer {\r\n  interval: number;\r\n  timeLeft: number;\r\n  intervalId: NodeJS.Timeout;\r\n}\r\n\r\ninterface AudioPlayerProps {\r\n  onEnded: () => void;\r\n  isPlaying: boolean;\r\n  setIsPlaying: (playing: boolean) => void;\r\n}\r\n\r\nconst AudioPlayer: React.FC<AudioPlayerProps> = ({ onEnded, isPlaying, setIsPlaying }) => {\r\n  const [audios, setAudios] = useState<AudioData[]>([]);\r\n  const [currentAudio, setCurrentAudio] = useState<AudioData | null>(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const audioRef = useRef<HTMLAudioElement>(null);\r\n  const [audioTimers, setAudioTimers] = useState<Record<string, AudioTimer>>({});\r\n  const [showIntervalInput, setShowIntervalInput] = useState<string | null>(null);\r\n  const timersRef = useRef<Record<string, NodeJS.Timeout>>({});\r\n  const [timerAudioId, setTimerAudioId] = useState<string | null>(null);\r\n  const [pendingAudioId, setPendingAudioId] = useState<string | null>(null);\r\n  const [pendingAudios, setPendingAudios] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    loadAudios();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      if (isPlaying) {\r\n        audioRef.current.play().catch(error => {\r\n          console.error('Erro ao reproduzir áudio:', error);\r\n          setIsPlaying(false);\r\n        });\r\n      } else {\r\n        audioRef.current.pause();\r\n      }\r\n    }\r\n  }, [isPlaying]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      Object.values(timersRef.current).forEach(timer => {\r\n        clearInterval(timer);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      audioRef.current.onended = () => {\r\n        console.log('Áudio terminou (evento nativo)');\r\n        handleAudioEnd();\r\n      };\r\n    }\r\n  }, [audioRef.current]);\r\n\r\n  useEffect(() => {\r\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\r\n      if (timer.timeLeft === 0) {\r\n        // Resetar o timer\r\n        setAudioTimers(prev => ({\r\n          ...prev,\r\n          [audioId]: {\r\n            ...timer,\r\n            timeLeft: timer.interval\r\n          }\r\n        }));\r\n\r\n        // Se não há áudio tocando, reproduzir imediatamente\r\n        if (!isPlaying) {\r\n          const audio = audios.find(a => a.id === audioId);\r\n          if (audio && audioRef.current) {\r\n            setCurrentAudio(audio);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.play()\r\n              .then(() => {\r\n                setIsPlaying(true);\r\n              })\r\n              .catch(error => {\r\n                console.error('Erro ao reproduzir áudio:', error);\r\n              });\r\n          }\r\n        } else {\r\n          // Adicionar à fila de pendentes se não estiver já na fila\r\n          setPendingAudios(prev => \r\n            prev.includes(audioId) ? prev : [...prev, audioId]\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }, [audioTimers, audios, isPlaying]);\r\n\r\n  const loadAudios = async () => {\r\n    try {\r\n      const data = await audioService.getAudios();\r\n      console.log('Áudios carregados:', data); // Para debug\r\n      setAudios(data);\r\n    } catch (error) {\r\n      console.error('Erro ao carregar áudios:', error);\r\n    }\r\n  };\r\n\r\n  const handleTimeUpdate = () => {\r\n    if (audioRef.current) {\r\n      const progress = (audioRef.current.currentTime / audioRef.current.duration) * 100;\r\n      setProgress(progress);\r\n    }\r\n  };\r\n\r\n  const handleProgressClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if (audioRef.current) {\r\n      const bounds = e.currentTarget.getBoundingClientRect();\r\n      const x = e.clientX - bounds.left;\r\n      const width = bounds.width;\r\n      const percentage = x / width;\r\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\r\n    }\r\n  };\r\n\r\n  const handleAudioEnd = () => {\r\n    audioRef.current!.currentTime = 0;\r\n    setProgress(0);\r\n\r\n    // Verificar se há áudios pendentes\r\n    if (pendingAudios.length > 0) {\r\n      // Pegar o próximo áudio da fila\r\n      const nextAudioId = pendingAudios[0];\r\n      const nextAudio = audios.find(a => a.id === nextAudioId);\r\n\r\n      // Remover o áudio da fila de pendentes\r\n      setPendingAudios(prev => prev.slice(1));\r\n\r\n      if (nextAudio && audioRef.current) {\r\n        setCurrentAudio(nextAudio);\r\n        audioRef.current.currentTime = 0;\r\n        audioRef.current.play()\r\n          .then(() => {\r\n            setIsPlaying(true);\r\n          })\r\n          .catch(error => {\r\n            console.error('Erro ao reproduzir próximo áudio:', error);\r\n          });\r\n      }\r\n    } else {\r\n      setIsPlaying(false);\r\n      onEnded();\r\n    }\r\n  };\r\n\r\n  const togglePlay = (audio: AudioData) => {\r\n    if (currentAudio?.id === audio.id) {\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      setCurrentAudio(audio);\r\n      if (audioRef.current) {\r\n        audioRef.current.currentTime = 0;\r\n      }\r\n      setIsPlaying(true);\r\n      // Limpar a fila de áudios pendentes quando um áudio é tocado manualmente\r\n      setPendingAudios([]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    setIsUploading(true);\r\n    try {\r\n      console.log('Iniciando upload do arquivo:', file.name);\r\n      \r\n      // Upload do arquivo\r\n      const fileExt = file.name.split('.').pop();\r\n      const fileName = `${Math.random()}.${fileExt}`;\r\n      const filePath = `audios/${fileName}`;\r\n\r\n      console.log('Tentando fazer upload para:', filePath);\r\n\r\n      const { data: uploadData, error: uploadError } = await supabase.storage\r\n        .from('media')\r\n        .upload(filePath, file);\r\n\r\n      if (uploadError) {\r\n        console.error('Erro no upload:', uploadError);\r\n        throw uploadError;\r\n      }\r\n\r\n      console.log('Upload bem sucedido:', uploadData);\r\n\r\n      // Obtém a URL pública\r\n      const { data: { publicUrl } } = supabase.storage\r\n        .from('media')\r\n        .getPublicUrl(filePath);\r\n\r\n      console.log('URL pública gerada:', publicUrl);\r\n\r\n      // Adiciona ao banco de dados\r\n      const newAudio = await audioService.addAudio({\r\n        title: file.name,\r\n        url: publicUrl,\r\n        is_auto_play: false\r\n      });\r\n\r\n      console.log('Áudio adicionado ao banco:', newAudio);\r\n\r\n      // Recarrega todos os áudios\r\n      await loadAudios();\r\n      \r\n      // Seleciona o novo áudio\r\n      setCurrentAudio(newAudio);\r\n      \r\n      // Limpa o input\r\n      event.target.value = '';\r\n\r\n    } catch (error) {\r\n      console.error('Erro detalhado no upload:', error);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const startRepeatTimer = (audioId: string, minutes: number) => {\r\n    // Não vamos mais alterar o áudio atual ou seu estado de reprodução\r\n    // Apenas armazenamos qual áudio será reproduzido quando o timer zerar\r\n    setTimerAudioId(audioId);\r\n\r\n    if (timersRef.current[audioId]) {\r\n      clearInterval(timersRef.current[audioId]);\r\n    }\r\n\r\n    const seconds = minutes * 60;\r\n    \r\n    const intervalId = setInterval(() => {\r\n      setAudioTimers(prev => {\r\n        const currentTimer = prev[audioId];\r\n        if (!currentTimer) return prev;\r\n\r\n        const newTimeLeft = currentTimer.timeLeft - 1;\r\n        return {\r\n          ...prev,\r\n          [audioId]: {\r\n            ...currentTimer,\r\n            timeLeft: newTimeLeft\r\n          }\r\n        };\r\n      });\r\n    }, 1000);\r\n\r\n    timersRef.current[audioId] = intervalId;\r\n\r\n    setAudioTimers(prev => ({\r\n      ...prev,\r\n      [audioId]: {\r\n        interval: seconds,\r\n        timeLeft: seconds,\r\n        intervalId\r\n      }\r\n    }));\r\n\r\n    setShowIntervalInput(null);\r\n  };\r\n\r\n  const stopRepeatTimer = (audioId: string) => {\r\n    if (timersRef.current[audioId]) {\r\n      clearInterval(timersRef.current[audioId]);\r\n      delete timersRef.current[audioId];\r\n    }\r\n\r\n    setAudioTimers(prev => {\r\n      const newTimers = { ...prev };\r\n      delete newTimers[audioId];\r\n      return newTimers;\r\n    });\r\n  };\r\n\r\n  const handleDelete = async (audioId: string) => {\r\n    try {\r\n      await audioService.deleteAudio(audioId);\r\n      if (currentAudio?.id === audioId) {\r\n        setCurrentAudio(null);\r\n        setIsPlaying(false);\r\n      }\r\n      await loadAudios();\r\n    } catch (error) {\r\n      console.error('Erro ao deletar áudio:', error);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds: number): string => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = Math.floor(seconds % 60);\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\">\r\n      {/* Player Central */}\r\n      <div className=\"mb-3 bg-[#2d2d2d] rounded-lg p-4 border border-[#404040]\">\r\n        <div className=\"mb-3\">\r\n          <h3 className=\"text-[#e1aa1e] font-medium truncate\">\r\n            {currentAudio?.title || 'Selecione um áudio'}\r\n          </h3>\r\n        </div>\r\n\r\n        <audio\r\n          ref={audioRef}\r\n          src={currentAudio?.url}\r\n          onTimeUpdate={handleTimeUpdate}\r\n          onEnded={handleAudioEnd}\r\n          className=\"hidden\"\r\n        />\r\n\r\n        {/* Barra de Progresso */}\r\n        <div\r\n          className=\"h-1 bg-[#404040] rounded-full cursor-pointer\"\r\n          onClick={handleProgressClick}\r\n        >\r\n          <div\r\n            className=\"h-full bg-[#e1aa1e] rounded-full\"\r\n            style={{ width: `${progress}%` }}\r\n          />\r\n        </div>\r\n\r\n        {/* Tempo */}\r\n        <div className=\"flex justify-between text-xs text-gray-400 mt-1 mb-3\">\r\n          <span>\r\n            {audioRef.current\r\n              ? `${Math.floor(audioRef.current.currentTime / 60)}:${String(\r\n                  Math.floor(audioRef.current.currentTime % 60)\r\n                ).padStart(2, '0')}`\r\n              : '0:00'}\r\n          </span>\r\n          <span>\r\n            {audioRef.current\r\n              ? `${Math.floor(audioRef.current.duration / 60)}:${String(\r\n                  Math.floor(audioRef.current.duration % 60)\r\n                ).padStart(2, '0')}`\r\n              : '0:00'}\r\n          </span>\r\n        </div>\r\n\r\n        {/* Controle Principal */}\r\n        <div className=\"flex justify-center\">\r\n          <button\r\n            onClick={() => currentAudio && togglePlay(currentAudio)}\r\n            className=\"p-2 hover:bg-[#404040] rounded-full transition-colors\"\r\n            disabled={!currentAudio}\r\n          >\r\n            <svg\r\n              className=\"w-8 h-8 text-[#e1aa1e]\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              {isPlaying ? (\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                />\r\n              ) : (\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                />\r\n              )}\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Painel de Controle */}\r\n      <div className=\"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\">\r\n        <span className=\"text-sm text-gray-400 px-2\">Lista de Áudios</span>\r\n        <label className=\"bg-[#e1aa1e] hover:bg-[#e1aa1e]/80 text-gray-900 px-3 py-1.5 rounded cursor-pointer transition-colors text-sm\">\r\n          {isUploading ? 'Enviando...' : 'Anexar Áudio'}\r\n          <input\r\n            type=\"file\"\r\n            className=\"hidden\"\r\n            accept=\"audio/*\"\r\n            onChange={handleUpload}\r\n            disabled={isUploading}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      {/* Lista de Áudios */}\r\n      <div className=\"space-y-2 max-h-[400px] overflow-y-auto\">\r\n        {audios.map((audio) => (\r\n          <div\r\n            key={audio.id}\r\n            className={`flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors ${\r\n              currentAudio?.id === audio.id ? 'bg-[#2d2d2d]' : ''\r\n            }`}\r\n          >\r\n            <button\r\n              onClick={() => togglePlay(audio)}\r\n              className=\"p-1 hover:bg-[#404040] rounded-full transition-colors\"\r\n            >\r\n              <svg\r\n                className=\"w-6 h-6 text-[#e1aa1e]\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                {isPlaying && currentAudio?.id === audio.id ? (\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                ) : (\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                )}\r\n              </svg>\r\n            </button>\r\n            <span className=\"flex-1 truncate\">{audio.title}</span>\r\n            \r\n            {/* Controles do item */}\r\n            <div className=\"flex items-center gap-2\">\r\n              <div className=\"flex items-center gap-1\">\r\n                {showIntervalInput === audio.id ? (\r\n                  <div className=\"flex items-center gap-1\">\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      placeholder=\"Min\"\r\n                      className=\"w-16 px-2 py-1 bg-[#2d2d2d] border border-[#404040] rounded text-gray-200 [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\"\r\n                      onKeyDown={(e) => {\r\n                        if (e.key === 'Enter') {\r\n                          const value = parseInt((e.target as HTMLInputElement).value);\r\n                          if (value > 0) startRepeatTimer(audio.id, value);\r\n                        }\r\n                      }}\r\n                      autoFocus\r\n                    />\r\n                    <button\r\n                      onClick={() => {\r\n                        const input = document.querySelector('input[type=\"number\"]') as HTMLInputElement;\r\n                        const value = parseInt(input.value);\r\n                        if (value > 0) startRepeatTimer(audio.id, value);\r\n                      }}\r\n                      className=\"text-[#e1aa1e] hover:text-[#e1aa1e]/80 text-sm px-2 py-1\"\r\n                    >\r\n                      OK\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <button\r\n                      onClick={() => {\r\n                        if (audioTimers[audio.id]) {\r\n                          stopRepeatTimer(audio.id);\r\n                        } else {\r\n                          setShowIntervalInput(audio.id);\r\n                        }\r\n                      }}\r\n                      className={`p-1 hover:bg-[#404040] rounded-full transition-colors ${\r\n                        audioTimers[audio.id] ? 'text-[#e1aa1e]' : 'text-gray-400'\r\n                      }`}\r\n                      title={audioTimers[audio.id] ? 'Parar repetição' : 'Repetir'}\r\n                    >\r\n                      <svg\r\n                        className=\"w-5 h-5\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        viewBox=\"0 0 24 24\"\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth={2}\r\n                          d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n                    {audioTimers[audio.id] && (\r\n                      <span className=\"text-xs text-[#e1aa1e]\">\r\n                        {formatTime(audioTimers[audio.id].timeLeft)}\r\n                      </span>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              <button\r\n                onClick={() => handleDelete(audio.id)}\r\n                className=\"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\"\r\n              >\r\n                <svg\r\n                  className=\"w-5 h-5\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioPlayer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}