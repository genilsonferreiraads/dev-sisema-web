{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genil\\\\Desktop\\\\sistema da imperio\\\\src\\\\components\\\\VideoPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { videoService } from '../lib/supabase';\nimport VideoSidebar from './VideoSidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VideoPlayer = ({\n  videoId,\n  onEnded,\n  autoplay = false,\n  isPlaying = false,\n  setIsPlaying = () => {},\n  shouldAutoplay = false\n}) => {\n  _s();\n  var _videos$2;\n  const opts = {\n    height: '100%',\n    width: '100%',\n    playerVars: {\n      autoplay: autoplay ? 1 : 0,\n      controls: 1,\n      rel: 0\n    }\n  };\n  const [videos, setVideos] = useState([]);\n  const [newVideoUrl, setNewVideoUrl] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [player, setPlayer] = useState(null);\n  const [isPlayerReady, setIsPlayerReady] = useState(false);\n  const [localIsPlaying, setLocalIsPlaying] = useState(isPlaying);\n  useEffect(() => {\n    setLocalIsPlaying(isPlaying);\n  }, [isPlaying]);\n  const updatePlayingState = state => {\n    setLocalIsPlaying(state);\n    setIsPlaying(state);\n  };\n  useEffect(() => {\n    loadVideos();\n  }, []);\n  const loadYouTubeAPI = () => {\n    return new Promise((resolve, reject) => {\n      try {\n        var _firstScriptTag$paren;\n        if (window.YT && window.YT.Player) {\n          resolve();\n          return;\n        }\n        const existingScript = document.getElementById('youtube-iframe-api');\n        if (existingScript) {\n          resolve();\n          return;\n        }\n        const tag = document.createElement('script');\n        tag.id = 'youtube-iframe-api';\n        tag.src = 'https://www.youtube.com/iframe_api';\n        tag.async = true;\n        tag.onerror = () => {\n          reject(new Error('Falha ao carregar a API do YouTube'));\n        };\n        const firstScriptTag = document.getElementsByTagName('script')[0];\n        (_firstScriptTag$paren = firstScriptTag.parentNode) === null || _firstScriptTag$paren === void 0 ? void 0 : _firstScriptTag$paren.insertBefore(tag, firstScriptTag);\n        window.onYouTubeIframeAPIReady = () => {\n          resolve();\n        };\n      } catch (error) {\n        reject(error);\n      }\n    });\n  };\n  const initializePlayer = async (videoId, shouldAutoplay = false) => {\n    try {\n      if (!videoId) {\n        console.warn('VideoId não fornecido');\n        return null;\n      }\n\n      // Limpa o player existente\n      if (player) {\n        try {\n          player.destroy();\n        } catch (e) {\n          console.error('Erro ao destruir player existente:', e);\n        }\n      }\n      const playerContainer = document.getElementById('youtube-player');\n      if (!playerContainer) {\n        throw new Error('Container do player não encontrado');\n      }\n      playerContainer.innerHTML = '';\n      const playerElement = document.createElement('div');\n      playerElement.id = 'youtube-player-element';\n      playerContainer.appendChild(playerElement);\n\n      // Aguarda a API do YouTube estar pronta\n      await new Promise(resolve => {\n        if (window.YT && window.YT.Player) {\n          resolve();\n        } else {\n          window.onYouTubeIframeAPIReady = () => resolve();\n        }\n      });\n\n      // Cria o novo player com a tipagem correta\n      return new Promise((resolve, reject) => {\n        try {\n          const newPlayer = new window.YT.Player('youtube-player-element', {\n            height: '100%',\n            width: '100%',\n            videoId: videoId,\n            playerVars: {\n              autoplay: shouldAutoplay ? 1 : 0,\n              controls: 1,\n              rel: 0,\n              origin: window.location.origin,\n              enablejsapi: 1\n            },\n            events: {\n              onReady: () => {\n                setIsPlayerReady(true);\n                resolve(newPlayer);\n              },\n              onError: error => {\n                console.error('Erro ao inicializar player:', error);\n                reject(error);\n              }\n            }\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    } catch (error) {\n      console.error('Erro ao inicializar player:', error);\n      throw error;\n    }\n  };\n  useEffect(() => {\n    let mounted = true;\n    const initPlayer = async () => {\n      if (selectedVideo || videos[0]) {\n        var _videos$;\n        const videoId = extractVideoId((selectedVideo === null || selectedVideo === void 0 ? void 0 : selectedVideo.url) || ((_videos$ = videos[0]) === null || _videos$ === void 0 ? void 0 : _videos$.url));\n        if (videoId && mounted) {\n          try {\n            const newPlayer = await initializePlayer(videoId, shouldAutoplay);\n            if (mounted && newPlayer) {\n              setPlayer(newPlayer);\n              setIsPlayerReady(true);\n            }\n          } catch (error) {\n            console.error('Erro ao inicializar player:', error);\n            if (mounted) {\n              setError('Erro ao carregar o vídeo');\n              setIsPlayerReady(false);\n            }\n          }\n        }\n      }\n    };\n    initPlayer();\n    return () => {\n      mounted = false;\n      if (player) {\n        try {\n          updatePlayingState(false);\n          player.destroy();\n          setPlayer(null);\n          setIsPlayerReady(false);\n        } catch (error) {\n          console.error('Erro ao destruir player:', error);\n        }\n      }\n    };\n  }, [selectedVideo === null || selectedVideo === void 0 ? void 0 : selectedVideo.url, (_videos$2 = videos[0]) === null || _videos$2 === void 0 ? void 0 : _videos$2.url]);\n  useEffect(() => {\n    let timeoutId;\n    const handlePlayback = async () => {\n      if (player && isPlayerReady) {\n        try {\n          if (isPlaying) {\n            // Pequeno delay para garantir que o player está pronto\n            timeoutId = setTimeout(() => {\n              try {\n                player.playVideo();\n              } catch (error) {\n                console.error('Erro ao iniciar reprodução:', error);\n                updatePlayingState(false);\n              }\n            }, 100);\n          } else {\n            player.pauseVideo();\n          }\n        } catch (error) {\n          console.error('Erro ao controlar reprodução:', error);\n          updatePlayingState(false);\n        }\n      }\n    };\n    handlePlayback();\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [isPlaying, player, isPlayerReady]);\n  const handleVideoSelect = async (video, shouldAutoplay = false) => {\n    try {\n      const videoId = extractVideoId(video.url);\n      if (!videoId) {\n        console.error('ID do vídeo não encontrado na URL:', video.url);\n        return;\n      }\n      setSelectedVideo(video);\n      setError('');\n      if (player && isPlayerReady) {\n        console.log('Player existente, carregando novo vídeo');\n        try {\n          // Pausa o vídeo atual antes de carregar o novo\n          player.pauseVideo();\n          await new Promise(resolve => setTimeout(resolve, 100));\n          player.loadVideoById({\n            videoId: videoId,\n            startSeconds: 0,\n            suggestedQuality: 'large'\n          });\n\n          // Pequeno delay antes de iniciar a reprodução\n          if (shouldAutoplay) {\n            setTimeout(() => {\n              try {\n                player.playVideo();\n                updatePlayingState(true);\n              } catch (e) {\n                console.error('Erro ao iniciar reprodução:', e);\n                updatePlayingState(false);\n              }\n            }, 200);\n          }\n        } catch (e) {\n          console.error('Erro ao carregar vídeo:', e);\n          updatePlayingState(false);\n          setError('Erro ao carregar o vídeo');\n        }\n      } else {\n        console.log('Inicializando novo player');\n        try {\n          const newPlayer = await initializePlayer(videoId, shouldAutoplay);\n          if (newPlayer) {\n            setPlayer(newPlayer);\n            setIsPlayerReady(true);\n            if (shouldAutoplay) {\n              setTimeout(() => {\n                try {\n                  newPlayer.playVideo();\n                  updatePlayingState(true);\n                } catch (e) {\n                  console.error('Erro ao iniciar reprodução:', e);\n                  updatePlayingState(false);\n                }\n              }, 200);\n            }\n          }\n        } catch (error) {\n          console.error('Erro ao inicializar player:', error);\n          setError('Erro ao carregar o vídeo');\n        }\n      }\n    } catch (error) {\n      console.error('Erro ao selecionar vídeo:', error);\n      setError('Erro ao carregar o vídeo');\n    }\n  };\n  const handlePlayerReady = async (event, shouldAutoplay) => {\n    try {\n      console.log('Player pronto, shouldAutoplay:', shouldAutoplay);\n      const newPlayer = event.target;\n      setPlayer(newPlayer);\n      setIsPlayerReady(true);\n      setError('');\n      if (shouldAutoplay) {\n        // Pequeno delay antes de iniciar a reprodução\n        await new Promise(resolve => setTimeout(resolve, 200));\n        try {\n          newPlayer.playVideo();\n          updatePlayingState(true);\n        } catch (e) {\n          console.error('Erro ao iniciar reprodução:', e);\n          updatePlayingState(false);\n        }\n      }\n    } catch (error) {\n      console.error('Erro ao preparar player:', error);\n      setIsPlayerReady(false);\n      setError('Erro ao preparar o player');\n    }\n  };\n  const loadVideos = async () => {\n    try {\n      const data = await videoService.getRecentVideos();\n      setVideos(data);\n    } catch (error) {\n      console.error('Erro ao carregar vídeos:', error);\n    }\n  };\n\n  // Função para converter URL do YouTube em formato embed\n  const getEmbedUrl = url => {\n    console.log('URL original:', url);\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        var _url$split$, _url$split$2;\n        const videoId = url.includes('youtube.com') ? (_url$split$ = url.split('v=')[1]) === null || _url$split$ === void 0 ? void 0 : _url$split$.split('&')[0] : (_url$split$2 = url.split('youtu.be/')[1]) === null || _url$split$2 === void 0 ? void 0 : _url$split$2.split('?')[0];\n        const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      if (url.includes('vimeo.com')) {\n        var _url$split$3;\n        const videoId = (_url$split$3 = url.split('vimeo.com/')[1]) === null || _url$split$3 === void 0 ? void 0 : _url$split$3.split('?')[0];\n        const embedUrl = `https://player.vimeo.com/video/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      return url;\n    } catch (error) {\n      console.error('Erro ao processar URL:', error);\n      return url;\n    }\n  };\n\n  // Função para extrair título do vídeo do YouTube\n  const getVideoTitle = async url => {\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        var _url$split$4, _url$split$5, _data$items$, _data$items$$snippet;\n        const videoId = url.includes('youtube.com') ? (_url$split$4 = url.split('v=')[1]) === null || _url$split$4 === void 0 ? void 0 : _url$split$4.split('&')[0] : (_url$split$5 = url.split('youtu.be/')[1]) === null || _url$split$5 === void 0 ? void 0 : _url$split$5.split('?')[0];\n        const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=AIzaSyAyTc_jYQSVM_3kg95t8ai3CWckZGG0v4c&part=snippet`);\n        const data = await response.json();\n        if (data.error) {\n          console.error('Erro da API do YouTube:', data.error);\n          return 'Vídeo do YouTube';\n        }\n        return ((_data$items$ = data.items[0]) === null || _data$items$ === void 0 ? void 0 : (_data$items$$snippet = _data$items$.snippet) === null || _data$items$$snippet === void 0 ? void 0 : _data$items$$snippet.title) || 'Vídeo do YouTube';\n      }\n      if (url.includes('vimeo.com')) {\n        var _url$split$6, _data$;\n        const videoId = (_url$split$6 = url.split('vimeo.com/')[1]) === null || _url$split$6 === void 0 ? void 0 : _url$split$6.split('?')[0];\n        const response = await fetch(`https://vimeo.com/api/v2/video/${videoId}.json`);\n        const data = await response.json();\n        return ((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.title) || 'Vídeo do Vimeo';\n      }\n      return 'Vídeo';\n    } catch (error) {\n      console.error('Erro ao obter título do vídeo:', error);\n      return 'Vídeo';\n    }\n  };\n  const handleAddVideo = async e => {\n    if (e) e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    if (!newVideoUrl.trim()) {\n      setError('Por favor, insira uma URL válida');\n      setIsLoading(false);\n      return;\n    }\n    try {\n      const embedUrl = getEmbedUrl(newVideoUrl);\n      const videoTitle = await getVideoTitle(newVideoUrl);\n      const newVideo = await videoService.addVideo(embedUrl, videoTitle);\n      setVideos(prev => [newVideo, ...prev]);\n      setNewVideoUrl('');\n      setSelectedVideo(newVideo);\n    } catch (error) {\n      console.error('Erro detalhado:', error);\n      setError(error.message || error.error_description || 'Erro ao adicionar vídeo. Verifique se a URL é válida.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDelete = async videoId => {\n    try {\n      await videoService.deleteVideo(videoId);\n      setVideos(prev => prev.filter(video => video.id !== videoId));\n    } catch (error) {\n      console.error('Erro ao deletar vídeo:', error);\n    }\n  };\n  const handleStateChange = event => {\n    try {\n      if (!player || !isPlayerReady) return;\n      switch (event.data) {\n        case window.YT.PlayerState.ENDED:\n          updatePlayingState(false);\n          window.dispatchEvent(new Event('externalMediaStop'));\n          onEnded === null || onEnded === void 0 ? void 0 : onEnded();\n          break;\n        case window.YT.PlayerState.PLAYING:\n          updatePlayingState(true);\n          window.dispatchEvent(new Event('externalMediaPlay'));\n          break;\n        case window.YT.PlayerState.PAUSED:\n          updatePlayingState(false);\n          window.dispatchEvent(new Event('externalMediaStop'));\n          break;\n        default:\n          break;\n      }\n    } catch (error) {\n      console.error('Erro ao processar mudança de estado:', error);\n      updatePlayingState(false);\n    }\n  };\n\n  // Função para extrair videoId do YouTube\n  const extractVideoId = (url = '') => {\n    try {\n      if (!url) return '';\n      let videoId = '';\n      if (url.includes('youtube.com/embed/')) {\n        var _url$split$7;\n        videoId = (_url$split$7 = url.split('embed/')[1]) === null || _url$split$7 === void 0 ? void 0 : _url$split$7.split('?')[0];\n      } else if (url.includes('youtube.com/watch')) {\n        var _url$split$8;\n        videoId = (_url$split$8 = url.split('v=')[1]) === null || _url$split$8 === void 0 ? void 0 : _url$split$8.split('&')[0];\n      } else if (url.includes('youtu.be/')) {\n        var _url$split$9;\n        videoId = (_url$split$9 = url.split('youtu.be/')[1]) === null || _url$split$9 === void 0 ? void 0 : _url$split$9.split('?')[0];\n      }\n      console.log('Extraído videoId:', videoId, 'da URL:', url);\n      return videoId;\n    } catch (error) {\n      console.error('Erro ao extrair videoId:', error);\n      return '';\n    }\n  };\n\n  // Adicione esta função para controlar o volume do iframe com segurança\n  const setPlayerVolume = volume => {\n    try {\n      if (player && isPlayerReady) {\n        const safeVolume = Math.min(Math.max(Math.round(volume), 0), 100);\n        player.setVolume(safeVolume);\n      }\n    } catch (error) {\n      console.error('Erro ao ajustar volume:', error);\n    }\n  };\n\n  // Função para fade do volume com verificações de segurança\n  const fadeIframeVolume = (start, end, duration) => {\n    if (!player || !isPlayerReady) return;\n    try {\n      const steps = 20;\n      const stepValue = (end - start) / steps;\n      const stepDuration = duration / steps;\n      let currentStep = 0;\n      const fadeInterval = setInterval(() => {\n        try {\n          if (!player || !isPlayerReady) {\n            clearInterval(fadeInterval);\n            return;\n          }\n          currentStep++;\n          const newVolume = start + stepValue * currentStep;\n          setPlayerVolume(newVolume * 100);\n          if (currentStep >= steps) {\n            clearInterval(fadeInterval);\n          }\n        } catch (error) {\n          console.error('Erro durante fade:', error);\n          clearInterval(fadeInterval);\n        }\n      }, stepDuration);\n      return () => clearInterval(fadeInterval);\n    } catch (error) {\n      console.error('Erro ao iniciar fade:', error);\n    }\n  };\n\n  // Efeito para lidar com eventos de áudio\n  useEffect(() => {\n    const handleAudioPlay = () => {\n      if (isPlayerReady && player) {\n        try {\n          fadeIframeVolume(1, 0.10, 500);\n        } catch (error) {\n          console.error('Erro ao diminuir volume:', error);\n        }\n      }\n    };\n    const handleAudioStop = () => {\n      if (isPlayerReady && player) {\n        try {\n          fadeIframeVolume(0.10, 1, 500);\n        } catch (error) {\n          console.error('Erro ao aumentar volume:', error);\n        }\n      }\n    };\n    window.addEventListener('audioPlay', handleAudioPlay);\n    window.addEventListener('audioStop', handleAudioStop);\n    return () => {\n      try {\n        window.removeEventListener('audioPlay', handleAudioPlay);\n        window.removeEventListener('audioStop', handleAudioStop);\n      } catch (error) {\n        console.error('Erro ao remover event listeners:', error);\n      }\n    };\n  }, [isPlayerReady, player]);\n\n  // Efeito para inicializar o player\n  useEffect(() => {\n    let mounted = true;\n    const initPlayer = async () => {\n      try {\n        if (!mounted) return;\n        await loadYouTubeAPI();\n        const newPlayer = await initializePlayer(videoId, shouldAutoplay);\n        if (mounted && newPlayer) {\n          setPlayer(newPlayer);\n          setIsPlayerReady(true);\n        }\n      } catch (error) {\n        console.error('Erro ao inicializar player:', error);\n        if (mounted) {\n          setError('Erro ao carregar o player de vídeo');\n          setIsPlayerReady(false);\n        }\n      }\n    };\n    initPlayer();\n    return () => {\n      mounted = false;\n      if (player) {\n        try {\n          player.destroy();\n        } catch (error) {\n          console.error('Erro ao destruir player:', error);\n        }\n      }\n    };\n  }, [videoId]);\n\n  // Adicione este useEffect para escutar eventos de áudio\n  useEffect(() => {\n    const handleAudioPlay = () => {\n      if (isPlayerReady) {\n        fadeIframeVolume(1, 0.10, 500);\n      }\n    };\n    const handleAudioStop = () => {\n      if (isPlayerReady) {\n        fadeIframeVolume(0.10, 1, 500);\n      }\n    };\n    window.addEventListener('audioPlay', handleAudioPlay);\n    window.addEventListener('audioStop', handleAudioStop);\n    return () => {\n      window.removeEventListener('audioPlay', handleAudioPlay);\n      window.removeEventListener('audioStop', handleAudioStop);\n    };\n  }, [isPlayerReady]);\n\n  // Adicione este useEffect para monitorar mudanças no selectedVideo\n  useEffect(() => {\n    if (selectedVideo) {\n      const videoId = extractVideoId(selectedVideo.url);\n      if (videoId) {\n        console.log('Detectada mudança no selectedVideo, iniciando com autoplay');\n        handleVideoSelect(selectedVideo, true);\n      }\n    }\n  }, [selectedVideo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddVideo,\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          value: newVideoUrl,\n          onChange: e => setNewVideoUrl(e.target.value),\n          placeholder: \"Cole a URL do YouTube ou Vimeo aqui\",\n          className: \"w-full bg-[#2d2d2d] border border-[#404040] text-gray-200 rounded px-3 py-2 focus:border-[#e1aa1e] focus:outline-none\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-400 text-sm\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleAddVideo(),\n        className: `flex-1 ${isLoading ? 'bg-[#e1aa1e]/50 cursor-not-allowed' : 'bg-[#e1aa1e] hover:bg-[#e1aa1e]/80'} text-gray-900 px-3 py-1.5 rounded transition-colors flex items-center justify-center gap-2`,\n        disabled: isLoading,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-4 h-4\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M12 4v16m8-8H4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 11\n        }, this), isLoading ? 'Adicionando...' : 'Buscar Vídeo']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setIsSidebarOpen(true),\n        className: \"flex-1 bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-3 py-1.5 rounded flex items-center justify-center gap-2 transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-4 h-4\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M4 6h16M4 12h16M4 18h16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 11\n        }, this), \"\\xDAltimos V\\xEDdeos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-lg overflow-hidden border border-[#404040]\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative pt-[56.25%]\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"youtube-player\",\n            className: \"absolute top-0 left-0 w-full h-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoSidebar, {\n      isOpen: isSidebarOpen,\n      onClose: () => setIsSidebarOpen(false),\n      videos: videos,\n      onVideoSelect: handleVideoSelect,\n      setIsPlaying: setIsPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 668,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"VhCumfmiC0oBQ48/ZoUC6rcqZj0=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","videoService","VideoSidebar","jsxDEV","_jsxDEV","VideoPlayer","videoId","onEnded","autoplay","isPlaying","setIsPlaying","shouldAutoplay","_s","_videos$2","opts","height","width","playerVars","controls","rel","videos","setVideos","newVideoUrl","setNewVideoUrl","error","setError","isLoading","setIsLoading","isSidebarOpen","setIsSidebarOpen","selectedVideo","setSelectedVideo","player","setPlayer","isPlayerReady","setIsPlayerReady","localIsPlaying","setLocalIsPlaying","updatePlayingState","state","loadVideos","loadYouTubeAPI","Promise","resolve","reject","_firstScriptTag$paren","window","YT","Player","existingScript","document","getElementById","tag","createElement","id","src","async","onerror","Error","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","initializePlayer","console","warn","destroy","e","playerContainer","innerHTML","playerElement","appendChild","newPlayer","origin","location","enablejsapi","events","onReady","onError","mounted","initPlayer","_videos$","extractVideoId","url","timeoutId","handlePlayback","setTimeout","playVideo","pauseVideo","clearTimeout","handleVideoSelect","video","log","loadVideoById","startSeconds","suggestedQuality","handlePlayerReady","event","target","data","getRecentVideos","getEmbedUrl","includes","_url$split$","_url$split$2","split","embedUrl","_url$split$3","getVideoTitle","_url$split$4","_url$split$5","_data$items$","_data$items$$snippet","response","fetch","json","items","snippet","title","_url$split$6","_data$","handleAddVideo","preventDefault","trim","videoTitle","newVideo","addVideo","prev","message","error_description","handleDelete","deleteVideo","filter","handleStateChange","PlayerState","ENDED","dispatchEvent","Event","PLAYING","PAUSED","_url$split$7","_url$split$8","_url$split$9","setPlayerVolume","volume","safeVolume","Math","min","max","round","setVolume","fadeIframeVolume","start","end","duration","steps","stepValue","stepDuration","currentStep","fadeInterval","setInterval","clearInterval","newVolume","handleAudioPlay","handleAudioStop","addEventListener","removeEventListener","className","children","onSubmit","type","value","onChange","placeholder","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","isOpen","onClose","onVideoSelect","_c","$RefreshReg$"],"sources":["C:/Users/genil/Desktop/sistema da imperio/src/components/VideoPlayer.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { videoService, VideoData } from '../lib/supabase';\nimport VideoSidebar from './VideoSidebar';\n\ninterface YouTubePlayer {\n  playVideo: () => void;\n  pauseVideo: () => void;\n  stopVideo: () => void;\n  seekTo: (seconds: number, allowSeekAhead: boolean) => void;\n  setVolume: (volume: number) => void;\n  getVolume: () => number;\n  mute: () => void;\n  unMute: () => void;\n  isMuted: () => boolean;\n  destroy: () => void;\n  loadVideoById: (params: {\n    videoId: string;\n    startSeconds?: number;\n    suggestedQuality?: string;\n  }) => void;\n}\n\ninterface VideoPlayerProps {\n  videoId: string;\n  onEnded?: () => void;\n  autoplay?: boolean;\n  isPlaying?: boolean;\n  setIsPlaying?: (playing: boolean) => void;\n  shouldAutoplay?: boolean;\n}\n\nexport const VideoPlayer: React.FC<VideoPlayerProps> = ({ \n  videoId, \n  onEnded,\n  autoplay = false,\n  isPlaying = false,\n  setIsPlaying = () => {},\n  shouldAutoplay = false\n}) => {\n  const opts = {\n    height: '100%',\n    width: '100%',\n    playerVars: {\n      autoplay: autoplay ? 1 : 0,\n      controls: 1,\n      rel: 0,\n    },\n  };\n\n  const [videos, setVideos] = useState<VideoData[]>([]);\n  const [newVideoUrl, setNewVideoUrl] = useState('');\n  const [error, setError] = useState<string>('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [selectedVideo, setSelectedVideo] = useState<VideoData | null>(null);\n  const [player, setPlayer] = useState<YouTubePlayer | null>(null);\n  const [isPlayerReady, setIsPlayerReady] = useState(false);\n  const [localIsPlaying, setLocalIsPlaying] = useState(isPlaying);\n\n  useEffect(() => {\n    setLocalIsPlaying(isPlaying);\n  }, [isPlaying]);\n\n  const updatePlayingState = (state: boolean) => {\n    setLocalIsPlaying(state);\n    setIsPlaying(state);\n  };\n\n  useEffect(() => {\n    loadVideos();\n  }, []);\n\n  const loadYouTubeAPI = () => {\n    return new Promise<void>((resolve, reject) => {\n      try {\n        if ((window as any).YT && (window as any).YT.Player) {\n          resolve();\n          return;\n        }\n\n        const existingScript = document.getElementById('youtube-iframe-api');\n        if (existingScript) {\n          resolve();\n          return;\n        }\n\n        const tag = document.createElement('script');\n        tag.id = 'youtube-iframe-api';\n        tag.src = 'https://www.youtube.com/iframe_api';\n        tag.async = true;\n\n        tag.onerror = () => {\n          reject(new Error('Falha ao carregar a API do YouTube'));\n        };\n\n        const firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode?.insertBefore(tag, firstScriptTag);\n\n        (window as any).onYouTubeIframeAPIReady = () => {\n          resolve();\n        };\n      } catch (error) {\n        reject(error);\n      }\n    });\n  };\n\n  const initializePlayer = async (videoId?: string, shouldAutoplay: boolean = false) => {\n    try {\n      if (!videoId) {\n        console.warn('VideoId não fornecido');\n        return null;\n      }\n\n      // Limpa o player existente\n      if (player) {\n        try {\n          player.destroy();\n        } catch (e) {\n          console.error('Erro ao destruir player existente:', e);\n        }\n      }\n\n      const playerContainer = document.getElementById('youtube-player');\n      if (!playerContainer) {\n        throw new Error('Container do player não encontrado');\n      }\n\n      playerContainer.innerHTML = '';\n\n      const playerElement = document.createElement('div');\n      playerElement.id = 'youtube-player-element';\n      playerContainer.appendChild(playerElement);\n\n      // Aguarda a API do YouTube estar pronta\n      await new Promise<void>((resolve) => {\n        if ((window as any).YT && (window as any).YT.Player) {\n          resolve();\n        } else {\n          (window as any).onYouTubeIframeAPIReady = () => resolve();\n        }\n      });\n\n      // Cria o novo player com a tipagem correta\n      return new Promise<YouTubePlayer>((resolve, reject) => {\n        try {\n          const newPlayer = new (window as any).YT.Player('youtube-player-element', {\n            height: '100%',\n            width: '100%',\n            videoId: videoId,\n            playerVars: {\n              autoplay: shouldAutoplay ? 1 : 0,\n              controls: 1,\n              rel: 0,\n              origin: window.location.origin,\n              enablejsapi: 1\n            },\n            events: {\n              onReady: () => {\n                setIsPlayerReady(true);\n                resolve(newPlayer as YouTubePlayer);\n              },\n              onError: (error: any) => {\n                console.error('Erro ao inicializar player:', error);\n                reject(error);\n              }\n            }\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    } catch (error) {\n      console.error('Erro ao inicializar player:', error);\n      throw error;\n    }\n  };\n\n  useEffect(() => {\n    let mounted = true;\n\n    const initPlayer = async () => {\n      if (selectedVideo || videos[0]) {\n        const videoId = extractVideoId(selectedVideo?.url || videos[0]?.url);\n        if (videoId && mounted) {\n          try {\n            const newPlayer = await initializePlayer(videoId, shouldAutoplay);\n            if (mounted && newPlayer) {\n              setPlayer(newPlayer);\n              setIsPlayerReady(true);\n            }\n          } catch (error) {\n            console.error('Erro ao inicializar player:', error);\n            if (mounted) {\n              setError('Erro ao carregar o vídeo');\n              setIsPlayerReady(false);\n            }\n          }\n        }\n      }\n    };\n\n    initPlayer();\n\n    return () => {\n      mounted = false;\n      if (player) {\n        try {\n          updatePlayingState(false);\n          player.destroy();\n          setPlayer(null);\n          setIsPlayerReady(false);\n        } catch (error) {\n          console.error('Erro ao destruir player:', error);\n        }\n      }\n    };\n  }, [selectedVideo?.url, videos[0]?.url]);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n    \n    const handlePlayback = async () => {\n      if (player && isPlayerReady) {\n        try {\n          if (isPlaying) {\n            // Pequeno delay para garantir que o player está pronto\n            timeoutId = setTimeout(() => {\n              try {\n                player.playVideo();\n              } catch (error) {\n                console.error('Erro ao iniciar reprodução:', error);\n                updatePlayingState(false);\n              }\n            }, 100);\n          } else {\n            player.pauseVideo();\n          }\n        } catch (error) {\n          console.error('Erro ao controlar reprodução:', error);\n          updatePlayingState(false);\n        }\n      }\n    };\n\n    handlePlayback();\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [isPlaying, player, isPlayerReady]);\n\n  const handleVideoSelect = async (video: VideoData, shouldAutoplay: boolean = false) => {\n    try {\n      const videoId = extractVideoId(video.url);\n      if (!videoId) {\n        console.error('ID do vídeo não encontrado na URL:', video.url);\n        return;\n      }\n\n      setSelectedVideo(video);\n      setError('');\n\n      if (player && isPlayerReady) {\n        console.log('Player existente, carregando novo vídeo');\n        try {\n          // Pausa o vídeo atual antes de carregar o novo\n          player.pauseVideo();\n          await new Promise(resolve => setTimeout(resolve, 100));\n          \n          player.loadVideoById({\n            videoId: videoId,\n            startSeconds: 0,\n            suggestedQuality: 'large'\n          });\n\n          // Pequeno delay antes de iniciar a reprodução\n          if (shouldAutoplay) {\n            setTimeout(() => {\n              try {\n                player.playVideo();\n                updatePlayingState(true);\n              } catch (e) {\n                console.error('Erro ao iniciar reprodução:', e);\n                updatePlayingState(false);\n              }\n            }, 200);\n          }\n        } catch (e) {\n          console.error('Erro ao carregar vídeo:', e);\n          updatePlayingState(false);\n          setError('Erro ao carregar o vídeo');\n        }\n      } else {\n        console.log('Inicializando novo player');\n        try {\n          const newPlayer = await initializePlayer(videoId, shouldAutoplay);\n          if (newPlayer) {\n            setPlayer(newPlayer);\n            setIsPlayerReady(true);\n            if (shouldAutoplay) {\n              setTimeout(() => {\n                try {\n                  newPlayer.playVideo();\n                  updatePlayingState(true);\n                } catch (e) {\n                  console.error('Erro ao iniciar reprodução:', e);\n                  updatePlayingState(false);\n                }\n              }, 200);\n            }\n          }\n        } catch (error) {\n          console.error('Erro ao inicializar player:', error);\n          setError('Erro ao carregar o vídeo');\n        }\n      }\n    } catch (error) {\n      console.error('Erro ao selecionar vídeo:', error);\n      setError('Erro ao carregar o vídeo');\n    }\n  };\n\n  const handlePlayerReady = async (event: any, shouldAutoplay: boolean) => {\n    try {\n      console.log('Player pronto, shouldAutoplay:', shouldAutoplay);\n      const newPlayer = event.target as YouTubePlayer;\n      setPlayer(newPlayer);\n      setIsPlayerReady(true);\n      setError('');\n      \n      if (shouldAutoplay) {\n        // Pequeno delay antes de iniciar a reprodução\n        await new Promise(resolve => setTimeout(resolve, 200));\n        try {\n          newPlayer.playVideo();\n          updatePlayingState(true);\n        } catch (e) {\n          console.error('Erro ao iniciar reprodução:', e);\n          updatePlayingState(false);\n        }\n      }\n    } catch (error) {\n      console.error('Erro ao preparar player:', error);\n      setIsPlayerReady(false);\n      setError('Erro ao preparar o player');\n    }\n  };\n\n  const loadVideos = async () => {\n    try {\n      const data = await videoService.getRecentVideos();\n      setVideos(data);\n    } catch (error) {\n      console.error('Erro ao carregar vídeos:', error);\n    }\n  };\n\n  // Função para converter URL do YouTube em formato embed\n  const getEmbedUrl = (url: string) => {\n    console.log('URL original:', url);\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        const videoId = url.includes('youtube.com') \n          ? url.split('v=')[1]?.split('&')[0]\n          : url.split('youtu.be/')[1]?.split('?')[0];\n        \n        const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      if (url.includes('vimeo.com')) {\n        const videoId = url.split('vimeo.com/')[1]?.split('?')[0];\n        const embedUrl = `https://player.vimeo.com/video/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      return url;\n    } catch (error) {\n      console.error('Erro ao processar URL:', error);\n      return url;\n    }\n  };\n\n  // Função para extrair título do vídeo do YouTube\n  const getVideoTitle = async (url: string): Promise<string> => {\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        const videoId = url.includes('youtube.com')\n          ? url.split('v=')[1]?.split('&')[0]\n          : url.split('youtu.be/')[1]?.split('?')[0];\n        \n        const response = await fetch(\n          `https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=AIzaSyAyTc_jYQSVM_3kg95t8ai3CWckZGG0v4c&part=snippet`\n        );\n        const data = await response.json();\n        \n        if (data.error) {\n          console.error('Erro da API do YouTube:', data.error);\n          return 'Vídeo do YouTube';\n        }\n\n        return data.items[0]?.snippet?.title || 'Vídeo do YouTube';\n      }\n      \n      if (url.includes('vimeo.com')) {\n        const videoId = url.split('vimeo.com/')[1]?.split('?')[0];\n        const response = await fetch(`https://vimeo.com/api/v2/video/${videoId}.json`);\n        const data = await response.json();\n        return data[0]?.title || 'Vídeo do Vimeo';\n      }\n      \n      return 'Vídeo';\n    } catch (error) {\n      console.error('Erro ao obter título do vídeo:', error);\n      return 'Vídeo';\n    }\n  };\n\n  const handleAddVideo = async (e?: React.FormEvent) => {\n    if (e) e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    \n    if (!newVideoUrl.trim()) {\n      setError('Por favor, insira uma URL válida');\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      const embedUrl = getEmbedUrl(newVideoUrl);\n      const videoTitle = await getVideoTitle(newVideoUrl);\n      \n      const newVideo = await videoService.addVideo(embedUrl, videoTitle);\n      setVideos(prev => [newVideo, ...prev]);\n      setNewVideoUrl('');\n      setSelectedVideo(newVideo);\n    } catch (error: any) {\n      console.error('Erro detalhado:', error);\n      setError(\n        error.message || \n        error.error_description || \n        'Erro ao adicionar vídeo. Verifique se a URL é válida.'\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDelete = async (videoId: string) => {\n    try {\n      await videoService.deleteVideo(videoId);\n      setVideos(prev => prev.filter(video => video.id !== videoId));\n    } catch (error) {\n      console.error('Erro ao deletar vídeo:', error);\n    }\n  };\n\n  const handleStateChange = (event: any) => {\n    try {\n      if (!player || !isPlayerReady) return;\n\n      switch (event.data) {\n        case (window as any).YT.PlayerState.ENDED:\n          updatePlayingState(false);\n          window.dispatchEvent(new Event('externalMediaStop'));\n          onEnded?.();\n          break;\n        case (window as any).YT.PlayerState.PLAYING:\n          updatePlayingState(true);\n          window.dispatchEvent(new Event('externalMediaPlay'));\n          break;\n        case (window as any).YT.PlayerState.PAUSED:\n          updatePlayingState(false);\n          window.dispatchEvent(new Event('externalMediaStop'));\n          break;\n        default:\n          break;\n      }\n    } catch (error) {\n      console.error('Erro ao processar mudança de estado:', error);\n      updatePlayingState(false);\n    }\n  };\n\n  // Função para extrair videoId do YouTube\n  const extractVideoId = (url: string = '') => {\n    try {\n      if (!url) return '';\n      \n      let videoId = '';\n      \n      if (url.includes('youtube.com/embed/')) {\n        videoId = url.split('embed/')[1]?.split('?')[0];\n      } else if (url.includes('youtube.com/watch')) {\n        videoId = url.split('v=')[1]?.split('&')[0];\n      } else if (url.includes('youtu.be/')) {\n        videoId = url.split('youtu.be/')[1]?.split('?')[0];\n      }\n\n      console.log('Extraído videoId:', videoId, 'da URL:', url);\n      return videoId;\n    } catch (error) {\n      console.error('Erro ao extrair videoId:', error);\n      return '';\n    }\n  };\n\n  // Adicione esta função para controlar o volume do iframe com segurança\n  const setPlayerVolume = (volume: number) => {\n    try {\n      if (player && isPlayerReady) {\n        const safeVolume = Math.min(Math.max(Math.round(volume), 0), 100);\n        player.setVolume(safeVolume);\n      }\n    } catch (error) {\n      console.error('Erro ao ajustar volume:', error);\n    }\n  };\n\n  // Função para fade do volume com verificações de segurança\n  const fadeIframeVolume = (start: number, end: number, duration: number) => {\n    if (!player || !isPlayerReady) return;\n\n    try {\n      const steps = 20;\n      const stepValue = (end - start) / steps;\n      const stepDuration = duration / steps;\n      let currentStep = 0;\n\n      const fadeInterval = setInterval(() => {\n        try {\n          if (!player || !isPlayerReady) {\n            clearInterval(fadeInterval);\n            return;\n          }\n\n          currentStep++;\n          const newVolume = start + (stepValue * currentStep);\n          setPlayerVolume(newVolume * 100);\n\n          if (currentStep >= steps) {\n            clearInterval(fadeInterval);\n          }\n        } catch (error) {\n          console.error('Erro durante fade:', error);\n          clearInterval(fadeInterval);\n        }\n      }, stepDuration);\n\n      return () => clearInterval(fadeInterval);\n    } catch (error) {\n      console.error('Erro ao iniciar fade:', error);\n    }\n  };\n\n  // Efeito para lidar com eventos de áudio\n  useEffect(() => {\n    const handleAudioPlay = () => {\n      if (isPlayerReady && player) {\n        try {\n          fadeIframeVolume(1, 0.10, 500);\n        } catch (error) {\n          console.error('Erro ao diminuir volume:', error);\n        }\n      }\n    };\n\n    const handleAudioStop = () => {\n      if (isPlayerReady && player) {\n        try {\n          fadeIframeVolume(0.10, 1, 500);\n        } catch (error) {\n          console.error('Erro ao aumentar volume:', error);\n        }\n      }\n    };\n\n    window.addEventListener('audioPlay', handleAudioPlay);\n    window.addEventListener('audioStop', handleAudioStop);\n\n    return () => {\n      try {\n        window.removeEventListener('audioPlay', handleAudioPlay);\n        window.removeEventListener('audioStop', handleAudioStop);\n      } catch (error) {\n        console.error('Erro ao remover event listeners:', error);\n      }\n    };\n  }, [isPlayerReady, player]);\n\n  // Efeito para inicializar o player\n  useEffect(() => {\n    let mounted = true;\n\n    const initPlayer = async () => {\n      try {\n        if (!mounted) return;\n\n        await loadYouTubeAPI();\n        const newPlayer = await initializePlayer(videoId, shouldAutoplay);\n        \n        if (mounted && newPlayer) {\n          setPlayer(newPlayer as YouTubePlayer);\n          setIsPlayerReady(true);\n        }\n      } catch (error) {\n        console.error('Erro ao inicializar player:', error);\n        if (mounted) {\n          setError('Erro ao carregar o player de vídeo');\n          setIsPlayerReady(false);\n        }\n      }\n    };\n\n    initPlayer();\n\n    return () => {\n      mounted = false;\n      if (player) {\n        try {\n          player.destroy();\n        } catch (error) {\n          console.error('Erro ao destruir player:', error);\n        }\n      }\n    };\n  }, [videoId]);\n\n  // Adicione este useEffect para escutar eventos de áudio\n  useEffect(() => {\n    const handleAudioPlay = () => {\n      if (isPlayerReady) {\n        fadeIframeVolume(1, 0.10, 500);\n      }\n    };\n\n    const handleAudioStop = () => {\n      if (isPlayerReady) {\n        fadeIframeVolume(0.10, 1, 500);\n      }\n    };\n\n    window.addEventListener('audioPlay', handleAudioPlay);\n    window.addEventListener('audioStop', handleAudioStop);\n\n    return () => {\n      window.removeEventListener('audioPlay', handleAudioPlay);\n      window.removeEventListener('audioStop', handleAudioStop);\n    };\n  }, [isPlayerReady]);\n\n  // Adicione este useEffect para monitorar mudanças no selectedVideo\n  useEffect(() => {\n    if (selectedVideo) {\n      const videoId = extractVideoId(selectedVideo.url);\n      if (videoId) {\n        console.log('Detectada mudança no selectedVideo, iniciando com autoplay');\n        handleVideoSelect(selectedVideo, true);\n      }\n    }\n  }, [selectedVideo]);\n\n  return (\n    <div className=\"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\">\n      {/* Formulário de busca */}\n      <form onSubmit={handleAddVideo} className=\"mb-3\">\n        <div className=\"flex flex-col gap-2\">\n          <input\n            type=\"url\"\n            value={newVideoUrl}\n            onChange={(e) => setNewVideoUrl(e.target.value)}\n            placeholder=\"Cole a URL do YouTube ou Vimeo aqui\"\n            className=\"w-full bg-[#2d2d2d] border border-[#404040] text-gray-200 rounded px-3 py-2 focus:border-[#e1aa1e] focus:outline-none\"\n            disabled={isLoading}\n          />\n          {error && <p className=\"text-red-400 text-sm\">{error}</p>}\n        </div>\n      </form>\n\n      {/* Botões de ação */}\n      <div className=\"flex gap-2 mb-3\">\n        <button\n          type=\"button\"\n          onClick={() => handleAddVideo()}\n          className={`flex-1 ${\n            isLoading \n              ? 'bg-[#e1aa1e]/50 cursor-not-allowed' \n              : 'bg-[#e1aa1e] hover:bg-[#e1aa1e]/80'\n          } text-gray-900 px-3 py-1.5 rounded transition-colors flex items-center justify-center gap-2`}\n          disabled={isLoading}\n        >\n          <svg\n            className=\"w-4 h-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M12 4v16m8-8H4\"\n            />\n          </svg>\n          {isLoading ? 'Adicionando...' : 'Buscar Vídeo'}\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsSidebarOpen(true)}\n          className=\"flex-1 bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-3 py-1.5 rounded flex items-center justify-center gap-2 transition-colors\"\n        >\n          <svg\n            className=\"w-4 h-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M4 6h16M4 12h16M4 18h16\"\n            />\n          </svg>\n          Últimos Vídeos\n        </button>\n      </div>\n\n      {/* Área do vídeo */}\n      <div>\n        <div className=\"rounded-lg overflow-hidden border border-[#404040]\">\n          <div className=\"relative pt-[56.25%]\">\n            <div\n              id=\"youtube-player\"\n              className=\"absolute top-0 left-0 w-full h-full\"\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Menu lateral */}\n      <VideoSidebar\n        isOpen={isSidebarOpen}\n        onClose={() => setIsSidebarOpen(false)}\n        videos={videos}\n        onVideoSelect={handleVideoSelect}\n        setIsPlaying={setIsPlaying}\n      />\n    </div>\n  );\n};\n\nexport default VideoPlayer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}