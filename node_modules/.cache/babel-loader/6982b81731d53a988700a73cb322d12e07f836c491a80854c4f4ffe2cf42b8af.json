{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genil\\\\Desktop\\\\Dev Sistema academia\\\\src\\\\components\\\\VideoPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { videoService } from '../lib/supabase';\nimport VideoSidebar from './VideoSidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VideoPlayer = ({\n  videoId,\n  onEnded,\n  autoplay = false,\n  isPlaying = false,\n  setIsPlaying = () => {}\n}) => {\n  _s();\n  var _videos$3;\n  const opts = {\n    height: '100%',\n    width: '100%',\n    playerVars: {\n      autoplay: autoplay ? 1 : 0,\n      controls: 1,\n      rel: 0\n    }\n  };\n  const [videos, setVideos] = useState([]);\n  const [newVideoUrl, setNewVideoUrl] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [player, setPlayer] = useState(null);\n  const [isPlayerReady, setIsPlayerReady] = useState(false);\n  const [localIsPlaying, setLocalIsPlaying] = useState(isPlaying);\n  useEffect(() => {\n    setLocalIsPlaying(isPlaying);\n  }, [isPlaying]);\n  const updatePlayingState = state => {\n    setLocalIsPlaying(state);\n    setIsPlaying(state);\n  };\n  useEffect(() => {\n    loadVideos();\n  }, []);\n  const loadYouTubeAPI = () => {\n    return new Promise(resolve => {\n      var _firstScriptTag$paren;\n      const existingScript = document.querySelector('script[src=\"https://www.youtube.com/iframe_api\"]');\n      if (existingScript) {\n        if (window.YT && window.YT.Player) {\n          resolve();\n          return;\n        }\n      }\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n      tag.async = true;\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      (_firstScriptTag$paren = firstScriptTag.parentNode) === null || _firstScriptTag$paren === void 0 ? void 0 : _firstScriptTag$paren.insertBefore(tag, firstScriptTag);\n      window.onYouTubeIframeAPIReady = () => {\n        resolve();\n      };\n    });\n  };\n  const initializePlayer = async videoId => {\n    try {\n      var _YT, _videos$;\n      await loadYouTubeAPI();\n      if (!((_YT = window.YT) !== null && _YT !== void 0 && _YT.Player)) return;\n      if (player) {\n        player.destroy();\n        setPlayer(null);\n      }\n      const playerContainer = document.getElementById('youtube-player');\n      if (!playerContainer) return;\n      while (playerContainer.firstChild) {\n        playerContainer.removeChild(playerContainer.firstChild);\n      }\n      const currentVideoId = videoId || extractVideoId((selectedVideo === null || selectedVideo === void 0 ? void 0 : selectedVideo.url) || ((_videos$ = videos[0]) === null || _videos$ === void 0 ? void 0 : _videos$.url));\n      const newPlayer = new window.YT.Player('youtube-player', {\n        videoId: currentVideoId,\n        height: '100%',\n        width: '100%',\n        events: {\n          onReady: handlePlayerReady,\n          onStateChange: handleStateChange,\n          onError: error => {\n            console.error('Erro do player:', error);\n          }\n        },\n        playerVars: {\n          enablejsapi: 1,\n          origin: window.location.origin,\n          widget_referrer: window.location.origin,\n          playsinline: 1,\n          controls: 1,\n          rel: 0,\n          modestbranding: 1,\n          autoplay: 0\n        }\n      });\n      setPlayer(newPlayer);\n    } catch (error) {\n      console.error('Erro ao inicializar player:', error);\n    }\n  };\n  useEffect(() => {\n    if (selectedVideo || videos[0]) {\n      var _videos$2;\n      const videoId = extractVideoId((selectedVideo === null || selectedVideo === void 0 ? void 0 : selectedVideo.url) || ((_videos$2 = videos[0]) === null || _videos$2 === void 0 ? void 0 : _videos$2.url));\n      if (videoId) {\n        initializePlayer(videoId);\n      }\n    }\n    return () => {\n      if (player) {\n        try {\n          player.destroy();\n          setPlayer(null);\n          setIsPlayerReady(false);\n        } catch (error) {\n          console.error('Erro ao destruir player:', error);\n        }\n      }\n    };\n  }, [selectedVideo === null || selectedVideo === void 0 ? void 0 : selectedVideo.url, (_videos$3 = videos[0]) === null || _videos$3 === void 0 ? void 0 : _videos$3.url]);\n  const loadVideos = async () => {\n    try {\n      const data = await videoService.getRecentVideos();\n      setVideos(data);\n    } catch (error) {\n      console.error('Erro ao carregar vídeos:', error);\n    }\n  };\n\n  // Função para converter URL do YouTube em formato embed\n  const getEmbedUrl = url => {\n    console.log('URL original:', url);\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        var _url$split$, _url$split$2;\n        const videoId = url.includes('youtube.com') ? (_url$split$ = url.split('v=')[1]) === null || _url$split$ === void 0 ? void 0 : _url$split$.split('&')[0] : (_url$split$2 = url.split('youtu.be/')[1]) === null || _url$split$2 === void 0 ? void 0 : _url$split$2.split('?')[0];\n        const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      if (url.includes('vimeo.com')) {\n        var _url$split$3;\n        const videoId = (_url$split$3 = url.split('vimeo.com/')[1]) === null || _url$split$3 === void 0 ? void 0 : _url$split$3.split('?')[0];\n        const embedUrl = `https://player.vimeo.com/video/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      return url;\n    } catch (error) {\n      console.error('Erro ao processar URL:', error);\n      return url;\n    }\n  };\n\n  // Função para extrair título do vídeo do YouTube\n  const getVideoTitle = async url => {\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        var _url$split$4, _url$split$5, _data$items$, _data$items$$snippet;\n        const videoId = url.includes('youtube.com') ? (_url$split$4 = url.split('v=')[1]) === null || _url$split$4 === void 0 ? void 0 : _url$split$4.split('&')[0] : (_url$split$5 = url.split('youtu.be/')[1]) === null || _url$split$5 === void 0 ? void 0 : _url$split$5.split('?')[0];\n        const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=AIzaSyAyTc_jYQSVM_3kg95t8ai3CWckZGG0v4c&part=snippet`);\n        const data = await response.json();\n        if (data.error) {\n          console.error('Erro da API do YouTube:', data.error);\n          return 'Vídeo do YouTube';\n        }\n        return ((_data$items$ = data.items[0]) === null || _data$items$ === void 0 ? void 0 : (_data$items$$snippet = _data$items$.snippet) === null || _data$items$$snippet === void 0 ? void 0 : _data$items$$snippet.title) || 'Vídeo do YouTube';\n      }\n      if (url.includes('vimeo.com')) {\n        var _url$split$6, _data$;\n        const videoId = (_url$split$6 = url.split('vimeo.com/')[1]) === null || _url$split$6 === void 0 ? void 0 : _url$split$6.split('?')[0];\n        const response = await fetch(`https://vimeo.com/api/v2/video/${videoId}.json`);\n        const data = await response.json();\n        return ((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.title) || 'Vídeo do Vimeo';\n      }\n      return 'Vídeo';\n    } catch (error) {\n      console.error('Erro ao obter título do vídeo:', error);\n      return 'Vídeo';\n    }\n  };\n  const handleAddVideo = async e => {\n    if (e) e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    if (!newVideoUrl.trim()) {\n      setError('Por favor, insira uma URL válida');\n      setIsLoading(false);\n      return;\n    }\n    try {\n      const embedUrl = getEmbedUrl(newVideoUrl);\n      const videoTitle = await getVideoTitle(newVideoUrl);\n      const newVideo = await videoService.addVideo(embedUrl, videoTitle);\n      setVideos(prev => [newVideo, ...prev]);\n      setNewVideoUrl('');\n      setSelectedVideo(newVideo);\n    } catch (error) {\n      console.error('Erro detalhado:', error);\n      setError(error.message || error.error_description || 'Erro ao adicionar vídeo. Verifique se a URL é válida.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDelete = async videoId => {\n    try {\n      await videoService.deleteVideo(videoId);\n      setVideos(prev => prev.filter(video => video.id !== videoId));\n    } catch (error) {\n      console.error('Erro ao deletar vídeo:', error);\n    }\n  };\n  const handleVideoSelect = async (video, shouldAutoplay = false) => {\n    setSelectedVideo(video);\n    setIsSidebarOpen(false);\n    const videoId = extractVideoId(video.url);\n    if (player && isPlayerReady) {\n      player.loadVideoById({\n        videoId: videoId,\n        startSeconds: 0,\n        suggestedQuality: 'large'\n      });\n      if (shouldAutoplay) {\n        updatePlayingState(true);\n        player.playVideo();\n      }\n    } else {\n      await initializePlayer(videoId);\n      if (shouldAutoplay && player) {\n        updatePlayingState(true);\n        player.playVideo();\n      }\n    }\n  };\n  const handlePlayerReady = event => {\n    console.log('Player pronto');\n    setPlayer(event.target);\n    setIsPlayerReady(true);\n    if (autoplay && localIsPlaying) {\n      console.log('Iniciando reprodução automática');\n      event.target.playVideo();\n    }\n  };\n  const handleStateChange = event => {\n    if (event.data === 0) {\n      // vídeo terminou\n      updatePlayingState(false);\n      window.dispatchEvent(new Event('externalMediaStop'));\n      onEnded === null || onEnded === void 0 ? void 0 : onEnded();\n    } else if (event.data === 1) {\n      // vídeo começou a tocar\n      updatePlayingState(true);\n      window.dispatchEvent(new Event('externalMediaPlay'));\n    } else if (event.data === 2) {\n      // vídeo foi pausado\n      updatePlayingState(false);\n      window.dispatchEvent(new Event('externalMediaStop'));\n    }\n  };\n\n  // Função para extrair videoId do YouTube\n  const extractVideoId = (url = '') => {\n    try {\n      if (!url) return '';\n      let videoId = '';\n      if (url.includes('youtube.com/embed/')) {\n        var _url$split$7;\n        videoId = (_url$split$7 = url.split('embed/')[1]) === null || _url$split$7 === void 0 ? void 0 : _url$split$7.split('?')[0];\n      } else if (url.includes('youtube.com/watch')) {\n        var _url$split$8;\n        videoId = (_url$split$8 = url.split('v=')[1]) === null || _url$split$8 === void 0 ? void 0 : _url$split$8.split('&')[0];\n      } else if (url.includes('youtu.be/')) {\n        var _url$split$9;\n        videoId = (_url$split$9 = url.split('youtu.be/')[1]) === null || _url$split$9 === void 0 ? void 0 : _url$split$9.split('?')[0];\n      }\n      console.log('Extraído videoId:', videoId, 'da URL:', url);\n      return videoId;\n    } catch (error) {\n      console.error('Erro ao extrair videoId:', error);\n      return '';\n    }\n  };\n\n  // Adicione esta função para controlar o fade do volume do iframe\n  const fadeIframeVolume = (start, end, duration) => {\n    if (!player || !isPlayerReady) return;\n    const steps = 20;\n    const stepValue = (end - start) / steps;\n    const stepDuration = duration / steps;\n    let currentStep = 0;\n    const fadeInterval = setInterval(() => {\n      currentStep++;\n      const newVolume = start + stepValue * currentStep;\n      const volume = Math.min(Math.max(newVolume, 0), 1) * 100;\n      player.setVolume(volume);\n      if (currentStep >= steps) {\n        clearInterval(fadeInterval);\n      }\n    }, stepDuration);\n  };\n\n  // Adicione este useEffect para escutar eventos de áudio\n  useEffect(() => {\n    const handleAudioPlay = () => {\n      if (isPlayerReady) {\n        fadeIframeVolume(1, 0.10, 500);\n      }\n    };\n    const handleAudioStop = () => {\n      if (isPlayerReady) {\n        fadeIframeVolume(0.10, 1, 500);\n      }\n    };\n    window.addEventListener('audioPlay', handleAudioPlay);\n    window.addEventListener('audioStop', handleAudioStop);\n    return () => {\n      window.removeEventListener('audioPlay', handleAudioPlay);\n      window.removeEventListener('audioStop', handleAudioStop);\n    };\n  }, [isPlayerReady]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddVideo,\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          value: newVideoUrl,\n          onChange: e => setNewVideoUrl(e.target.value),\n          placeholder: \"Cole a URL do YouTube ou Vimeo aqui\",\n          className: \"w-full bg-[#2d2d2d] border border-[#404040] text-gray-200 rounded px-3 py-2 focus:border-[#e1aa1e] focus:outline-none\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-400 text-sm\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleAddVideo(),\n        className: `flex-1 ${isLoading ? 'bg-[#e1aa1e]/50 cursor-not-allowed' : 'bg-[#e1aa1e] hover:bg-[#e1aa1e]/80'} text-gray-900 px-3 py-1.5 rounded transition-colors flex items-center justify-center gap-2`,\n        disabled: isLoading,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-4 h-4\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M12 4v16m8-8H4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), isLoading ? 'Adicionando...' : 'Buscar Vídeo']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setIsSidebarOpen(true),\n        className: \"flex-1 bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-3 py-1.5 rounded flex items-center justify-center gap-2 transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-4 h-4\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M4 6h16M4 12h16M4 18h16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), \"\\xDAltimos V\\xEDdeos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-lg overflow-hidden border border-[#404040]\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative pt-[56.25%]\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"youtube-player\",\n            className: \"absolute top-0 left-0 w-full h-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoSidebar, {\n      isOpen: isSidebarOpen,\n      onClose: () => setIsSidebarOpen(false),\n      videos: videos,\n      onVideoSelect: handleVideoSelect,\n      setIsPlaying: setIsPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 373,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"5CZ5VI5uZa5qLiwqzHHCq0odoNg=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","videoService","VideoSidebar","jsxDEV","_jsxDEV","VideoPlayer","videoId","onEnded","autoplay","isPlaying","setIsPlaying","_s","_videos$3","opts","height","width","playerVars","controls","rel","videos","setVideos","newVideoUrl","setNewVideoUrl","error","setError","isLoading","setIsLoading","isSidebarOpen","setIsSidebarOpen","selectedVideo","setSelectedVideo","player","setPlayer","isPlayerReady","setIsPlayerReady","localIsPlaying","setLocalIsPlaying","updatePlayingState","state","loadVideos","loadYouTubeAPI","Promise","resolve","_firstScriptTag$paren","existingScript","document","querySelector","window","YT","Player","tag","createElement","src","async","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","initializePlayer","_YT","_videos$","destroy","playerContainer","getElementById","firstChild","removeChild","currentVideoId","extractVideoId","url","newPlayer","events","onReady","handlePlayerReady","onStateChange","handleStateChange","onError","console","enablejsapi","origin","location","widget_referrer","playsinline","modestbranding","_videos$2","data","getRecentVideos","getEmbedUrl","log","includes","_url$split$","_url$split$2","split","embedUrl","_url$split$3","getVideoTitle","_url$split$4","_url$split$5","_data$items$","_data$items$$snippet","response","fetch","json","items","snippet","title","_url$split$6","_data$","handleAddVideo","e","preventDefault","trim","videoTitle","newVideo","addVideo","prev","message","error_description","handleDelete","deleteVideo","filter","video","id","handleVideoSelect","shouldAutoplay","loadVideoById","startSeconds","suggestedQuality","playVideo","event","target","dispatchEvent","Event","_url$split$7","_url$split$8","_url$split$9","fadeIframeVolume","start","end","duration","steps","stepValue","stepDuration","currentStep","fadeInterval","setInterval","newVolume","volume","Math","min","max","setVolume","clearInterval","handleAudioPlay","handleAudioStop","addEventListener","removeEventListener","className","children","onSubmit","type","value","onChange","placeholder","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","isOpen","onClose","onVideoSelect","_c","$RefreshReg$"],"sources":["C:/Users/genil/Desktop/Dev Sistema academia/src/components/VideoPlayer.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { videoService, VideoData } from '../lib/supabase';\nimport VideoSidebar from './VideoSidebar';\n\ninterface VideoPlayerProps {\n  videoId: string;\n  onEnded?: () => void;\n  autoplay?: boolean;\n  isPlaying?: boolean;\n  setIsPlaying?: (playing: boolean) => void;\n}\n\nexport const VideoPlayer: React.FC<VideoPlayerProps> = ({ \n  videoId, \n  onEnded,\n  autoplay = false,\n  isPlaying = false,\n  setIsPlaying = () => {}\n}) => {\n  const opts = {\n    height: '100%',\n    width: '100%',\n    playerVars: {\n      autoplay: autoplay ? 1 : 0,\n      controls: 1,\n      rel: 0,\n    },\n  };\n\n  const [videos, setVideos] = useState<VideoData[]>([]);\n  const [newVideoUrl, setNewVideoUrl] = useState('');\n  const [error, setError] = useState<string>('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [selectedVideo, setSelectedVideo] = useState<VideoData | null>(null);\n  const [player, setPlayer] = useState<any>(null);\n  const [isPlayerReady, setIsPlayerReady] = useState(false);\n  const [localIsPlaying, setLocalIsPlaying] = useState(isPlaying);\n\n  useEffect(() => {\n    setLocalIsPlaying(isPlaying);\n  }, [isPlaying]);\n\n  const updatePlayingState = (state: boolean) => {\n    setLocalIsPlaying(state);\n    setIsPlaying(state);\n  };\n\n  useEffect(() => {\n    loadVideos();\n  }, []);\n\n  const loadYouTubeAPI = () => {\n    return new Promise<void>((resolve) => {\n      const existingScript = document.querySelector('script[src=\"https://www.youtube.com/iframe_api\"]');\n      if (existingScript) {\n        if ((window as any).YT && (window as any).YT.Player) {\n          resolve();\n          return;\n        }\n      }\n\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n      tag.async = true;\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode?.insertBefore(tag, firstScriptTag);\n\n      (window as any).onYouTubeIframeAPIReady = () => {\n        resolve();\n      };\n    });\n  };\n\n  const initializePlayer = async (videoId?: string) => {\n    try {\n      await loadYouTubeAPI();\n      \n      if (!(window as any).YT?.Player) return;\n\n      if (player) {\n        player.destroy();\n        setPlayer(null);\n      }\n\n      const playerContainer = document.getElementById('youtube-player');\n      if (!playerContainer) return;\n\n      while (playerContainer.firstChild) {\n        playerContainer.removeChild(playerContainer.firstChild);\n      }\n\n      const currentVideoId = videoId || extractVideoId(selectedVideo?.url || videos[0]?.url);\n      \n      const newPlayer = new (window as any).YT.Player('youtube-player', {\n        videoId: currentVideoId,\n        height: '100%',\n        width: '100%',\n        events: {\n          onReady: handlePlayerReady,\n          onStateChange: handleStateChange,\n          onError: (error: any) => {\n            console.error('Erro do player:', error);\n          }\n        },\n        playerVars: {\n          enablejsapi: 1,\n          origin: window.location.origin,\n          widget_referrer: window.location.origin,\n          playsinline: 1,\n          controls: 1,\n          rel: 0,\n          modestbranding: 1,\n          autoplay: 0\n        }\n      });\n\n      setPlayer(newPlayer);\n    } catch (error) {\n      console.error('Erro ao inicializar player:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedVideo || videos[0]) {\n      const videoId = extractVideoId(selectedVideo?.url || videos[0]?.url);\n      if (videoId) {\n        initializePlayer(videoId);\n      }\n    }\n\n    return () => {\n      if (player) {\n        try {\n          player.destroy();\n          setPlayer(null);\n          setIsPlayerReady(false);\n        } catch (error) {\n          console.error('Erro ao destruir player:', error);\n        }\n      }\n    };\n  }, [selectedVideo?.url, videos[0]?.url]);\n\n  const loadVideos = async () => {\n    try {\n      const data = await videoService.getRecentVideos();\n      setVideos(data);\n    } catch (error) {\n      console.error('Erro ao carregar vídeos:', error);\n    }\n  };\n\n  // Função para converter URL do YouTube em formato embed\n  const getEmbedUrl = (url: string) => {\n    console.log('URL original:', url);\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        const videoId = url.includes('youtube.com') \n          ? url.split('v=')[1]?.split('&')[0]\n          : url.split('youtu.be/')[1]?.split('?')[0];\n        \n        const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      if (url.includes('vimeo.com')) {\n        const videoId = url.split('vimeo.com/')[1]?.split('?')[0];\n        const embedUrl = `https://player.vimeo.com/video/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      return url;\n    } catch (error) {\n      console.error('Erro ao processar URL:', error);\n      return url;\n    }\n  };\n\n  // Função para extrair título do vídeo do YouTube\n  const getVideoTitle = async (url: string): Promise<string> => {\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        const videoId = url.includes('youtube.com')\n          ? url.split('v=')[1]?.split('&')[0]\n          : url.split('youtu.be/')[1]?.split('?')[0];\n        \n        const response = await fetch(\n          `https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=AIzaSyAyTc_jYQSVM_3kg95t8ai3CWckZGG0v4c&part=snippet`\n        );\n        const data = await response.json();\n        \n        if (data.error) {\n          console.error('Erro da API do YouTube:', data.error);\n          return 'Vídeo do YouTube';\n        }\n\n        return data.items[0]?.snippet?.title || 'Vídeo do YouTube';\n      }\n      \n      if (url.includes('vimeo.com')) {\n        const videoId = url.split('vimeo.com/')[1]?.split('?')[0];\n        const response = await fetch(`https://vimeo.com/api/v2/video/${videoId}.json`);\n        const data = await response.json();\n        return data[0]?.title || 'Vídeo do Vimeo';\n      }\n      \n      return 'Vídeo';\n    } catch (error) {\n      console.error('Erro ao obter título do vídeo:', error);\n      return 'Vídeo';\n    }\n  };\n\n  const handleAddVideo = async (e?: React.FormEvent) => {\n    if (e) e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    \n    if (!newVideoUrl.trim()) {\n      setError('Por favor, insira uma URL válida');\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      const embedUrl = getEmbedUrl(newVideoUrl);\n      const videoTitle = await getVideoTitle(newVideoUrl);\n      \n      const newVideo = await videoService.addVideo(embedUrl, videoTitle);\n      setVideos(prev => [newVideo, ...prev]);\n      setNewVideoUrl('');\n      setSelectedVideo(newVideo);\n    } catch (error: any) {\n      console.error('Erro detalhado:', error);\n      setError(\n        error.message || \n        error.error_description || \n        'Erro ao adicionar vídeo. Verifique se a URL é válida.'\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDelete = async (videoId: string) => {\n    try {\n      await videoService.deleteVideo(videoId);\n      setVideos(prev => prev.filter(video => video.id !== videoId));\n    } catch (error) {\n      console.error('Erro ao deletar vídeo:', error);\n    }\n  };\n\n  const handleVideoSelect = async (video: VideoData, shouldAutoplay: boolean = false) => {\n    setSelectedVideo(video);\n    setIsSidebarOpen(false);\n\n    const videoId = extractVideoId(video.url);\n    \n    if (player && isPlayerReady) {\n      player.loadVideoById({\n        videoId: videoId,\n        startSeconds: 0,\n        suggestedQuality: 'large'\n      });\n      if (shouldAutoplay) {\n        updatePlayingState(true);\n        player.playVideo();\n      }\n    } else {\n      await initializePlayer(videoId);\n      if (shouldAutoplay && player) {\n        updatePlayingState(true);\n        player.playVideo();\n      }\n    }\n  };\n\n  const handlePlayerReady = (event: any) => {\n    console.log('Player pronto');\n    setPlayer(event.target);\n    setIsPlayerReady(true);\n    \n    if (autoplay && localIsPlaying) {\n      console.log('Iniciando reprodução automática');\n      event.target.playVideo();\n    }\n  };\n\n  const handleStateChange = (event: any) => {\n    if (event.data === 0) { // vídeo terminou\n      updatePlayingState(false);\n      window.dispatchEvent(new Event('externalMediaStop'));\n      onEnded?.();\n    } else if (event.data === 1) { // vídeo começou a tocar\n      updatePlayingState(true);\n      window.dispatchEvent(new Event('externalMediaPlay'));\n    } else if (event.data === 2) { // vídeo foi pausado\n      updatePlayingState(false);\n      window.dispatchEvent(new Event('externalMediaStop'));\n    }\n  };\n\n  // Função para extrair videoId do YouTube\n  const extractVideoId = (url: string = '') => {\n    try {\n      if (!url) return '';\n      \n      let videoId = '';\n      \n      if (url.includes('youtube.com/embed/')) {\n        videoId = url.split('embed/')[1]?.split('?')[0];\n      } else if (url.includes('youtube.com/watch')) {\n        videoId = url.split('v=')[1]?.split('&')[0];\n      } else if (url.includes('youtu.be/')) {\n        videoId = url.split('youtu.be/')[1]?.split('?')[0];\n      }\n\n      console.log('Extraído videoId:', videoId, 'da URL:', url);\n      return videoId;\n    } catch (error) {\n      console.error('Erro ao extrair videoId:', error);\n      return '';\n    }\n  };\n\n  // Adicione esta função para controlar o fade do volume do iframe\n  const fadeIframeVolume = (start: number, end: number, duration: number) => {\n    if (!player || !isPlayerReady) return;\n\n    const steps = 20;\n    const stepValue = (end - start) / steps;\n    const stepDuration = duration / steps;\n    let currentStep = 0;\n\n    const fadeInterval = setInterval(() => {\n      currentStep++;\n      const newVolume = start + (stepValue * currentStep);\n      const volume = Math.min(Math.max(newVolume, 0), 1) * 100;\n      player.setVolume(volume);\n\n      if (currentStep >= steps) {\n        clearInterval(fadeInterval);\n      }\n    }, stepDuration);\n  };\n\n  // Adicione este useEffect para escutar eventos de áudio\n  useEffect(() => {\n    const handleAudioPlay = () => {\n      if (isPlayerReady) {\n        fadeIframeVolume(1, 0.10, 500);\n      }\n    };\n\n    const handleAudioStop = () => {\n      if (isPlayerReady) {\n        fadeIframeVolume(0.10, 1, 500);\n      }\n    };\n\n    window.addEventListener('audioPlay', handleAudioPlay);\n    window.addEventListener('audioStop', handleAudioStop);\n\n    return () => {\n      window.removeEventListener('audioPlay', handleAudioPlay);\n      window.removeEventListener('audioStop', handleAudioStop);\n    };\n  }, [isPlayerReady]);\n\n  return (\n    <div className=\"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\">\n      {/* Formulário de busca */}\n      <form onSubmit={handleAddVideo} className=\"mb-3\">\n        <div className=\"flex flex-col gap-2\">\n          <input\n            type=\"url\"\n            value={newVideoUrl}\n            onChange={(e) => setNewVideoUrl(e.target.value)}\n            placeholder=\"Cole a URL do YouTube ou Vimeo aqui\"\n            className=\"w-full bg-[#2d2d2d] border border-[#404040] text-gray-200 rounded px-3 py-2 focus:border-[#e1aa1e] focus:outline-none\"\n            disabled={isLoading}\n          />\n          {error && <p className=\"text-red-400 text-sm\">{error}</p>}\n        </div>\n      </form>\n\n      {/* Botões de ação */}\n      <div className=\"flex gap-2 mb-3\">\n        <button\n          type=\"button\"\n          onClick={() => handleAddVideo()}\n          className={`flex-1 ${\n            isLoading \n              ? 'bg-[#e1aa1e]/50 cursor-not-allowed' \n              : 'bg-[#e1aa1e] hover:bg-[#e1aa1e]/80'\n          } text-gray-900 px-3 py-1.5 rounded transition-colors flex items-center justify-center gap-2`}\n          disabled={isLoading}\n        >\n          <svg\n            className=\"w-4 h-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M12 4v16m8-8H4\"\n            />\n          </svg>\n          {isLoading ? 'Adicionando...' : 'Buscar Vídeo'}\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsSidebarOpen(true)}\n          className=\"flex-1 bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-3 py-1.5 rounded flex items-center justify-center gap-2 transition-colors\"\n        >\n          <svg\n            className=\"w-4 h-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M4 6h16M4 12h16M4 18h16\"\n            />\n          </svg>\n          Últimos Vídeos\n        </button>\n      </div>\n\n      {/* Área do vídeo */}\n      <div>\n        <div className=\"rounded-lg overflow-hidden border border-[#404040]\">\n          <div className=\"relative pt-[56.25%]\">\n            <div\n              id=\"youtube-player\"\n              className=\"absolute top-0 left-0 w-full h-full\"\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Menu lateral */}\n      <VideoSidebar\n        isOpen={isSidebarOpen}\n        onClose={() => setIsSidebarOpen(false)}\n        videos={videos}\n        onVideoSelect={handleVideoSelect}\n        setIsPlaying={setIsPlaying}\n      />\n    </div>\n  );\n};\n\nexport default VideoPlayer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}