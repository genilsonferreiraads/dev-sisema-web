{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genil\\\\Desktop\\\\em desemvolvimento Sistema academia\\\\src\\\\components\\\\VideoPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { videoService } from '../lib/supabase';\nimport VideoSidebar from './VideoSidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VideoPlayer = ({\n  videoId,\n  onEnded,\n  autoplay = false,\n  isPlaying = false,\n  setIsPlaying = () => {},\n  shouldAutoplay = false\n}) => {\n  _s();\n  const opts = {\n    height: '100%',\n    width: '100%',\n    playerVars: {\n      autoplay: autoplay ? 1 : 0,\n      controls: 1,\n      rel: 0\n    }\n  };\n  const [videos, setVideos] = useState([]);\n  const [newVideoUrl, setNewVideoUrl] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [player, setPlayer] = useState(null);\n  const [isPlayerReady, setIsPlayerReady] = useState(false);\n  const [localIsPlaying, setLocalIsPlaying] = useState(isPlaying);\n  const [isInitializing, setIsInitializing] = useState(false);\n  const [lastPlayedVideo, setLastPlayedVideo] = useState(null);\n  const [isVideoLoading, setIsVideoLoading] = useState(false);\n  useEffect(() => {\n    setLocalIsPlaying(isPlaying);\n  }, [isPlaying]);\n  const updatePlayingState = state => {\n    setLocalIsPlaying(state);\n    setIsPlaying(state);\n  };\n  useEffect(() => {\n    loadVideos();\n  }, []);\n  const loadYouTubeAPI = () => {\n    return new Promise(resolve => {\n      var _firstScriptTag$paren;\n      const existingScript = document.querySelector('script[src=\"https://www.youtube.com/iframe_api\"]');\n      if (existingScript) {\n        if (window.YT && window.YT.Player) {\n          resolve();\n          return;\n        }\n      }\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n      tag.async = true;\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      (_firstScriptTag$paren = firstScriptTag.parentNode) === null || _firstScriptTag$paren === void 0 ? void 0 : _firstScriptTag$paren.insertBefore(tag, firstScriptTag);\n      window.onYouTubeIframeAPIReady = () => {\n        resolve();\n      };\n    });\n  };\n  const initializePlayer = async (videoId, shouldAutoplay = false) => {\n    if (isInitializing) return null;\n    setIsInitializing(true);\n    setIsVideoLoading(true);\n    try {\n      var _YT;\n      await new Promise((resolve, reject) => {\n        const timeoutId = setTimeout(() => {\n          reject(new Error('Timeout ao carregar API do YouTube'));\n        }, 10000);\n        loadYouTubeAPI().then(() => {\n          clearTimeout(timeoutId);\n          resolve();\n        }).catch(error => {\n          clearTimeout(timeoutId);\n          reject(error);\n        });\n      });\n      if (!((_YT = window.YT) !== null && _YT !== void 0 && _YT.Player)) {\n        throw new Error('API do YouTube não está disponível');\n      }\n\n      // Limpa o player existente\n      if (player) {\n        try {\n          player.destroy();\n        } catch (e) {\n          console.error('Erro ao destruir player existente:', e);\n        }\n        setPlayer(null);\n        setIsPlayerReady(false);\n      }\n      const playerContainer = document.getElementById('youtube-player');\n      if (!playerContainer) {\n        throw new Error('Container do player não encontrado');\n      }\n\n      // Limpa o container\n      while (playerContainer.firstChild) {\n        playerContainer.removeChild(playerContainer.firstChild);\n      }\n      const currentVideoId = videoId || extractVideoId((selectedVideo === null || selectedVideo === void 0 ? void 0 : selectedVideo.url) || '');\n      if (!currentVideoId) {\n        throw new Error('VideoId não encontrado');\n      }\n\n      // Cria o novo player\n      const newPlayer = new window.YT.Player('youtube-player', {\n        videoId: currentVideoId,\n        height: '100%',\n        width: '100%',\n        events: {\n          onReady: event => {\n            handlePlayerReady(event, shouldAutoplay);\n          },\n          onStateChange: handleStateChange,\n          onError: error => {\n            console.error('Erro do player:', error);\n            setError('Erro ao carregar vídeo. Por favor, tente novamente.');\n          }\n        },\n        playerVars: {\n          enablejsapi: 1,\n          origin: window.location.origin,\n          widget_referrer: window.location.origin,\n          playsinline: 1,\n          controls: 1,\n          rel: 0,\n          modestbranding: 1,\n          autoplay: shouldAutoplay ? 1 : 0\n        }\n      });\n      setPlayer(newPlayer);\n      return newPlayer;\n    } catch (error) {\n      console.error('Erro ao inicializar player:', error);\n      setError('Não foi possível inicializar o player. Por favor, tente novamente.');\n      return null;\n    } finally {\n      setIsInitializing(false);\n      setIsVideoLoading(false);\n    }\n  };\n  useEffect(() => {\n    let isSubscribed = true;\n    if (selectedVideo) {\n      const videoId = extractVideoId(selectedVideo.url);\n      if (videoId) {\n        handleVideoSelect(selectedVideo, true).catch(error => {\n          if (isSubscribed) {\n            console.error('Erro ao selecionar vídeo:', error);\n          }\n        });\n      }\n    }\n    return () => {\n      isSubscribed = false;\n      // Limpa o player se o componente for desmontado\n      if (player) {\n        try {\n          player.destroy();\n          setPlayer(null);\n          setIsPlayerReady(false);\n        } catch (error) {\n          console.error('Erro ao destruir player:', error);\n        }\n      }\n    };\n  }, [selectedVideo]);\n  const loadVideos = async () => {\n    try {\n      const data = await videoService.getRecentVideos();\n      setVideos(data);\n      if (!selectedVideo) {\n        const videoToLoad = lastPlayedVideo || data[0];\n        if (videoToLoad) {\n          setSelectedVideo(videoToLoad);\n        }\n      }\n    } catch (error) {\n      console.error('Erro ao carregar vídeos:', error);\n    }\n  };\n\n  // Função para converter URL do YouTube em formato embed\n  const getEmbedUrl = url => {\n    console.log('URL original:', url);\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        var _url$split$, _url$split$2;\n        const videoId = url.includes('youtube.com') ? (_url$split$ = url.split('v=')[1]) === null || _url$split$ === void 0 ? void 0 : _url$split$.split('&')[0] : (_url$split$2 = url.split('youtu.be/')[1]) === null || _url$split$2 === void 0 ? void 0 : _url$split$2.split('?')[0];\n        const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      if (url.includes('vimeo.com')) {\n        var _url$split$3;\n        const videoId = (_url$split$3 = url.split('vimeo.com/')[1]) === null || _url$split$3 === void 0 ? void 0 : _url$split$3.split('?')[0];\n        const embedUrl = `https://player.vimeo.com/video/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      return url;\n    } catch (error) {\n      console.error('Erro ao processar URL:', error);\n      return url;\n    }\n  };\n\n  // Função para extrair título do vídeo do YouTube\n  const getVideoTitle = async url => {\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        var _url$split$4, _url$split$5, _data$items$, _data$items$$snippet;\n        const videoId = url.includes('youtube.com') ? (_url$split$4 = url.split('v=')[1]) === null || _url$split$4 === void 0 ? void 0 : _url$split$4.split('&')[0] : (_url$split$5 = url.split('youtu.be/')[1]) === null || _url$split$5 === void 0 ? void 0 : _url$split$5.split('?')[0];\n        const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=AIzaSyAyTc_jYQSVM_3kg95t8ai3CWckZGG0v4c&part=snippet`);\n        const data = await response.json();\n        if (data.error) {\n          console.error('Erro da API do YouTube:', data.error);\n          return 'Vídeo do YouTube';\n        }\n        return ((_data$items$ = data.items[0]) === null || _data$items$ === void 0 ? void 0 : (_data$items$$snippet = _data$items$.snippet) === null || _data$items$$snippet === void 0 ? void 0 : _data$items$$snippet.title) || 'Vídeo do YouTube';\n      }\n      if (url.includes('vimeo.com')) {\n        var _url$split$6, _data$;\n        const videoId = (_url$split$6 = url.split('vimeo.com/')[1]) === null || _url$split$6 === void 0 ? void 0 : _url$split$6.split('?')[0];\n        const response = await fetch(`https://vimeo.com/api/v2/video/${videoId}.json`);\n        const data = await response.json();\n        return ((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.title) || 'Vídeo do Vimeo';\n      }\n      return 'Vídeo';\n    } catch (error) {\n      console.error('Erro ao obter título do vídeo:', error);\n      return 'Vídeo';\n    }\n  };\n  const handleAddVideo = async e => {\n    if (e) e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    if (!newVideoUrl.trim()) {\n      setError('Por favor, insira uma URL válida');\n      setIsLoading(false);\n      return;\n    }\n    try {\n      const embedUrl = getEmbedUrl(newVideoUrl);\n      const videoTitle = await getVideoTitle(newVideoUrl);\n      const newVideo = await videoService.addVideo(embedUrl, videoTitle);\n      setVideos(prev => [newVideo, ...prev]);\n      setNewVideoUrl('');\n      setSelectedVideo(newVideo);\n    } catch (error) {\n      console.error('Erro detalhado:', error);\n      setError(error.message || error.error_description || 'Erro ao adicionar vídeo. Verifique se a URL é válida.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDelete = async videoId => {\n    try {\n      await videoService.deleteVideo(videoId);\n      setVideos(prev => prev.filter(video => video.id !== videoId));\n    } catch (error) {\n      console.error('Erro ao deletar vídeo:', error);\n    }\n  };\n  const handleVideoSelect = async (video, shouldAutoplay = false) => {\n    try {\n      if (isInitializing) return;\n      setIsVideoLoading(true); // Adicione feedback visual\n\n      const videoId = extractVideoId(video.url);\n      if (!videoId) {\n        throw new Error('VideoId não encontrado');\n      }\n\n      // Salva o vídeo no localStorage\n      localStorage.setItem('lastPlayedVideo', JSON.stringify(video));\n      setLastPlayedVideo(video);\n      setSelectedVideo(video); // Adicione esta linha para atualizar o vídeo selecionado\n\n      // Não dispara evento se shouldAutoplay for false\n      if (shouldAutoplay) {\n        window.dispatchEvent(new Event('videoStarting'));\n      }\n\n      // Se não houver player ou ele não estiver pronto, inicializa\n      if (!player || !isPlayerReady) {\n        await initializePlayer(videoId, shouldAutoplay);\n        return;\n      }\n\n      // Se o player existe e está pronto\n      await new Promise((resolve, reject) => {\n        let timeoutId;\n        const cleanup = () => {\n          if (timeoutId) {\n            clearTimeout(timeoutId);\n          }\n        };\n        try {\n          timeoutId = setTimeout(() => {\n            cleanup();\n            reject(new Error('Timeout ao carregar vídeo'));\n          }, 10000); // Aumenta o timeout para 10 segundos\n\n          const handleStateChange = event => {\n            if (event.data !== -1) {\n              // -1 significa não iniciado\n              cleanup();\n              player.removeEventListener('onStateChange', handleStateChange);\n              if (shouldAutoplay) {\n                player.playVideo();\n                updatePlayingState(true);\n              } else {\n                player.pauseVideo();\n                updatePlayingState(false);\n              }\n              resolve();\n            }\n          };\n          player.addEventListener('onStateChange', handleStateChange);\n\n          // Usa cueVideoById para carregar sem reproduzir automaticamente\n          if (shouldAutoplay) {\n            player.loadVideoById({\n              videoId: videoId,\n              startSeconds: 0,\n              suggestedQuality: 'large'\n            });\n          } else {\n            player.cueVideoById({\n              videoId: videoId,\n              startSeconds: 0,\n              suggestedQuality: 'large'\n            });\n          }\n        } catch (e) {\n          cleanup();\n          reject(e);\n        }\n      });\n    } catch (error) {\n      console.error('Erro em handleVideoSelect:', error);\n      setError('Não foi possível reproduzir o vídeo. Por favor, tente novamente.');\n\n      // Tenta reinicializar o player após um erro\n      if (player) {\n        try {\n          player.destroy();\n        } catch (e) {\n          console.error('Erro ao destruir player:', e);\n        }\n        setPlayer(null);\n        setIsPlayerReady(false);\n        setTimeout(() => {\n          initializePlayer(videoId, shouldAutoplay);\n        }, 1000);\n      }\n    } finally {\n      setIsVideoLoading(false);\n    }\n  };\n  const handlePlayerReady = (event, shouldAutoplay = false) => {\n    try {\n      const newPlayer = event.target;\n      setPlayer(newPlayer);\n      setIsPlayerReady(true);\n      if (shouldAutoplay) {\n        newPlayer.playVideo();\n        updatePlayingState(true);\n      } else {\n        newPlayer.pauseVideo();\n        updatePlayingState(false);\n      }\n    } catch (error) {\n      console.error('Erro em handlePlayerReady:', error);\n    }\n  };\n  const handleStateChange = event => {\n    try {\n      if (event.data === 0) {\n        // vídeo terminou\n        updatePlayingState(false);\n        window.dispatchEvent(new Event('externalMediaStop'));\n        onEnded === null || onEnded === void 0 ? void 0 : onEnded();\n      } else if (event.data === 1) {\n        // vídeo começou a tocar\n        // Não dispara evento se o vídeo está sendo carregado inicialmente\n        if (!isInitializing) {\n          updatePlayingState(true);\n          window.dispatchEvent(new Event('externalMediaPlay'));\n        }\n      } else if (event.data === 2) {\n        // vídeo foi pausado\n        updatePlayingState(false);\n        window.dispatchEvent(new Event('externalMediaStop'));\n      } else if (event.data === -1) {\n        // vídeo não iniciado\n        updatePlayingState(false);\n      } else if (event.data === 3) {// vídeo bufferizando\n        // Mantém o estado atual\n      }\n    } catch (error) {\n      console.error('Erro no handleStateChange:', error);\n    }\n  };\n\n  // Função para extrair videoId do YouTube\n  const extractVideoId = (url = '') => {\n    try {\n      if (!url) return '';\n      let videoId = '';\n      if (url.includes('youtube.com/embed/')) {\n        var _url$split$7;\n        videoId = (_url$split$7 = url.split('embed/')[1]) === null || _url$split$7 === void 0 ? void 0 : _url$split$7.split('?')[0];\n      } else if (url.includes('youtube.com/watch')) {\n        var _url$split$8;\n        videoId = (_url$split$8 = url.split('v=')[1]) === null || _url$split$8 === void 0 ? void 0 : _url$split$8.split('&')[0];\n      } else if (url.includes('youtu.be/')) {\n        var _url$split$9;\n        videoId = (_url$split$9 = url.split('youtu.be/')[1]) === null || _url$split$9 === void 0 ? void 0 : _url$split$9.split('?')[0];\n      }\n      console.log('Extraído videoId:', videoId, 'da URL:', url);\n      return videoId;\n    } catch (error) {\n      console.error('Erro ao extrair videoId:', error);\n      return '';\n    }\n  };\n\n  // Adicione esta função para controlar o fade do volume do iframe\n  const fadeIframeVolume = (start, end, duration) => {\n    if (!player || !isPlayerReady) return undefined;\n    try {\n      // Verifica se o player ainda está válido\n      if (typeof player.getPlayerState !== 'function') {\n        return undefined;\n      }\n      const steps = 20;\n      const stepValue = (end - start) / steps;\n      const stepDuration = duration / steps;\n      let currentStep = 0;\n      const interval = setInterval(() => {\n        try {\n          if (!player || typeof player.getPlayerState !== 'function') {\n            clearInterval(interval);\n            return;\n          }\n          currentStep++;\n          const newVolume = start + stepValue * currentStep;\n          const volume = Math.min(Math.max(newVolume, 0), 1) * 100;\n          if (player && typeof player.setVolume === 'function') {\n            player.setVolume(volume);\n          }\n          if (currentStep >= steps) {\n            clearInterval(interval);\n          }\n        } catch (error) {\n          console.error('Erro durante fade:', error);\n          clearInterval(interval);\n        }\n      }, stepDuration);\n      return interval;\n    } catch (error) {\n      console.error('Erro ao iniciar fade:', error);\n      return undefined;\n    }\n  };\n\n  // Modifique o useEffect que escuta eventos de áudio\n  useEffect(() => {\n    let fadeInterval = null;\n    const handleAudioPlay = () => {\n      try {\n        if (isPlayerReady && player) {\n          if (fadeInterval) {\n            clearInterval(fadeInterval);\n          }\n          const newInterval = fadeIframeVolume(1, 0.10, 500);\n          if (newInterval) {\n            fadeInterval = newInterval;\n          }\n        }\n      } catch (error) {\n        console.error('Erro no handleAudioPlay:', error);\n      }\n    };\n    const handleAudioStop = () => {\n      try {\n        if (isPlayerReady && player) {\n          if (fadeInterval) {\n            clearInterval(fadeInterval);\n          }\n          const newInterval = fadeIframeVolume(0.10, 1, 500);\n          if (newInterval) {\n            fadeInterval = newInterval;\n          }\n        }\n      } catch (error) {\n        console.error('Erro no handleAudioStop:', error);\n      }\n    };\n    window.addEventListener('audioPlay', handleAudioPlay);\n    window.addEventListener('audioStop', handleAudioStop);\n    return () => {\n      window.removeEventListener('audioPlay', handleAudioPlay);\n      window.removeEventListener('audioStop', handleAudioStop);\n      if (fadeInterval) {\n        clearInterval(fadeInterval);\n      }\n    };\n  }, [isPlayerReady, player]);\n\n  // Adicione este useEffect para monitorar mudanças no selectedVideo\n  useEffect(() => {\n    if (selectedVideo) {\n      const videoId = extractVideoId(selectedVideo.url);\n      if (videoId) {\n        console.log('Detectada mudança no selectedVideo, iniciando com autoplay');\n        handleVideoSelect(selectedVideo, true);\n      }\n    }\n  }, [selectedVideo]);\n\n  // Adicione este useEffect para lidar com erros de rede\n  useEffect(() => {\n    const handleOnline = () => {\n      if (selectedVideo) {\n        initializePlayer(extractVideoId(selectedVideo.url), true);\n      }\n    };\n    window.addEventListener('online', handleOnline);\n    return () => window.removeEventListener('online', handleOnline);\n  }, [selectedVideo]);\n\n  // Adicione este useEffect para controlar play/pause\n  useEffect(() => {\n    if (player && isPlayerReady) {\n      try {\n        if (isPlaying) {\n          player.playVideo();\n        } else {\n          player.pauseVideo();\n        }\n      } catch (error) {\n        console.error('Erro ao controlar play/pause:', error);\n      }\n    }\n  }, [isPlaying, player, isPlayerReady]);\n\n  // Adicione este useEffect para persistir o último vídeo\n  useEffect(() => {\n    // Carrega o último vídeo do localStorage ao montar o componente\n    const savedVideo = localStorage.getItem('lastPlayedVideo');\n    if (savedVideo) {\n      try {\n        const video = JSON.parse(savedVideo);\n        setLastPlayedVideo(video);\n        setSelectedVideo(video);\n      } catch (error) {\n        console.error('Erro ao carregar último vídeo:', error);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddVideo,\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          value: newVideoUrl,\n          onChange: e => setNewVideoUrl(e.target.value),\n          placeholder: \"Cole a URL do YouTube ou Vimeo aqui\",\n          className: \"w-full bg-[#2d2d2d] border border-[#404040] text-gray-200 rounded px-3 py-2 focus:border-[#e1aa1e] focus:outline-none\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-400 text-sm\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleAddVideo(),\n        className: `flex-1 ${isLoading ? 'bg-[#e1aa1e]/50 cursor-not-allowed' : 'bg-[#e1aa1e] hover:bg-[#e1aa1e]/80'} text-gray-900 px-3 py-1.5 rounded transition-colors flex items-center justify-center gap-2`,\n        disabled: isLoading,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-4 h-4\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M12 4v16m8-8H4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 11\n        }, this), isLoading ? 'Adicionando...' : 'Buscar Vídeo']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setIsSidebarOpen(true),\n        className: \"flex-1 bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-3 py-1.5 rounded flex items-center justify-center gap-2 transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-4 h-4\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M4 6h16M4 12h16M4 18h16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 11\n        }, this), \"\\xDAltimos V\\xEDdeos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-lg overflow-hidden border border-[#404040]\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative pt-[56.25%]\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"youtube-player\",\n            className: \"absolute top-0 left-0 w-full h-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 9\n      }, this), (isInitializing || isVideoLoading) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-[#e1aa1e] animate-pulse\",\n          children: \"Carregando v\\xEDdeo...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoSidebar, {\n      isOpen: isSidebarOpen,\n      onClose: () => setIsSidebarOpen(false),\n      videos: videos,\n      onVideoSelect: handleVideoSelect,\n      setIsPlaying: setIsPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 635,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"g29vOVBUxYdrv9X0JEh3YXYkE4M=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","videoService","VideoSidebar","jsxDEV","_jsxDEV","VideoPlayer","videoId","onEnded","autoplay","isPlaying","setIsPlaying","shouldAutoplay","_s","opts","height","width","playerVars","controls","rel","videos","setVideos","newVideoUrl","setNewVideoUrl","error","setError","isLoading","setIsLoading","isSidebarOpen","setIsSidebarOpen","selectedVideo","setSelectedVideo","player","setPlayer","isPlayerReady","setIsPlayerReady","localIsPlaying","setLocalIsPlaying","isInitializing","setIsInitializing","lastPlayedVideo","setLastPlayedVideo","isVideoLoading","setIsVideoLoading","updatePlayingState","state","loadVideos","loadYouTubeAPI","Promise","resolve","_firstScriptTag$paren","existingScript","document","querySelector","window","YT","Player","tag","createElement","src","async","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","initializePlayer","_YT","reject","timeoutId","setTimeout","Error","then","clearTimeout","catch","destroy","e","console","playerContainer","getElementById","firstChild","removeChild","currentVideoId","extractVideoId","url","newPlayer","events","onReady","event","handlePlayerReady","onStateChange","handleStateChange","onError","enablejsapi","origin","location","widget_referrer","playsinline","modestbranding","isSubscribed","handleVideoSelect","data","getRecentVideos","videoToLoad","getEmbedUrl","log","includes","_url$split$","_url$split$2","split","embedUrl","_url$split$3","getVideoTitle","_url$split$4","_url$split$5","_data$items$","_data$items$$snippet","response","fetch","json","items","snippet","title","_url$split$6","_data$","handleAddVideo","preventDefault","trim","videoTitle","newVideo","addVideo","prev","message","error_description","handleDelete","deleteVideo","filter","video","id","localStorage","setItem","JSON","stringify","dispatchEvent","Event","cleanup","removeEventListener","playVideo","pauseVideo","addEventListener","loadVideoById","startSeconds","suggestedQuality","cueVideoById","target","_url$split$7","_url$split$8","_url$split$9","fadeIframeVolume","start","end","duration","undefined","getPlayerState","steps","stepValue","stepDuration","currentStep","interval","setInterval","clearInterval","newVolume","volume","Math","min","max","setVolume","fadeInterval","handleAudioPlay","newInterval","handleAudioStop","handleOnline","savedVideo","getItem","parse","className","children","onSubmit","type","value","onChange","placeholder","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","isOpen","onClose","onVideoSelect","_c","$RefreshReg$"],"sources":["C:/Users/genil/Desktop/em desemvolvimento Sistema academia/src/components/VideoPlayer.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { videoService, VideoData } from '../lib/supabase';\nimport VideoSidebar from './VideoSidebar';\n\ninterface VideoPlayerProps {\n  videoId: string;\n  onEnded?: () => void;\n  autoplay?: boolean;\n  isPlaying?: boolean;\n  setIsPlaying?: (playing: boolean) => void;\n  shouldAutoplay?: boolean;\n}\n\nexport const VideoPlayer: React.FC<VideoPlayerProps> = ({ \n  videoId, \n  onEnded,\n  autoplay = false,\n  isPlaying = false,\n  setIsPlaying = () => {},\n  shouldAutoplay = false\n}) => {\n  const opts = {\n    height: '100%',\n    width: '100%',\n    playerVars: {\n      autoplay: autoplay ? 1 : 0,\n      controls: 1,\n      rel: 0,\n    },\n  };\n\n  const [videos, setVideos] = useState<VideoData[]>([]);\n  const [newVideoUrl, setNewVideoUrl] = useState('');\n  const [error, setError] = useState<string>('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [selectedVideo, setSelectedVideo] = useState<VideoData | null>(null);\n  const [player, setPlayer] = useState<any>(null);\n  const [isPlayerReady, setIsPlayerReady] = useState(false);\n  const [localIsPlaying, setLocalIsPlaying] = useState(isPlaying);\n  const [isInitializing, setIsInitializing] = useState(false);\n  const [lastPlayedVideo, setLastPlayedVideo] = useState<VideoData | null>(null);\n  const [isVideoLoading, setIsVideoLoading] = useState(false);\n\n  useEffect(() => {\n    setLocalIsPlaying(isPlaying);\n  }, [isPlaying]);\n\n  const updatePlayingState = (state: boolean) => {\n    setLocalIsPlaying(state);\n    setIsPlaying(state);\n  };\n\n  useEffect(() => {\n    loadVideos();\n  }, []);\n\n  const loadYouTubeAPI = () => {\n    return new Promise<void>((resolve) => {\n      const existingScript = document.querySelector('script[src=\"https://www.youtube.com/iframe_api\"]');\n      if (existingScript) {\n        if ((window as any).YT && (window as any).YT.Player) {\n          resolve();\n          return;\n        }\n      }\n\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n      tag.async = true;\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode?.insertBefore(tag, firstScriptTag);\n\n      (window as any).onYouTubeIframeAPIReady = () => {\n        resolve();\n      };\n    });\n  };\n\n  const initializePlayer = async (videoId?: string, shouldAutoplay: boolean = false) => {\n    if (isInitializing) return null;\n    setIsInitializing(true);\n    setIsVideoLoading(true);\n\n    try {\n      await new Promise<void>((resolve, reject) => {\n        const timeoutId = setTimeout(() => {\n          reject(new Error('Timeout ao carregar API do YouTube'));\n        }, 10000);\n\n        loadYouTubeAPI()\n          .then(() => {\n            clearTimeout(timeoutId);\n            resolve();\n          })\n          .catch((error) => {\n            clearTimeout(timeoutId);\n            reject(error);\n          });\n      });\n\n      if (!(window as any).YT?.Player) {\n        throw new Error('API do YouTube não está disponível');\n      }\n\n      // Limpa o player existente\n      if (player) {\n        try {\n          player.destroy();\n        } catch (e) {\n          console.error('Erro ao destruir player existente:', e);\n        }\n        setPlayer(null);\n        setIsPlayerReady(false);\n      }\n\n      const playerContainer = document.getElementById('youtube-player');\n      if (!playerContainer) {\n        throw new Error('Container do player não encontrado');\n      }\n\n      // Limpa o container\n      while (playerContainer.firstChild) {\n        playerContainer.removeChild(playerContainer.firstChild);\n      }\n\n      const currentVideoId = videoId || extractVideoId(selectedVideo?.url || '');\n      if (!currentVideoId) {\n        throw new Error('VideoId não encontrado');\n      }\n\n      // Cria o novo player\n      const newPlayer = new (window as any).YT.Player('youtube-player', {\n        videoId: currentVideoId,\n        height: '100%',\n        width: '100%',\n        events: {\n          onReady: (event: any) => {\n            handlePlayerReady(event, shouldAutoplay);\n          },\n          onStateChange: handleStateChange,\n          onError: (error: any) => {\n            console.error('Erro do player:', error);\n            setError('Erro ao carregar vídeo. Por favor, tente novamente.');\n          }\n        },\n        playerVars: {\n          enablejsapi: 1,\n          origin: window.location.origin,\n          widget_referrer: window.location.origin,\n          playsinline: 1,\n          controls: 1,\n          rel: 0,\n          modestbranding: 1,\n          autoplay: shouldAutoplay ? 1 : 0\n        }\n      });\n\n      setPlayer(newPlayer);\n      return newPlayer;\n\n    } catch (error) {\n      console.error('Erro ao inicializar player:', error);\n      setError('Não foi possível inicializar o player. Por favor, tente novamente.');\n      return null;\n    } finally {\n      setIsInitializing(false);\n      setIsVideoLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    let isSubscribed = true;\n\n    if (selectedVideo) {\n      const videoId = extractVideoId(selectedVideo.url);\n      if (videoId) {\n        handleVideoSelect(selectedVideo, true).catch(error => {\n          if (isSubscribed) {\n            console.error('Erro ao selecionar vídeo:', error);\n          }\n        });\n      }\n    }\n\n    return () => {\n      isSubscribed = false;\n      // Limpa o player se o componente for desmontado\n      if (player) {\n        try {\n          player.destroy();\n          setPlayer(null);\n          setIsPlayerReady(false);\n        } catch (error) {\n          console.error('Erro ao destruir player:', error);\n        }\n      }\n    };\n  }, [selectedVideo]);\n\n  const loadVideos = async () => {\n    try {\n      const data = await videoService.getRecentVideos();\n      setVideos(data);\n\n      if (!selectedVideo) {\n        const videoToLoad = lastPlayedVideo || data[0];\n        if (videoToLoad) {\n          setSelectedVideo(videoToLoad);\n        }\n      }\n    } catch (error) {\n      console.error('Erro ao carregar vídeos:', error);\n    }\n  };\n\n  // Função para converter URL do YouTube em formato embed\n  const getEmbedUrl = (url: string) => {\n    console.log('URL original:', url);\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        const videoId = url.includes('youtube.com') \n          ? url.split('v=')[1]?.split('&')[0]\n          : url.split('youtu.be/')[1]?.split('?')[0];\n        \n        const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      if (url.includes('vimeo.com')) {\n        const videoId = url.split('vimeo.com/')[1]?.split('?')[0];\n        const embedUrl = `https://player.vimeo.com/video/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      return url;\n    } catch (error) {\n      console.error('Erro ao processar URL:', error);\n      return url;\n    }\n  };\n\n  // Função para extrair título do vídeo do YouTube\n  const getVideoTitle = async (url: string): Promise<string> => {\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        const videoId = url.includes('youtube.com')\n          ? url.split('v=')[1]?.split('&')[0]\n          : url.split('youtu.be/')[1]?.split('?')[0];\n        \n        const response = await fetch(\n          `https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=AIzaSyAyTc_jYQSVM_3kg95t8ai3CWckZGG0v4c&part=snippet`\n        );\n        const data = await response.json();\n        \n        if (data.error) {\n          console.error('Erro da API do YouTube:', data.error);\n          return 'Vídeo do YouTube';\n        }\n\n        return data.items[0]?.snippet?.title || 'Vídeo do YouTube';\n      }\n      \n      if (url.includes('vimeo.com')) {\n        const videoId = url.split('vimeo.com/')[1]?.split('?')[0];\n        const response = await fetch(`https://vimeo.com/api/v2/video/${videoId}.json`);\n        const data = await response.json();\n        return data[0]?.title || 'Vídeo do Vimeo';\n      }\n      \n      return 'Vídeo';\n    } catch (error) {\n      console.error('Erro ao obter título do vídeo:', error);\n      return 'Vídeo';\n    }\n  };\n\n  const handleAddVideo = async (e?: React.FormEvent) => {\n    if (e) e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    \n    if (!newVideoUrl.trim()) {\n      setError('Por favor, insira uma URL válida');\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      const embedUrl = getEmbedUrl(newVideoUrl);\n      const videoTitle = await getVideoTitle(newVideoUrl);\n      \n      const newVideo = await videoService.addVideo(embedUrl, videoTitle);\n      setVideos(prev => [newVideo, ...prev]);\n      setNewVideoUrl('');\n      setSelectedVideo(newVideo);\n    } catch (error: any) {\n      console.error('Erro detalhado:', error);\n      setError(\n        error.message || \n        error.error_description || \n        'Erro ao adicionar vídeo. Verifique se a URL é válida.'\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDelete = async (videoId: string) => {\n    try {\n      await videoService.deleteVideo(videoId);\n      setVideos(prev => prev.filter(video => video.id !== videoId));\n    } catch (error) {\n      console.error('Erro ao deletar vídeo:', error);\n    }\n  };\n\n  const handleVideoSelect = async (video: VideoData, shouldAutoplay: boolean = false) => {\n    try {\n      if (isInitializing) return;\n      setIsVideoLoading(true); // Adicione feedback visual\n      \n      const videoId = extractVideoId(video.url);\n      if (!videoId) {\n        throw new Error('VideoId não encontrado');\n      }\n\n      // Salva o vídeo no localStorage\n      localStorage.setItem('lastPlayedVideo', JSON.stringify(video));\n      setLastPlayedVideo(video);\n      setSelectedVideo(video); // Adicione esta linha para atualizar o vídeo selecionado\n\n      // Não dispara evento se shouldAutoplay for false\n      if (shouldAutoplay) {\n        window.dispatchEvent(new Event('videoStarting'));\n      }\n\n      // Se não houver player ou ele não estiver pronto, inicializa\n      if (!player || !isPlayerReady) {\n        await initializePlayer(videoId, shouldAutoplay);\n        return;\n      }\n\n      // Se o player existe e está pronto\n      await new Promise<void>((resolve, reject) => {\n        let timeoutId: NodeJS.Timeout | undefined;\n\n        const cleanup = () => {\n          if (timeoutId) {\n            clearTimeout(timeoutId);\n          }\n        };\n\n        try {\n          timeoutId = setTimeout(() => {\n            cleanup();\n            reject(new Error('Timeout ao carregar vídeo'));\n          }, 10000); // Aumenta o timeout para 10 segundos\n\n          const handleStateChange = (event: any) => {\n            if (event.data !== -1) { // -1 significa não iniciado\n              cleanup();\n              player.removeEventListener('onStateChange', handleStateChange);\n              \n              if (shouldAutoplay) {\n                player.playVideo();\n                updatePlayingState(true);\n              } else {\n                player.pauseVideo();\n                updatePlayingState(false);\n              }\n              resolve();\n            }\n          };\n\n          player.addEventListener('onStateChange', handleStateChange);\n\n          // Usa cueVideoById para carregar sem reproduzir automaticamente\n          if (shouldAutoplay) {\n            player.loadVideoById({\n              videoId: videoId,\n              startSeconds: 0,\n              suggestedQuality: 'large'\n            });\n          } else {\n            player.cueVideoById({\n              videoId: videoId,\n              startSeconds: 0,\n              suggestedQuality: 'large'\n            });\n          }\n        } catch (e) {\n          cleanup();\n          reject(e);\n        }\n      });\n\n    } catch (error) {\n      console.error('Erro em handleVideoSelect:', error);\n      setError('Não foi possível reproduzir o vídeo. Por favor, tente novamente.');\n      \n      // Tenta reinicializar o player após um erro\n      if (player) {\n        try {\n          player.destroy();\n        } catch (e) {\n          console.error('Erro ao destruir player:', e);\n        }\n        setPlayer(null);\n        setIsPlayerReady(false);\n        \n        setTimeout(() => {\n          initializePlayer(videoId, shouldAutoplay);\n        }, 1000);\n      }\n    } finally {\n      setIsVideoLoading(false);\n    }\n  };\n\n  const handlePlayerReady = (event: any, shouldAutoplay: boolean = false) => {\n    try {\n      const newPlayer = event.target;\n      setPlayer(newPlayer);\n      setIsPlayerReady(true);\n      \n      if (shouldAutoplay) {\n        newPlayer.playVideo();\n        updatePlayingState(true);\n      } else {\n        newPlayer.pauseVideo();\n        updatePlayingState(false);\n      }\n    } catch (error) {\n      console.error('Erro em handlePlayerReady:', error);\n    }\n  };\n\n  const handleStateChange = (event: any) => {\n    try {\n      if (event.data === 0) { // vídeo terminou\n        updatePlayingState(false);\n        window.dispatchEvent(new Event('externalMediaStop'));\n        onEnded?.();\n      } else if (event.data === 1) { // vídeo começou a tocar\n        // Não dispara evento se o vídeo está sendo carregado inicialmente\n        if (!isInitializing) {\n          updatePlayingState(true);\n          window.dispatchEvent(new Event('externalMediaPlay'));\n        }\n      } else if (event.data === 2) { // vídeo foi pausado\n        updatePlayingState(false);\n        window.dispatchEvent(new Event('externalMediaStop'));\n      } else if (event.data === -1) { // vídeo não iniciado\n        updatePlayingState(false);\n      } else if (event.data === 3) { // vídeo bufferizando\n        // Mantém o estado atual\n      }\n    } catch (error) {\n      console.error('Erro no handleStateChange:', error);\n    }\n  };\n\n  // Função para extrair videoId do YouTube\n  const extractVideoId = (url: string = '') => {\n    try {\n      if (!url) return '';\n      \n      let videoId = '';\n      \n      if (url.includes('youtube.com/embed/')) {\n        videoId = url.split('embed/')[1]?.split('?')[0];\n      } else if (url.includes('youtube.com/watch')) {\n        videoId = url.split('v=')[1]?.split('&')[0];\n      } else if (url.includes('youtu.be/')) {\n        videoId = url.split('youtu.be/')[1]?.split('?')[0];\n      }\n\n      console.log('Extraído videoId:', videoId, 'da URL:', url);\n      return videoId;\n    } catch (error) {\n      console.error('Erro ao extrair videoId:', error);\n      return '';\n    }\n  };\n\n  // Adicione esta função para controlar o fade do volume do iframe\n  const fadeIframeVolume = (start: number, end: number, duration: number): NodeJS.Timeout | undefined => {\n    if (!player || !isPlayerReady) return undefined;\n\n    try {\n      // Verifica se o player ainda está válido\n      if (typeof player.getPlayerState !== 'function') {\n        return undefined;\n      }\n\n      const steps = 20;\n      const stepValue = (end - start) / steps;\n      const stepDuration = duration / steps;\n      let currentStep = 0;\n\n      const interval = setInterval(() => {\n        try {\n          if (!player || typeof player.getPlayerState !== 'function') {\n            clearInterval(interval);\n            return;\n          }\n\n          currentStep++;\n          const newVolume = start + (stepValue * currentStep);\n          const volume = Math.min(Math.max(newVolume, 0), 1) * 100;\n          \n          if (player && typeof player.setVolume === 'function') {\n            player.setVolume(volume);\n          }\n\n          if (currentStep >= steps) {\n            clearInterval(interval);\n          }\n        } catch (error) {\n          console.error('Erro durante fade:', error);\n          clearInterval(interval);\n        }\n      }, stepDuration);\n\n      return interval;\n    } catch (error) {\n      console.error('Erro ao iniciar fade:', error);\n      return undefined;\n    }\n  };\n\n  // Modifique o useEffect que escuta eventos de áudio\n  useEffect(() => {\n    let fadeInterval: NodeJS.Timeout | null = null;\n\n    const handleAudioPlay = () => {\n      try {\n        if (isPlayerReady && player) {\n          if (fadeInterval) {\n            clearInterval(fadeInterval);\n          }\n          const newInterval = fadeIframeVolume(1, 0.10, 500);\n          if (newInterval) {\n            fadeInterval = newInterval;\n          }\n        }\n      } catch (error) {\n        console.error('Erro no handleAudioPlay:', error);\n      }\n    };\n\n    const handleAudioStop = () => {\n      try {\n        if (isPlayerReady && player) {\n          if (fadeInterval) {\n            clearInterval(fadeInterval);\n          }\n          const newInterval = fadeIframeVolume(0.10, 1, 500);\n          if (newInterval) {\n            fadeInterval = newInterval;\n          }\n        }\n      } catch (error) {\n        console.error('Erro no handleAudioStop:', error);\n      }\n    };\n\n    window.addEventListener('audioPlay', handleAudioPlay);\n    window.addEventListener('audioStop', handleAudioStop);\n\n    return () => {\n      window.removeEventListener('audioPlay', handleAudioPlay);\n      window.removeEventListener('audioStop', handleAudioStop);\n      if (fadeInterval) {\n        clearInterval(fadeInterval);\n      }\n    };\n  }, [isPlayerReady, player]);\n\n  // Adicione este useEffect para monitorar mudanças no selectedVideo\n  useEffect(() => {\n    if (selectedVideo) {\n      const videoId = extractVideoId(selectedVideo.url);\n      if (videoId) {\n        console.log('Detectada mudança no selectedVideo, iniciando com autoplay');\n        handleVideoSelect(selectedVideo, true);\n      }\n    }\n  }, [selectedVideo]);\n\n  // Adicione este useEffect para lidar com erros de rede\n  useEffect(() => {\n    const handleOnline = () => {\n      if (selectedVideo) {\n        initializePlayer(extractVideoId(selectedVideo.url), true);\n      }\n    };\n\n    window.addEventListener('online', handleOnline);\n    return () => window.removeEventListener('online', handleOnline);\n  }, [selectedVideo]);\n\n  // Adicione este useEffect para controlar play/pause\n  useEffect(() => {\n    if (player && isPlayerReady) {\n      try {\n        if (isPlaying) {\n          player.playVideo();\n        } else {\n          player.pauseVideo();\n        }\n      } catch (error) {\n        console.error('Erro ao controlar play/pause:', error);\n      }\n    }\n  }, [isPlaying, player, isPlayerReady]);\n\n  // Adicione este useEffect para persistir o último vídeo\n  useEffect(() => {\n    // Carrega o último vídeo do localStorage ao montar o componente\n    const savedVideo = localStorage.getItem('lastPlayedVideo');\n    if (savedVideo) {\n      try {\n        const video = JSON.parse(savedVideo);\n        setLastPlayedVideo(video);\n        setSelectedVideo(video);\n      } catch (error) {\n        console.error('Erro ao carregar último vídeo:', error);\n      }\n    }\n  }, []);\n\n  return (\n    <div className=\"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\">\n      {/* Formulário de busca */}\n      <form onSubmit={handleAddVideo} className=\"mb-3\">\n        <div className=\"flex flex-col gap-2\">\n          <input\n            type=\"url\"\n            value={newVideoUrl}\n            onChange={(e) => setNewVideoUrl(e.target.value)}\n            placeholder=\"Cole a URL do YouTube ou Vimeo aqui\"\n            className=\"w-full bg-[#2d2d2d] border border-[#404040] text-gray-200 rounded px-3 py-2 focus:border-[#e1aa1e] focus:outline-none\"\n            disabled={isLoading}\n          />\n          {error && <p className=\"text-red-400 text-sm\">{error}</p>}\n        </div>\n      </form>\n\n      {/* Botões de ação */}\n      <div className=\"flex gap-2 mb-3\">\n        <button\n          type=\"button\"\n          onClick={() => handleAddVideo()}\n          className={`flex-1 ${\n            isLoading \n              ? 'bg-[#e1aa1e]/50 cursor-not-allowed' \n              : 'bg-[#e1aa1e] hover:bg-[#e1aa1e]/80'\n          } text-gray-900 px-3 py-1.5 rounded transition-colors flex items-center justify-center gap-2`}\n          disabled={isLoading}\n        >\n          <svg\n            className=\"w-4 h-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M12 4v16m8-8H4\"\n            />\n          </svg>\n          {isLoading ? 'Adicionando...' : 'Buscar Vídeo'}\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsSidebarOpen(true)}\n          className=\"flex-1 bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-3 py-1.5 rounded flex items-center justify-center gap-2 transition-colors\"\n        >\n          <svg\n            className=\"w-4 h-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M4 6h16M4 12h16M4 18h16\"\n            />\n          </svg>\n          Últimos Vídeos\n        </button>\n      </div>\n\n      {/* Área do vídeo */}\n      <div className=\"relative\">\n        <div className=\"rounded-lg overflow-hidden border border-[#404040]\">\n          <div className=\"relative pt-[56.25%]\">\n            <div\n              id=\"youtube-player\"\n              className=\"absolute top-0 left-0 w-full h-full\"\n            />\n          </div>\n        </div>\n\n        {/* Overlay de carregamento */}\n        {(isInitializing || isVideoLoading) && (\n          <div className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\n            <div className=\"text-[#e1aa1e] animate-pulse\">Carregando vídeo...</div>\n          </div>\n        )}\n      </div>\n\n      {/* Menu lateral */}\n      <VideoSidebar\n        isOpen={isSidebarOpen}\n        onClose={() => setIsSidebarOpen(false)}\n        videos={videos}\n        onVideoSelect={handleVideoSelect}\n        setIsPlaying={setIsPlaying}\n      />\n    </div>\n  );\n};\n\nexport default VideoPlayer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}