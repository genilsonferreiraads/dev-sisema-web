{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genil\\\\Desktop\\\\site 01 imp\\xE9rio\\\\src\\\\components\\\\VideoPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { videoService } from '../lib/supabase';\nimport VideoSidebar from './VideoSidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = ({\n  videoId,\n  onEnded,\n  isPlaying,\n  setIsPlaying,\n  autoplay = false,\n  pendingVideoId\n}) => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [newVideoUrl, setNewVideoUrl] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [player, setPlayer] = useState(null);\n  const [isPlayerReady, setIsPlayerReady] = useState(false);\n  const [currentVideoId, setCurrentVideoId] = useState(null);\n\n  // Carrega vídeos quando o componente monta\n  useEffect(() => {\n    const loadInitialVideos = async () => {\n      try {\n        const data = await videoService.getRecentVideos();\n        setVideos(data);\n      } catch (error) {\n        console.error('Erro ao carregar vídeos:', error);\n      }\n    };\n    loadInitialVideos();\n  }, []);\n\n  // Inicializa o player do YouTube\n  useEffect(() => {\n    let mounted = true;\n    let initAttempts = 0;\n    const MAX_ATTEMPTS = 3;\n    const checkAudioPlaying = () => {\n      const audioElement = document.querySelector('audio');\n      return audioElement && !audioElement.paused;\n    };\n    const loadYouTubeAPI = () => {\n      return new Promise((resolve, reject) => {\n        var _firstScriptTag$paren;\n        if (window.YT) {\n          resolve();\n          return;\n        }\n        const tag = document.createElement('script');\n        tag.src = 'https://www.youtube.com/iframe_api';\n        tag.async = true;\n        const firstScriptTag = document.getElementsByTagName('script')[0];\n        (_firstScriptTag$paren = firstScriptTag.parentNode) === null || _firstScriptTag$paren === void 0 ? void 0 : _firstScriptTag$paren.insertBefore(tag, firstScriptTag);\n        window.onYouTubeIframeAPIReady = () => {\n          resolve();\n        };\n        setTimeout(() => {\n          reject(new Error('Timeout ao carregar API do YouTube'));\n        }, 10000);\n      });\n    };\n    const initPlayer = async () => {\n      try {\n        await loadYouTubeAPI();\n        if (!mounted) return;\n\n        // Limpa qualquer iframe existente\n        const existingIframe = document.getElementById('youtube-player');\n        if (existingIframe) {\n          existingIframe.remove();\n        }\n\n        // Cria um novo container para o player\n        const container = document.createElement('div');\n        container.id = 'youtube-player';\n        container.className = 'w-full h-full';\n        const playerContainer = document.getElementById('player-container');\n        if (playerContainer) {\n          playerContainer.appendChild(container);\n        }\n        const isAudioPlaying = checkAudioPlaying();\n        console.log('Estado do áudio ao inicializar:', isAudioPlaying ? 'tocando' : 'parado');\n        const newPlayer = new window.YT.Player('youtube-player', {\n          height: '100%',\n          width: '100%',\n          videoId: '',\n          playerVars: {\n            enablejsapi: 1,\n            origin: window.location.origin,\n            host: window.location.protocol + '//' + window.location.host,\n            widget_referrer: window.location.href,\n            playsinline: 1,\n            controls: 1,\n            rel: 0,\n            modestbranding: 1,\n            autoplay: 0,\n            mute: 0\n          },\n          events: {\n            onReady: () => {\n              if (!mounted) return;\n              console.log('Player pronto');\n              setIsPlayerReady(true);\n              setPlayer(newPlayer);\n              try {\n                // Configura volume inicial baseado no estado do áudio\n                const initialVolume = isAudioPlaying ? 10 : 100;\n                console.log('Configurando volume inicial:', initialVolume);\n                newPlayer.setVolume(initialVolume);\n\n                // Carrega o vídeo inicial\n                const videoToPlay = selectedVideo || videos[0];\n                if (videoToPlay) {\n                  const videoId = extractVideoId(videoToPlay.url);\n                  if (videoId) {\n                    console.log('Carregando vídeo inicial:', videoId);\n                    setCurrentVideoId(videoId);\n                    // Sempre usa cueVideoById para evitar autoplay\n                    newPlayer.cueVideoById({\n                      videoId,\n                      startSeconds: 0,\n                      suggestedQuality: 'large'\n                    });\n                  }\n                }\n              } catch (error) {\n                console.error('Erro ao configurar player:', error);\n              }\n            },\n            onStateChange: event => {\n              if (!mounted) return;\n              const currentState = event.data;\n              console.log('Estado do player mudou para:', currentState);\n              if (currentState === window.YT.PlayerState.ENDED) {\n                setIsPlaying(false);\n                onEnded();\n              } else if (currentState === window.YT.PlayerState.PLAYING) {\n                setIsPlaying(true);\n                // Verifica o estado do áudio novamente\n                if (checkAudioPlaying()) {\n                  console.log('Áudio detectado, ajustando volume do vídeo');\n                  fadeVolume(100, 10, 500);\n                }\n              } else if (currentState === window.YT.PlayerState.PAUSED) {\n                setIsPlaying(false);\n              }\n            },\n            onError: error => {\n              if (!mounted) return;\n              console.error('Erro no player:', error);\n              setError('Erro ao carregar vídeo');\n              initAttempts++;\n              if (initAttempts < MAX_ATTEMPTS) {\n                console.log(`Tentativa ${initAttempts} de reinicializar o player`);\n                setTimeout(initPlayer, 1000);\n              }\n            }\n          }\n        });\n      } catch (error) {\n        console.error('Erro ao inicializar player:', error);\n        initAttempts++;\n        if (initAttempts < MAX_ATTEMPTS && mounted) {\n          console.log(`Tentativa ${initAttempts} de reinicializar o player`);\n          setTimeout(initPlayer, 1000);\n        }\n      }\n    };\n\n    // Pequeno delay antes de inicializar o player\n    const initTimeout = setTimeout(initPlayer, 500);\n    return () => {\n      mounted = false;\n      clearTimeout(initTimeout);\n      if (player) {\n        try {\n          player.stopVideo();\n          player.destroy();\n        } catch (error) {\n          console.error('Erro ao destruir player:', error);\n        }\n      }\n    };\n  }, [videos, selectedVideo]);\n\n  // Controla o volume baseado nos eventos de áudio\n  useEffect(() => {\n    const handleAudioPlay = () => {\n      if (player && isPlayerReady) {\n        console.log('Evento audioPlay recebido - ajustando volume do vídeo');\n        player.setVolume(20);\n      }\n    };\n    const handleAudioStop = () => {\n      if (player && isPlayerReady) {\n        console.log('Evento audioStop recebido - restaurando volume do vídeo');\n        player.setVolume(100);\n      }\n    };\n    window.addEventListener('audioPlay', handleAudioPlay);\n    window.addEventListener('audioStop', handleAudioStop);\n    return () => {\n      window.removeEventListener('audioPlay', handleAudioPlay);\n      window.removeEventListener('audioStop', handleAudioStop);\n    };\n  }, [player, isPlayerReady]);\n\n  // Atualiza o vídeo quando necessário\n  useEffect(() => {\n    if (!player || !isPlayerReady) return;\n    const videoToPlay = selectedVideo || videos[0];\n    if (!videoToPlay) return;\n    const videoId = extractVideoId(videoToPlay.url);\n    if (videoId && videoId !== currentVideoId) {\n      console.log('Carregando novo vídeo:', videoId);\n      try {\n        // Primeiro para qualquer reprodução atual\n        player.stopVideo();\n\n        // Pequeno delay para garantir que o vídeo parou\n        setTimeout(() => {\n          if (!player || !isPlayerReady) return;\n          setCurrentVideoId(videoId);\n\n          // Carrega o vídeo pausado\n          player.cueVideoById({\n            videoId,\n            startSeconds: 0,\n            suggestedQuality: 'large'\n          });\n\n          // Se deveria estar tocando, inicia a reprodução\n          if (isPlaying) {\n            setTimeout(() => {\n              if (!player || !isPlayerReady) return;\n              player.playVideo();\n            }, 100);\n          }\n        }, 100);\n      } catch (error) {\n        console.error('Erro ao carregar vídeo:', error);\n        setError('Erro ao carregar vídeo');\n      }\n    }\n  }, [selectedVideo, videos, player, isPlayerReady, isPlaying, currentVideoId]);\n\n  // Limpa o player ao desmontar\n  useEffect(() => {\n    return () => {\n      if (player) {\n        try {\n          // Garante que o vídeo está pausado antes de destruir\n          player.pauseVideo();\n          // Pequeno delay antes de destruir\n          setTimeout(() => {\n            try {\n              player.destroy();\n            } catch (error) {\n              console.error('Erro ao destruir player:', error);\n            }\n          }, 100);\n        } catch (error) {\n          console.error('Erro ao pausar vídeo:', error);\n        }\n      }\n    };\n  }, [player]);\n\n  // Monitora mudanças de rota/navegação\n  useEffect(() => {\n    const handleBeforeUnload = () => {\n      if (player) {\n        try {\n          player.pauseVideo();\n        } catch (error) {\n          console.error('Erro ao pausar vídeo antes de sair:', error);\n        }\n      }\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [player]);\n  const fadeVolume = (start, end, duration) => {\n    if (!player || !isPlayerReady) {\n      console.log('Player não está pronto para ajuste de volume');\n      return;\n    }\n    console.log(`Iniciando fade de volume: ${start}% -> ${end}%`);\n    const steps = 20;\n    const stepValue = (end - start) / steps;\n    const stepDuration = duration / steps;\n    let currentStep = 0;\n    const fadeInterval = setInterval(() => {\n      if (!player || !isPlayerReady) {\n        console.log('Player não disponível durante fade, cancelando');\n        clearInterval(fadeInterval);\n        return;\n      }\n      currentStep++;\n      const newVolume = Math.round(start + stepValue * currentStep);\n      try {\n        console.log(`Ajustando volume para ${newVolume}%`);\n        player.setVolume(newVolume);\n      } catch (error) {\n        console.error('Erro ao ajustar volume:', error);\n        clearInterval(fadeInterval);\n      }\n      if (currentStep >= steps) {\n        console.log('Fade de volume concluído');\n        clearInterval(fadeInterval);\n      }\n    }, stepDuration);\n  };\n  const extractVideoId = url => {\n    if (!url) return null;\n    try {\n      let videoId = '';\n      if (url.includes('youtube.com/embed/')) {\n        var _url$split$;\n        videoId = (_url$split$ = url.split('embed/')[1]) === null || _url$split$ === void 0 ? void 0 : _url$split$.split('?')[0];\n      } else if (url.includes('youtube.com/watch')) {\n        var _url$split$2;\n        videoId = (_url$split$2 = url.split('v=')[1]) === null || _url$split$2 === void 0 ? void 0 : _url$split$2.split('&')[0];\n      } else if (url.includes('youtu.be/')) {\n        var _url$split$3;\n        videoId = (_url$split$3 = url.split('youtu.be/')[1]) === null || _url$split$3 === void 0 ? void 0 : _url$split$3.split('?')[0];\n      }\n      return videoId || null;\n    } catch (error) {\n      console.error('Erro ao extrair videoId:', error);\n      return null;\n    }\n  };\n  const loadVideos = async () => {\n    try {\n      const data = await videoService.getRecentVideos();\n      setVideos(data);\n    } catch (error) {\n      console.error('Erro ao carregar vídeos:', error);\n    }\n  };\n  const handleVideoSelect = video => {\n    setSelectedVideo(video);\n    setIsSidebarOpen(false);\n  };\n  const handleAddVideo = async e => {\n    if (e) e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    if (!newVideoUrl.trim()) {\n      setError('Por favor, insira uma URL válida');\n      setIsLoading(false);\n      return;\n    }\n    try {\n      const embedUrl = getEmbedUrl(newVideoUrl);\n      const videoTitle = await getVideoTitle(newVideoUrl);\n      const newVideo = await videoService.addVideo(embedUrl, videoTitle);\n      setVideos(prev => [newVideo, ...prev]);\n      setNewVideoUrl('');\n      setSelectedVideo(newVideo);\n    } catch (error) {\n      console.error('Erro detalhado:', error);\n      setError(error.message || error.error_description || 'Erro ao adicionar vídeo. Verifique se a URL é válida.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDelete = async videoId => {\n    try {\n      await videoService.deleteVideo(videoId);\n      setVideos(prev => prev.filter(video => video.id !== videoId));\n    } catch (error) {\n      console.error('Erro ao deletar vídeo:', error);\n    }\n  };\n  const getEmbedUrl = url => {\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        var _url$split$4, _url$split$5;\n        const videoId = url.includes('youtube.com') ? (_url$split$4 = url.split('v=')[1]) === null || _url$split$4 === void 0 ? void 0 : _url$split$4.split('&')[0] : (_url$split$5 = url.split('youtu.be/')[1]) === null || _url$split$5 === void 0 ? void 0 : _url$split$5.split('?')[0];\n        return `https://www.youtube.com/embed/${videoId}`;\n      }\n      if (url.includes('vimeo.com')) {\n        var _url$split$6;\n        const videoId = (_url$split$6 = url.split('vimeo.com/')[1]) === null || _url$split$6 === void 0 ? void 0 : _url$split$6.split('?')[0];\n        return `https://player.vimeo.com/video/${videoId}`;\n      }\n      return url;\n    } catch (error) {\n      console.error('Erro ao processar URL:', error);\n      return url;\n    }\n  };\n  const getVideoTitle = async url => {\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        var _url$split$7, _url$split$8, _data$items$, _data$items$$snippet;\n        const videoId = url.includes('youtube.com') ? (_url$split$7 = url.split('v=')[1]) === null || _url$split$7 === void 0 ? void 0 : _url$split$7.split('&')[0] : (_url$split$8 = url.split('youtu.be/')[1]) === null || _url$split$8 === void 0 ? void 0 : _url$split$8.split('?')[0];\n        const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}&part=snippet`);\n        const data = await response.json();\n        if (data.error) {\n          console.error('Erro da API do YouTube:', data.error);\n          return 'Vídeo do YouTube';\n        }\n        return ((_data$items$ = data.items[0]) === null || _data$items$ === void 0 ? void 0 : (_data$items$$snippet = _data$items$.snippet) === null || _data$items$$snippet === void 0 ? void 0 : _data$items$$snippet.title) || 'Vídeo do YouTube';\n      }\n      if (url.includes('vimeo.com')) {\n        var _url$split$9, _data$;\n        const videoId = (_url$split$9 = url.split('vimeo.com/')[1]) === null || _url$split$9 === void 0 ? void 0 : _url$split$9.split('?')[0];\n        const response = await fetch(`https://vimeo.com/api/v2/video/${videoId}.json`);\n        const data = await response.json();\n        return ((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.title) || 'Vídeo do Vimeo';\n      }\n      return 'Vídeo';\n    } catch (error) {\n      console.error('Erro ao obter título do vídeo:', error);\n      return 'Vídeo';\n    }\n  };\n  const handleStateChange = event => {\n    if (event.data === 0) {\n      // vídeo terminou\n      setIsPlaying(false);\n      window.dispatchEvent(new Event('externalMediaStop'));\n      if (pendingVideoId) {\n        const pendingVideo = videos.find(v => v.id === pendingVideoId);\n        if (pendingVideo) {\n          setSelectedVideo(pendingVideo);\n          setIsPlaying(true);\n        }\n      }\n      onEnded();\n    } else if (event.data === 1) {\n      // vídeo começou a tocar\n      setIsPlaying(true);\n      window.dispatchEvent(new Event('externalMediaPlay'));\n    } else if (event.data === 2) {\n      // vídeo foi pausado\n      setIsPlaying(false);\n      window.dispatchEvent(new Event('externalMediaStop'));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddVideo,\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          value: newVideoUrl,\n          onChange: e => setNewVideoUrl(e.target.value),\n          placeholder: \"Cole a URL do YouTube ou Vimeo aqui\",\n          className: \"w-full bg-[#2d2d2d] border border-[#404040] text-gray-200 rounded px-3 py-2 focus:border-[#e1aa1e] focus:outline-none\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-400 text-sm\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleAddVideo(),\n        className: `flex-1 ${isLoading ? 'bg-[#e1aa1e]/50 cursor-not-allowed' : 'bg-[#e1aa1e] hover:bg-[#e1aa1e]/80'} text-gray-900 px-3 py-1.5 rounded transition-colors flex items-center justify-center gap-2`,\n        disabled: isLoading,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-4 h-4\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M12 4v16m8-8H4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 11\n        }, this), isLoading ? 'Adicionando...' : 'Buscar Vídeo']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setIsSidebarOpen(true),\n        className: \"flex-1 bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-3 py-1.5 rounded flex items-center justify-center gap-2 transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-4 h-4\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M4 6h16M4 12h16M4 18h16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 11\n        }, this), \"\\xDAltimos V\\xEDdeos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: selectedVideo || videos[0] ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-lg overflow-hidden border border-[#404040]\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative pt-[56.25%]\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"player-container\",\n            className: \"absolute top-0 left-0 w-full h-full\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"youtube-player\",\n              className: \"w-full h-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-6 text-gray-400 bg-[#2d2d2d] rounded-lg border border-[#404040]\",\n        children: \"Nenhum v\\xEDdeo dispon\\xEDvel. Adicione um v\\xEDdeo para come\\xE7ar.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoSidebar, {\n      isOpen: isSidebarOpen,\n      onClose: () => setIsSidebarOpen(false),\n      videos: videos,\n      onVideoSelect: handleVideoSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 509,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"brqoTNuOZ5ax7K5/uNS6yvU6RiI=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","videoService","VideoSidebar","jsxDEV","_jsxDEV","VideoPlayer","videoId","onEnded","isPlaying","setIsPlaying","autoplay","pendingVideoId","_s","videos","setVideos","newVideoUrl","setNewVideoUrl","error","setError","isLoading","setIsLoading","isSidebarOpen","setIsSidebarOpen","selectedVideo","setSelectedVideo","player","setPlayer","isPlayerReady","setIsPlayerReady","currentVideoId","setCurrentVideoId","loadInitialVideos","data","getRecentVideos","console","mounted","initAttempts","MAX_ATTEMPTS","checkAudioPlaying","audioElement","document","querySelector","paused","loadYouTubeAPI","Promise","resolve","reject","_firstScriptTag$paren","window","YT","tag","createElement","src","async","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","setTimeout","Error","initPlayer","existingIframe","getElementById","remove","container","id","className","playerContainer","appendChild","isAudioPlaying","log","newPlayer","Player","height","width","playerVars","enablejsapi","origin","location","host","protocol","widget_referrer","href","playsinline","controls","rel","modestbranding","mute","events","onReady","initialVolume","setVolume","videoToPlay","extractVideoId","url","cueVideoById","startSeconds","suggestedQuality","onStateChange","event","currentState","PlayerState","ENDED","PLAYING","fadeVolume","PAUSED","onError","initTimeout","clearTimeout","stopVideo","destroy","handleAudioPlay","handleAudioStop","addEventListener","removeEventListener","playVideo","pauseVideo","handleBeforeUnload","start","end","duration","steps","stepValue","stepDuration","currentStep","fadeInterval","setInterval","clearInterval","newVolume","Math","round","includes","_url$split$","split","_url$split$2","_url$split$3","loadVideos","handleVideoSelect","video","handleAddVideo","e","preventDefault","trim","embedUrl","getEmbedUrl","videoTitle","getVideoTitle","newVideo","addVideo","prev","message","error_description","handleDelete","deleteVideo","filter","_url$split$4","_url$split$5","_url$split$6","_url$split$7","_url$split$8","_data$items$","_data$items$$snippet","response","fetch","process","env","REACT_APP_YOUTUBE_API_KEY","json","items","snippet","title","_url$split$9","_data$","handleStateChange","dispatchEvent","Event","pendingVideo","find","v","children","onSubmit","type","value","onChange","target","placeholder","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","isOpen","onClose","onVideoSelect","_c","$RefreshReg$"],"sources":["C:/Users/genil/Desktop/site 01 império/src/components/VideoPlayer.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { videoService, VideoData } from '../lib/supabase';\nimport VideoSidebar from './VideoSidebar';\n\ninterface VideoPlayerProps {\n  videoId?: string;\n  onEnded: () => void;\n  isPlaying: boolean;\n  setIsPlaying: (playing: boolean) => void;\n  autoplay?: boolean;\n  pendingVideoId?: string;\n}\n\nconst VideoPlayer: React.FC<VideoPlayerProps> = ({ \n  videoId,\n  onEnded, \n  isPlaying, \n  setIsPlaying,\n  autoplay = false,\n  pendingVideoId \n}) => {\n  const [videos, setVideos] = useState<VideoData[]>([]);\n  const [newVideoUrl, setNewVideoUrl] = useState('');\n  const [error, setError] = useState<string>('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [selectedVideo, setSelectedVideo] = useState<VideoData | null>(null);\n  const [player, setPlayer] = useState<any>(null);\n  const [isPlayerReady, setIsPlayerReady] = useState(false);\n  const [currentVideoId, setCurrentVideoId] = useState<string | null>(null);\n\n  // Carrega vídeos quando o componente monta\n  useEffect(() => {\n    const loadInitialVideos = async () => {\n      try {\n        const data = await videoService.getRecentVideos();\n        setVideos(data);\n      } catch (error) {\n        console.error('Erro ao carregar vídeos:', error);\n      }\n    };\n\n    loadInitialVideos();\n  }, []);\n\n  // Inicializa o player do YouTube\n  useEffect(() => {\n    let mounted = true;\n    let initAttempts = 0;\n    const MAX_ATTEMPTS = 3;\n\n    const checkAudioPlaying = () => {\n      const audioElement = document.querySelector('audio');\n      return audioElement && !audioElement.paused;\n    };\n\n    const loadYouTubeAPI = () => {\n      return new Promise<void>((resolve, reject) => {\n        if ((window as any).YT) {\n          resolve();\n          return;\n        }\n\n        const tag = document.createElement('script');\n        tag.src = 'https://www.youtube.com/iframe_api';\n        tag.async = true;\n        const firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode?.insertBefore(tag, firstScriptTag);\n\n        (window as any).onYouTubeIframeAPIReady = () => {\n          resolve();\n        };\n\n        setTimeout(() => {\n          reject(new Error('Timeout ao carregar API do YouTube'));\n        }, 10000);\n      });\n    };\n\n    const initPlayer = async () => {\n      try {\n        await loadYouTubeAPI();\n        \n        if (!mounted) return;\n\n        // Limpa qualquer iframe existente\n        const existingIframe = document.getElementById('youtube-player');\n        if (existingIframe) {\n          existingIframe.remove();\n        }\n\n        // Cria um novo container para o player\n        const container = document.createElement('div');\n        container.id = 'youtube-player';\n        container.className = 'w-full h-full';\n        const playerContainer = document.getElementById('player-container');\n        if (playerContainer) {\n          playerContainer.appendChild(container);\n        }\n\n        const isAudioPlaying = checkAudioPlaying();\n        console.log('Estado do áudio ao inicializar:', isAudioPlaying ? 'tocando' : 'parado');\n\n        const newPlayer = new (window as any).YT.Player('youtube-player', {\n          height: '100%',\n          width: '100%',\n          videoId: '',\n          playerVars: {\n            enablejsapi: 1,\n            origin: window.location.origin,\n            host: window.location.protocol + '//' + window.location.host,\n            widget_referrer: window.location.href,\n            playsinline: 1,\n            controls: 1,\n            rel: 0,\n            modestbranding: 1,\n            autoplay: 0,\n            mute: 0\n          },\n          events: {\n            onReady: () => {\n              if (!mounted) return;\n              console.log('Player pronto');\n              setIsPlayerReady(true);\n              setPlayer(newPlayer);\n              \n              try {\n                // Configura volume inicial baseado no estado do áudio\n                const initialVolume = isAudioPlaying ? 10 : 100;\n                console.log('Configurando volume inicial:', initialVolume);\n                newPlayer.setVolume(initialVolume);\n\n                // Carrega o vídeo inicial\n                const videoToPlay = selectedVideo || videos[0];\n                if (videoToPlay) {\n                  const videoId = extractVideoId(videoToPlay.url);\n                  if (videoId) {\n                    console.log('Carregando vídeo inicial:', videoId);\n                    setCurrentVideoId(videoId);\n                    // Sempre usa cueVideoById para evitar autoplay\n                    newPlayer.cueVideoById({\n                      videoId,\n                      startSeconds: 0,\n                      suggestedQuality: 'large'\n                    });\n                  }\n                }\n              } catch (error) {\n                console.error('Erro ao configurar player:', error);\n              }\n            },\n            onStateChange: (event: any) => {\n              if (!mounted) return;\n              \n              const currentState = event.data;\n              console.log('Estado do player mudou para:', currentState);\n              \n              if (currentState === (window as any).YT.PlayerState.ENDED) {\n                setIsPlaying(false);\n                onEnded();\n              } else if (currentState === (window as any).YT.PlayerState.PLAYING) {\n                setIsPlaying(true);\n                // Verifica o estado do áudio novamente\n                if (checkAudioPlaying()) {\n                  console.log('Áudio detectado, ajustando volume do vídeo');\n                  fadeVolume(100, 10, 500);\n                }\n              } else if (currentState === (window as any).YT.PlayerState.PAUSED) {\n                setIsPlaying(false);\n              }\n            },\n            onError: (error: any) => {\n              if (!mounted) return;\n              console.error('Erro no player:', error);\n              setError('Erro ao carregar vídeo');\n              \n              initAttempts++;\n              if (initAttempts < MAX_ATTEMPTS) {\n                console.log(`Tentativa ${initAttempts} de reinicializar o player`);\n                setTimeout(initPlayer, 1000);\n              }\n            }\n          }\n        });\n      } catch (error) {\n        console.error('Erro ao inicializar player:', error);\n        initAttempts++;\n        if (initAttempts < MAX_ATTEMPTS && mounted) {\n          console.log(`Tentativa ${initAttempts} de reinicializar o player`);\n          setTimeout(initPlayer, 1000);\n        }\n      }\n    };\n\n    // Pequeno delay antes de inicializar o player\n    const initTimeout = setTimeout(initPlayer, 500);\n\n    return () => {\n      mounted = false;\n      clearTimeout(initTimeout);\n      if (player) {\n        try {\n          player.stopVideo();\n          player.destroy();\n        } catch (error) {\n          console.error('Erro ao destruir player:', error);\n        }\n      }\n    };\n  }, [videos, selectedVideo]);\n\n  // Controla o volume baseado nos eventos de áudio\n  useEffect(() => {\n    const handleAudioPlay = () => {\n      if (player && isPlayerReady) {\n        console.log('Evento audioPlay recebido - ajustando volume do vídeo');\n        player.setVolume(20);\n      }\n    };\n\n    const handleAudioStop = () => {\n      if (player && isPlayerReady) {\n        console.log('Evento audioStop recebido - restaurando volume do vídeo');\n        player.setVolume(100);\n      }\n    };\n\n    window.addEventListener('audioPlay', handleAudioPlay);\n    window.addEventListener('audioStop', handleAudioStop);\n\n    return () => {\n      window.removeEventListener('audioPlay', handleAudioPlay);\n      window.removeEventListener('audioStop', handleAudioStop);\n    };\n  }, [player, isPlayerReady]);\n\n  // Atualiza o vídeo quando necessário\n  useEffect(() => {\n    if (!player || !isPlayerReady) return;\n\n    const videoToPlay = selectedVideo || videos[0];\n    if (!videoToPlay) return;\n\n    const videoId = extractVideoId(videoToPlay.url);\n    if (videoId && videoId !== currentVideoId) {\n      console.log('Carregando novo vídeo:', videoId);\n      try {\n        // Primeiro para qualquer reprodução atual\n        player.stopVideo();\n        \n        // Pequeno delay para garantir que o vídeo parou\n        setTimeout(() => {\n          if (!player || !isPlayerReady) return;\n          \n          setCurrentVideoId(videoId);\n          \n          // Carrega o vídeo pausado\n          player.cueVideoById({\n            videoId,\n            startSeconds: 0,\n            suggestedQuality: 'large'\n          });\n          \n          // Se deveria estar tocando, inicia a reprodução\n          if (isPlaying) {\n            setTimeout(() => {\n              if (!player || !isPlayerReady) return;\n              player.playVideo();\n            }, 100);\n          }\n        }, 100);\n      } catch (error) {\n        console.error('Erro ao carregar vídeo:', error);\n        setError('Erro ao carregar vídeo');\n      }\n    }\n  }, [selectedVideo, videos, player, isPlayerReady, isPlaying, currentVideoId]);\n\n  // Limpa o player ao desmontar\n  useEffect(() => {\n    return () => {\n      if (player) {\n        try {\n          // Garante que o vídeo está pausado antes de destruir\n          player.pauseVideo();\n          // Pequeno delay antes de destruir\n          setTimeout(() => {\n            try {\n              player.destroy();\n            } catch (error) {\n              console.error('Erro ao destruir player:', error);\n            }\n          }, 100);\n        } catch (error) {\n          console.error('Erro ao pausar vídeo:', error);\n        }\n      }\n    };\n  }, [player]);\n\n  // Monitora mudanças de rota/navegação\n  useEffect(() => {\n    const handleBeforeUnload = () => {\n      if (player) {\n        try {\n          player.pauseVideo();\n        } catch (error) {\n          console.error('Erro ao pausar vídeo antes de sair:', error);\n        }\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [player]);\n\n  const fadeVolume = (start: number, end: number, duration: number) => {\n    if (!player || !isPlayerReady) {\n      console.log('Player não está pronto para ajuste de volume');\n      return;\n    }\n\n    console.log(`Iniciando fade de volume: ${start}% -> ${end}%`);\n    const steps = 20;\n    const stepValue = (end - start) / steps;\n    const stepDuration = duration / steps;\n    let currentStep = 0;\n\n    const fadeInterval = setInterval(() => {\n      if (!player || !isPlayerReady) {\n        console.log('Player não disponível durante fade, cancelando');\n        clearInterval(fadeInterval);\n        return;\n      }\n\n      currentStep++;\n      const newVolume = Math.round(start + (stepValue * currentStep));\n      \n      try {\n        console.log(`Ajustando volume para ${newVolume}%`);\n        player.setVolume(newVolume);\n      } catch (error) {\n        console.error('Erro ao ajustar volume:', error);\n        clearInterval(fadeInterval);\n      }\n\n      if (currentStep >= steps) {\n        console.log('Fade de volume concluído');\n        clearInterval(fadeInterval);\n      }\n    }, stepDuration);\n  };\n\n  const extractVideoId = (url: string): string | null => {\n    if (!url) return null;\n\n    try {\n      let videoId = '';\n      \n      if (url.includes('youtube.com/embed/')) {\n        videoId = url.split('embed/')[1]?.split('?')[0];\n      } else if (url.includes('youtube.com/watch')) {\n        videoId = url.split('v=')[1]?.split('&')[0];\n      } else if (url.includes('youtu.be/')) {\n        videoId = url.split('youtu.be/')[1]?.split('?')[0];\n      }\n\n      return videoId || null;\n    } catch (error) {\n      console.error('Erro ao extrair videoId:', error);\n      return null;\n    }\n  };\n\n  const loadVideos = async () => {\n    try {\n      const data = await videoService.getRecentVideos();\n      setVideos(data);\n    } catch (error) {\n      console.error('Erro ao carregar vídeos:', error);\n    }\n  };\n\n  const handleVideoSelect = (video: VideoData) => {\n    setSelectedVideo(video);\n    setIsSidebarOpen(false);\n  };\n\n  const handleAddVideo = async (e?: React.FormEvent) => {\n    if (e) e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    \n    if (!newVideoUrl.trim()) {\n      setError('Por favor, insira uma URL válida');\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      const embedUrl = getEmbedUrl(newVideoUrl);\n      const videoTitle = await getVideoTitle(newVideoUrl);\n      \n      const newVideo = await videoService.addVideo(embedUrl, videoTitle);\n      setVideos(prev => [newVideo, ...prev]);\n      setNewVideoUrl('');\n      setSelectedVideo(newVideo);\n    } catch (error: any) {\n      console.error('Erro detalhado:', error);\n      setError(\n        error.message || \n        error.error_description || \n        'Erro ao adicionar vídeo. Verifique se a URL é válida.'\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDelete = async (videoId: string) => {\n    try {\n      await videoService.deleteVideo(videoId);\n      setVideos(prev => prev.filter(video => video.id !== videoId));\n    } catch (error) {\n      console.error('Erro ao deletar vídeo:', error);\n    }\n  };\n\n  const getEmbedUrl = (url: string) => {\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        const videoId = url.includes('youtube.com') \n          ? url.split('v=')[1]?.split('&')[0]\n          : url.split('youtu.be/')[1]?.split('?')[0];\n        \n        return `https://www.youtube.com/embed/${videoId}`;\n      }\n      if (url.includes('vimeo.com')) {\n        const videoId = url.split('vimeo.com/')[1]?.split('?')[0];\n        return `https://player.vimeo.com/video/${videoId}`;\n      }\n      return url;\n    } catch (error) {\n      console.error('Erro ao processar URL:', error);\n      return url;\n    }\n  };\n\n  const getVideoTitle = async (url: string): Promise<string> => {\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        const videoId = url.includes('youtube.com')\n          ? url.split('v=')[1]?.split('&')[0]\n          : url.split('youtu.be/')[1]?.split('?')[0];\n        \n        const response = await fetch(\n          `https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}&part=snippet`\n        );\n        const data = await response.json();\n        \n        if (data.error) {\n          console.error('Erro da API do YouTube:', data.error);\n          return 'Vídeo do YouTube';\n        }\n\n        return data.items[0]?.snippet?.title || 'Vídeo do YouTube';\n      }\n      \n      if (url.includes('vimeo.com')) {\n        const videoId = url.split('vimeo.com/')[1]?.split('?')[0];\n        const response = await fetch(`https://vimeo.com/api/v2/video/${videoId}.json`);\n        const data = await response.json();\n        return data[0]?.title || 'Vídeo do Vimeo';\n      }\n      \n      return 'Vídeo';\n    } catch (error) {\n      console.error('Erro ao obter título do vídeo:', error);\n      return 'Vídeo';\n    }\n  };\n\n  const handleStateChange = (event: any) => {\n    if (event.data === 0) { // vídeo terminou\n      setIsPlaying(false);\n      window.dispatchEvent(new Event('externalMediaStop'));\n      \n      if (pendingVideoId) {\n        const pendingVideo = videos.find(v => v.id === pendingVideoId);\n        if (pendingVideo) {\n          setSelectedVideo(pendingVideo);\n          setIsPlaying(true);\n        }\n      }\n      \n      onEnded();\n    } else if (event.data === 1) { // vídeo começou a tocar\n      setIsPlaying(true);\n      window.dispatchEvent(new Event('externalMediaPlay'));\n    } else if (event.data === 2) { // vídeo foi pausado\n      setIsPlaying(false);\n      window.dispatchEvent(new Event('externalMediaStop'));\n    }\n  };\n\n  return (\n    <div className=\"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\">\n      {/* Formulário de busca */}\n      <form onSubmit={handleAddVideo} className=\"mb-3\">\n        <div className=\"flex flex-col gap-2\">\n          <input\n            type=\"url\"\n            value={newVideoUrl}\n            onChange={(e) => setNewVideoUrl(e.target.value)}\n            placeholder=\"Cole a URL do YouTube ou Vimeo aqui\"\n            className=\"w-full bg-[#2d2d2d] border border-[#404040] text-gray-200 rounded px-3 py-2 focus:border-[#e1aa1e] focus:outline-none\"\n            disabled={isLoading}\n          />\n          {error && <p className=\"text-red-400 text-sm\">{error}</p>}\n        </div>\n      </form>\n\n      {/* Botões de ação */}\n      <div className=\"flex gap-2 mb-3\">\n        <button\n          type=\"button\"\n          onClick={() => handleAddVideo()}\n          className={`flex-1 ${\n            isLoading \n              ? 'bg-[#e1aa1e]/50 cursor-not-allowed' \n              : 'bg-[#e1aa1e] hover:bg-[#e1aa1e]/80'\n          } text-gray-900 px-3 py-1.5 rounded transition-colors flex items-center justify-center gap-2`}\n          disabled={isLoading}\n        >\n          <svg\n            className=\"w-4 h-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M12 4v16m8-8H4\"\n            />\n          </svg>\n          {isLoading ? 'Adicionando...' : 'Buscar Vídeo'}\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsSidebarOpen(true)}\n          className=\"flex-1 bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-3 py-1.5 rounded flex items-center justify-center gap-2 transition-colors\"\n        >\n          <svg\n            className=\"w-4 h-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M4 6h16M4 12h16M4 18h16\"\n            />\n          </svg>\n          Últimos Vídeos\n        </button>\n      </div>\n\n      {/* Área do vídeo */}\n      <div>\n        {(selectedVideo || videos[0]) ? (\n          <div className=\"rounded-lg overflow-hidden border border-[#404040]\">\n            <div className=\"relative pt-[56.25%]\">\n              <div id=\"player-container\" className=\"absolute top-0 left-0 w-full h-full\">\n                <div id=\"youtube-player\" className=\"w-full h-full\"></div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"text-center p-6 text-gray-400 bg-[#2d2d2d] rounded-lg border border-[#404040]\">\n            Nenhum vídeo disponível. Adicione um vídeo para começar.\n          </div>\n        )}\n      </div>\n\n      {/* Menu lateral */}\n      <VideoSidebar\n        isOpen={isSidebarOpen}\n        onClose={() => setIsSidebarOpen(false)}\n        videos={videos}\n        onVideoSelect={handleVideoSelect}\n      />\n    </div>\n  );\n};\n\nexport default VideoPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}