{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genil\\\\pasta teste\\\\src\\\\components\\\\AudioPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { audioService } from '../lib/supabase';\nimport { supabase } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  onEnded,\n  isPlaying,\n  setIsPlaying\n}) => {\n  _s();\n  const [audios, setAudios] = useState([]);\n  const [currentAudio, setCurrentAudio] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const audioRef = useRef(null);\n  const [audioTimers, setAudioTimers] = useState({});\n  const [showIntervalInput, setShowIntervalInput] = useState(null);\n  const timersRef = useRef({});\n  useEffect(() => {\n    loadAudios();\n  }, []);\n  useEffect(() => {\n    if (audioRef.current) {\n      console.log('Estado de reprodução mudou:', isPlaying);\n      if (isPlaying) {\n        audioRef.current.currentTime = 0;\n        audioRef.current.play().catch(error => {\n          console.error('Erro ao reproduzir áudio:', error);\n          setIsPlaying(false);\n        });\n      } else {\n        audioRef.current.pause();\n      }\n    }\n  }, [isPlaying]);\n  useEffect(() => {\n    if (audioRef.current && currentAudio) {\n      console.log('Áudio atual mudou');\n      audioRef.current.currentTime = 0;\n      if (isPlaying) {\n        audioRef.current.play().catch(console.error);\n      }\n    }\n  }, [currentAudio]);\n  useEffect(() => {\n    return () => {\n      Object.values(timersRef.current).forEach(timer => {\n        clearInterval(timer);\n      });\n    };\n  }, []);\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.onended = () => {\n        console.log('Áudio terminou (evento nativo)');\n        handleAudioEnd();\n      };\n    }\n  }, [audioRef.current]);\n  useEffect(() => {\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      if (timer.timeLeft === 0) {\n        if (audioRef.current && (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId) {\n          console.log('Timer zerou, reiniciando áudio');\n          audioRef.current.currentTime = 0;\n\n          // Notificar que terminou e resetar o timer\n          onEnded();\n          setAudioTimers(prev => ({\n            ...prev,\n            [audioId]: {\n              ...timer,\n              timeLeft: timer.interval\n            }\n          }));\n        }\n      }\n    });\n  }, [audioTimers, currentAudio]);\n  useEffect(() => {\n    const playAudio = async () => {\n      if (audioRef.current && isPlaying) {\n        console.log('Tentando reproduzir áudio');\n        try {\n          await audioRef.current.play();\n          console.log('Áudio começou a tocar');\n        } catch (error) {\n          console.error('Erro ao reproduzir áudio:', error);\n          setIsPlaying(false);\n        }\n      }\n    };\n    playAudio();\n  }, [isPlaying]);\n  useEffect(() => {\n    console.log('Estado atual:', {\n      isPlaying,\n      currentAudio: currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id,\n      timers: audioTimers\n    });\n  }, [isPlaying, currentAudio, audioTimers]);\n  const loadAudios = async () => {\n    try {\n      const data = await audioService.getAudios();\n      console.log('Áudios carregados:', data); // Para debug\n      setAudios(data);\n    } catch (error) {\n      console.error('Erro ao carregar áudios:', error);\n    }\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const progress = audioRef.current.currentTime / audioRef.current.duration * 100;\n      setProgress(progress);\n    }\n  };\n  const handleProgressClick = e => {\n    if (audioRef.current) {\n      const bounds = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - bounds.left;\n      const width = bounds.width;\n      const percentage = x / width;\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\n    }\n  };\n  const handleAudioEnd = () => {\n    console.log('Chamando handleAudioEnd');\n    setIsPlaying(false);\n    onEnded();\n    setProgress(0);\n  };\n  const togglePlay = audio => {\n    if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id) {\n      setIsPlaying(!isPlaying);\n    } else {\n      setCurrentAudio(audio);\n      setIsPlaying(true);\n    }\n  };\n  const handleUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    setIsUploading(true);\n    try {\n      console.log('Iniciando upload do arquivo:', file.name);\n\n      // Upload do arquivo\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${Math.random()}.${fileExt}`;\n      const filePath = `audios/${fileName}`;\n      console.log('Tentando fazer upload para:', filePath);\n      const {\n        data: uploadData,\n        error: uploadError\n      } = await supabase.storage.from('media').upload(filePath, file);\n      if (uploadError) {\n        console.error('Erro no upload:', uploadError);\n        throw uploadError;\n      }\n      console.log('Upload bem sucedido:', uploadData);\n\n      // Obtém a URL pública\n      const {\n        data: {\n          publicUrl\n        }\n      } = supabase.storage.from('media').getPublicUrl(filePath);\n      console.log('URL pública gerada:', publicUrl);\n\n      // Adiciona ao banco de dados\n      const newAudio = await audioService.addAudio({\n        title: file.name,\n        url: publicUrl,\n        is_auto_play: false\n      });\n      console.log('Áudio adicionado ao banco:', newAudio);\n\n      // Recarrega todos os áudios\n      await loadAudios();\n\n      // Seleciona o novo áudio\n      setCurrentAudio(newAudio);\n\n      // Limpa o input\n      event.target.value = '';\n    } catch (error) {\n      console.error('Erro detalhado no upload:', error);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const startRepeatTimer = (audioId, minutes) => {\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n    }\n    const seconds = minutes * 60;\n    const intervalId = setInterval(() => {\n      setAudioTimers(prev => {\n        const currentTimer = prev[audioId];\n        if (!currentTimer) return prev;\n        const newTimeLeft = currentTimer.timeLeft - 1;\n        if (newTimeLeft === 0) {\n          return {\n            ...prev,\n            [audioId]: {\n              ...currentTimer,\n              timeLeft: currentTimer.interval\n            }\n          };\n        }\n        return {\n          ...prev,\n          [audioId]: {\n            ...currentTimer,\n            timeLeft: newTimeLeft\n          }\n        };\n      });\n    }, 1000);\n    timersRef.current[audioId] = intervalId;\n    setAudioTimers(prev => ({\n      ...prev,\n      [audioId]: {\n        interval: seconds,\n        timeLeft: seconds,\n        intervalId\n      }\n    }));\n    setShowIntervalInput(null);\n  };\n  const stopRepeatTimer = audioId => {\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n      delete timersRef.current[audioId];\n    }\n    setAudioTimers(prev => {\n      const newTimers = {\n        ...prev\n      };\n      delete newTimers[audioId];\n      return newTimers;\n    });\n  };\n  const handleDelete = async audioId => {\n    try {\n      await audioService.deleteAudio(audioId);\n      if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId) {\n        setCurrentAudio(null);\n        setIsPlaying(false);\n      }\n      await loadAudios();\n    } catch (error) {\n      console.error('Erro ao deletar áudio:', error);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 bg-[#2d2d2d] rounded-lg p-4 border border-[#404040]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-[#e1aa1e] font-medium truncate\",\n          children: (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.title) || 'Selecione um áudio'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.url,\n        onTimeUpdate: handleTimeUpdate,\n        onEnded: handleAudioEnd,\n        className: \"hidden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-1 bg-[#404040] rounded-full cursor-pointer\",\n        onClick: handleProgressClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-full bg-[#e1aa1e] rounded-full\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between text-xs text-gray-400 mt-1 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: audioRef.current ? `${Math.floor(audioRef.current.currentTime / 60)}:${String(Math.floor(audioRef.current.currentTime % 60)).padStart(2, '0')}` : '0:00'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: audioRef.current ? `${Math.floor(audioRef.current.duration / 60)}:${String(Math.floor(audioRef.current.duration % 60)).padStart(2, '0')}` : '0:00'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => currentAudio && togglePlay(currentAudio),\n          className: \"p-2 hover:bg-[#404040] rounded-full transition-colors\",\n          disabled: !currentAudio,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-8 h-8 text-[#e1aa1e]\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: isPlaying ? /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm text-gray-400 px-2\",\n        children: \"Lista de \\xC1udios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"bg-[#e1aa1e] hover:bg-[#e1aa1e]/80 text-gray-900 px-3 py-1.5 rounded cursor-pointer transition-colors text-sm\",\n        children: [isUploading ? 'Enviando...' : 'Anexar Áudio', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"hidden\",\n          accept: \"audio/*\",\n          onChange: handleUpload,\n          disabled: isUploading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2 max-h-[400px] overflow-y-auto\",\n      children: audios.map(audio => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors ${(currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id ? 'bg-[#2d2d2d]' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => togglePlay(audio),\n          className: \"p-1 hover:bg-[#404040] rounded-full transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-6 h-6 text-[#e1aa1e]\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: isPlaying && (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id ? /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"flex-1 truncate\",\n          children: audio.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1\",\n            children: showIntervalInput === audio.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"1\",\n                placeholder: \"Min\",\n                className: \"w-16 px-2 py-1 bg-[#2d2d2d] border border-[#404040] rounded text-gray-200 [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\",\n                onKeyDown: e => {\n                  if (e.key === 'Enter') {\n                    const value = parseInt(e.target.value);\n                    if (value > 0) startRepeatTimer(audio.id, value);\n                  }\n                },\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  const input = document.querySelector('input[type=\"number\"]');\n                  const value = parseInt(input.value);\n                  if (value > 0) startRepeatTimer(audio.id, value);\n                },\n                className: \"text-[#e1aa1e] hover:text-[#e1aa1e]/80 text-sm px-2 py-1\",\n                children: \"OK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  if (audioTimers[audio.id]) {\n                    stopRepeatTimer(audio.id);\n                  } else {\n                    setShowIntervalInput(audio.id);\n                  }\n                },\n                className: `p-1 hover:bg-[#404040] rounded-full transition-colors ${audioTimers[audio.id] ? 'text-[#e1aa1e]' : 'text-gray-400'}`,\n                title: audioTimers[audio.id] ? 'Parar repetição' : 'Repetir',\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"w-5 h-5\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  viewBox: \"0 0 24 24\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    strokeWidth: 2,\n                    d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 21\n              }, this), audioTimers[audio.id] && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-[#e1aa1e]\",\n                children: formatTime(audioTimers[audio.id].timeLeft)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(audio.id),\n            className: \"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-5 h-5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, this)]\n      }, audio.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"PvjDhyb3B46dUrQhTYWBKoKV/CA=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","audioService","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioPlayer","onEnded","isPlaying","setIsPlaying","_s","audios","setAudios","currentAudio","setCurrentAudio","progress","setProgress","isUploading","setIsUploading","audioRef","audioTimers","setAudioTimers","showIntervalInput","setShowIntervalInput","timersRef","loadAudios","current","console","log","currentTime","play","catch","error","pause","Object","values","forEach","timer","clearInterval","onended","handleAudioEnd","entries","audioId","timeLeft","id","prev","interval","playAudio","timers","data","getAudios","handleTimeUpdate","duration","handleProgressClick","e","bounds","currentTarget","getBoundingClientRect","x","clientX","left","width","percentage","togglePlay","audio","handleUpload","event","_event$target$files","file","target","files","name","fileExt","split","pop","fileName","Math","random","filePath","uploadData","uploadError","storage","from","upload","publicUrl","getPublicUrl","newAudio","addAudio","title","url","is_auto_play","value","startRepeatTimer","minutes","seconds","intervalId","setInterval","currentTimer","newTimeLeft","stopRepeatTimer","newTimers","handleDelete","deleteAudio","formatTime","mins","floor","secs","toString","padStart","className","children","_jsxFileName","lineNumber","columnNumber","ref","src","onTimeUpdate","onClick","style","String","disabled","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","type","accept","onChange","map","min","placeholder","onKeyDown","key","parseInt","autoFocus","input","document","querySelector","_c","$RefreshReg$"],"sources":["C:/Users/genil/pasta teste/src/components/AudioPlayer.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { audioService, AudioData } from '../lib/supabase';\r\nimport { supabase } from '../lib/supabase';\r\n\r\ninterface AudioTimer {\r\n  interval: number;\r\n  timeLeft: number;\r\n  intervalId: NodeJS.Timeout;\r\n}\r\n\r\ninterface AudioPlayerProps {\r\n  onEnded: () => void;\r\n  isPlaying: boolean;\r\n  setIsPlaying: (playing: boolean) => void;\r\n}\r\n\r\nconst AudioPlayer: React.FC<AudioPlayerProps> = ({ onEnded, isPlaying, setIsPlaying }) => {\r\n  const [audios, setAudios] = useState<AudioData[]>([]);\r\n  const [currentAudio, setCurrentAudio] = useState<AudioData | null>(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const audioRef = useRef<HTMLAudioElement>(null);\r\n  const [audioTimers, setAudioTimers] = useState<Record<string, AudioTimer>>({});\r\n  const [showIntervalInput, setShowIntervalInput] = useState<string | null>(null);\r\n  const timersRef = useRef<Record<string, NodeJS.Timeout>>({});\r\n\r\n  useEffect(() => {\r\n    loadAudios();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      console.log('Estado de reprodução mudou:', isPlaying);\r\n      if (isPlaying) {\r\n        audioRef.current.currentTime = 0;\r\n        audioRef.current.play().catch(error => {\r\n          console.error('Erro ao reproduzir áudio:', error);\r\n          setIsPlaying(false);\r\n        });\r\n      } else {\r\n        audioRef.current.pause();\r\n      }\r\n    }\r\n  }, [isPlaying]);\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current && currentAudio) {\r\n      console.log('Áudio atual mudou');\r\n      audioRef.current.currentTime = 0;\r\n      if (isPlaying) {\r\n        audioRef.current.play().catch(console.error);\r\n      }\r\n    }\r\n  }, [currentAudio]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      Object.values(timersRef.current).forEach(timer => {\r\n        clearInterval(timer);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      audioRef.current.onended = () => {\r\n        console.log('Áudio terminou (evento nativo)');\r\n        handleAudioEnd();\r\n      };\r\n    }\r\n  }, [audioRef.current]);\r\n\r\n  useEffect(() => {\r\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\r\n      if (timer.timeLeft === 0) {\r\n        if (audioRef.current && currentAudio?.id === audioId) {\r\n          console.log('Timer zerou, reiniciando áudio');\r\n          audioRef.current.currentTime = 0;\r\n          \r\n          // Notificar que terminou e resetar o timer\r\n          onEnded();\r\n          setAudioTimers(prev => ({\r\n            ...prev,\r\n            [audioId]: {\r\n              ...timer,\r\n              timeLeft: timer.interval\r\n            }\r\n          }));\r\n        }\r\n      }\r\n    });\r\n  }, [audioTimers, currentAudio]);\r\n\r\n  useEffect(() => {\r\n    const playAudio = async () => {\r\n      if (audioRef.current && isPlaying) {\r\n        console.log('Tentando reproduzir áudio');\r\n        try {\r\n          await audioRef.current.play();\r\n          console.log('Áudio começou a tocar');\r\n        } catch (error) {\r\n          console.error('Erro ao reproduzir áudio:', error);\r\n          setIsPlaying(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    playAudio();\r\n  }, [isPlaying]);\r\n\r\n  useEffect(() => {\r\n    console.log('Estado atual:', {\r\n      isPlaying,\r\n      currentAudio: currentAudio?.id,\r\n      timers: audioTimers\r\n    });\r\n  }, [isPlaying, currentAudio, audioTimers]);\r\n\r\n  const loadAudios = async () => {\r\n    try {\r\n      const data = await audioService.getAudios();\r\n      console.log('Áudios carregados:', data); // Para debug\r\n      setAudios(data);\r\n    } catch (error) {\r\n      console.error('Erro ao carregar áudios:', error);\r\n    }\r\n  };\r\n\r\n  const handleTimeUpdate = () => {\r\n    if (audioRef.current) {\r\n      const progress = (audioRef.current.currentTime / audioRef.current.duration) * 100;\r\n      setProgress(progress);\r\n    }\r\n  };\r\n\r\n  const handleProgressClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if (audioRef.current) {\r\n      const bounds = e.currentTarget.getBoundingClientRect();\r\n      const x = e.clientX - bounds.left;\r\n      const width = bounds.width;\r\n      const percentage = x / width;\r\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\r\n    }\r\n  };\r\n\r\n  const handleAudioEnd = () => {\r\n    console.log('Chamando handleAudioEnd');\r\n    setIsPlaying(false);\r\n    onEnded();\r\n    setProgress(0);\r\n  };\r\n\r\n  const togglePlay = (audio: AudioData) => {\r\n    if (currentAudio?.id === audio.id) {\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      setCurrentAudio(audio);\r\n      setIsPlaying(true);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    setIsUploading(true);\r\n    try {\r\n      console.log('Iniciando upload do arquivo:', file.name);\r\n      \r\n      // Upload do arquivo\r\n      const fileExt = file.name.split('.').pop();\r\n      const fileName = `${Math.random()}.${fileExt}`;\r\n      const filePath = `audios/${fileName}`;\r\n\r\n      console.log('Tentando fazer upload para:', filePath);\r\n\r\n      const { data: uploadData, error: uploadError } = await supabase.storage\r\n        .from('media')\r\n        .upload(filePath, file);\r\n\r\n      if (uploadError) {\r\n        console.error('Erro no upload:', uploadError);\r\n        throw uploadError;\r\n      }\r\n\r\n      console.log('Upload bem sucedido:', uploadData);\r\n\r\n      // Obtém a URL pública\r\n      const { data: { publicUrl } } = supabase.storage\r\n        .from('media')\r\n        .getPublicUrl(filePath);\r\n\r\n      console.log('URL pública gerada:', publicUrl);\r\n\r\n      // Adiciona ao banco de dados\r\n      const newAudio = await audioService.addAudio({\r\n        title: file.name,\r\n        url: publicUrl,\r\n        is_auto_play: false\r\n      });\r\n\r\n      console.log('Áudio adicionado ao banco:', newAudio);\r\n\r\n      // Recarrega todos os áudios\r\n      await loadAudios();\r\n      \r\n      // Seleciona o novo áudio\r\n      setCurrentAudio(newAudio);\r\n      \r\n      // Limpa o input\r\n      event.target.value = '';\r\n\r\n    } catch (error) {\r\n      console.error('Erro detalhado no upload:', error);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const startRepeatTimer = (audioId: string, minutes: number) => {\r\n    if (timersRef.current[audioId]) {\r\n      clearInterval(timersRef.current[audioId]);\r\n    }\r\n\r\n    const seconds = minutes * 60;\r\n    \r\n    const intervalId = setInterval(() => {\r\n      setAudioTimers(prev => {\r\n        const currentTimer = prev[audioId];\r\n        if (!currentTimer) return prev;\r\n\r\n        const newTimeLeft = currentTimer.timeLeft - 1;\r\n        \r\n        if (newTimeLeft === 0) {\r\n          return {\r\n            ...prev,\r\n            [audioId]: {\r\n              ...currentTimer,\r\n              timeLeft: currentTimer.interval\r\n            }\r\n          };\r\n        }\r\n\r\n        return {\r\n          ...prev,\r\n          [audioId]: {\r\n            ...currentTimer,\r\n            timeLeft: newTimeLeft\r\n          }\r\n        };\r\n      });\r\n    }, 1000);\r\n\r\n    timersRef.current[audioId] = intervalId;\r\n\r\n    setAudioTimers(prev => ({\r\n      ...prev,\r\n      [audioId]: {\r\n        interval: seconds,\r\n        timeLeft: seconds,\r\n        intervalId\r\n      }\r\n    }));\r\n\r\n    setShowIntervalInput(null);\r\n  };\r\n\r\n  const stopRepeatTimer = (audioId: string) => {\r\n    if (timersRef.current[audioId]) {\r\n      clearInterval(timersRef.current[audioId]);\r\n      delete timersRef.current[audioId];\r\n    }\r\n\r\n    setAudioTimers(prev => {\r\n      const newTimers = { ...prev };\r\n      delete newTimers[audioId];\r\n      return newTimers;\r\n    });\r\n  };\r\n\r\n  const handleDelete = async (audioId: string) => {\r\n    try {\r\n      await audioService.deleteAudio(audioId);\r\n      if (currentAudio?.id === audioId) {\r\n        setCurrentAudio(null);\r\n        setIsPlaying(false);\r\n      }\r\n      await loadAudios();\r\n    } catch (error) {\r\n      console.error('Erro ao deletar áudio:', error);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds: number): string => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = Math.floor(seconds % 60);\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\">\r\n      {/* Player Central */}\r\n      <div className=\"mb-3 bg-[#2d2d2d] rounded-lg p-4 border border-[#404040]\">\r\n        <div className=\"mb-3\">\r\n          <h3 className=\"text-[#e1aa1e] font-medium truncate\">\r\n            {currentAudio?.title || 'Selecione um áudio'}\r\n          </h3>\r\n        </div>\r\n\r\n        <audio\r\n          ref={audioRef}\r\n          src={currentAudio?.url}\r\n          onTimeUpdate={handleTimeUpdate}\r\n          onEnded={handleAudioEnd}\r\n          className=\"hidden\"\r\n        />\r\n\r\n        {/* Barra de Progresso */}\r\n        <div\r\n          className=\"h-1 bg-[#404040] rounded-full cursor-pointer\"\r\n          onClick={handleProgressClick}\r\n        >\r\n          <div\r\n            className=\"h-full bg-[#e1aa1e] rounded-full\"\r\n            style={{ width: `${progress}%` }}\r\n          />\r\n        </div>\r\n\r\n        {/* Tempo */}\r\n        <div className=\"flex justify-between text-xs text-gray-400 mt-1 mb-3\">\r\n          <span>\r\n            {audioRef.current\r\n              ? `${Math.floor(audioRef.current.currentTime / 60)}:${String(\r\n                  Math.floor(audioRef.current.currentTime % 60)\r\n                ).padStart(2, '0')}`\r\n              : '0:00'}\r\n          </span>\r\n          <span>\r\n            {audioRef.current\r\n              ? `${Math.floor(audioRef.current.duration / 60)}:${String(\r\n                  Math.floor(audioRef.current.duration % 60)\r\n                ).padStart(2, '0')}`\r\n              : '0:00'}\r\n          </span>\r\n        </div>\r\n\r\n        {/* Controle Principal */}\r\n        <div className=\"flex justify-center\">\r\n          <button\r\n            onClick={() => currentAudio && togglePlay(currentAudio)}\r\n            className=\"p-2 hover:bg-[#404040] rounded-full transition-colors\"\r\n            disabled={!currentAudio}\r\n          >\r\n            <svg\r\n              className=\"w-8 h-8 text-[#e1aa1e]\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              {isPlaying ? (\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                />\r\n              ) : (\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                />\r\n              )}\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Painel de Controle */}\r\n      <div className=\"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\">\r\n        <span className=\"text-sm text-gray-400 px-2\">Lista de Áudios</span>\r\n        <label className=\"bg-[#e1aa1e] hover:bg-[#e1aa1e]/80 text-gray-900 px-3 py-1.5 rounded cursor-pointer transition-colors text-sm\">\r\n          {isUploading ? 'Enviando...' : 'Anexar Áudio'}\r\n          <input\r\n            type=\"file\"\r\n            className=\"hidden\"\r\n            accept=\"audio/*\"\r\n            onChange={handleUpload}\r\n            disabled={isUploading}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      {/* Lista de Áudios */}\r\n      <div className=\"space-y-2 max-h-[400px] overflow-y-auto\">\r\n        {audios.map((audio) => (\r\n          <div\r\n            key={audio.id}\r\n            className={`flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors ${\r\n              currentAudio?.id === audio.id ? 'bg-[#2d2d2d]' : ''\r\n            }`}\r\n          >\r\n            <button\r\n              onClick={() => togglePlay(audio)}\r\n              className=\"p-1 hover:bg-[#404040] rounded-full transition-colors\"\r\n            >\r\n              <svg\r\n                className=\"w-6 h-6 text-[#e1aa1e]\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                {isPlaying && currentAudio?.id === audio.id ? (\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                ) : (\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                )}\r\n              </svg>\r\n            </button>\r\n            <span className=\"flex-1 truncate\">{audio.title}</span>\r\n            \r\n            {/* Controles do item */}\r\n            <div className=\"flex items-center gap-2\">\r\n              <div className=\"flex items-center gap-1\">\r\n                {showIntervalInput === audio.id ? (\r\n                  <div className=\"flex items-center gap-1\">\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      placeholder=\"Min\"\r\n                      className=\"w-16 px-2 py-1 bg-[#2d2d2d] border border-[#404040] rounded text-gray-200 [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\"\r\n                      onKeyDown={(e) => {\r\n                        if (e.key === 'Enter') {\r\n                          const value = parseInt((e.target as HTMLInputElement).value);\r\n                          if (value > 0) startRepeatTimer(audio.id, value);\r\n                        }\r\n                      }}\r\n                      autoFocus\r\n                    />\r\n                    <button\r\n                      onClick={() => {\r\n                        const input = document.querySelector('input[type=\"number\"]') as HTMLInputElement;\r\n                        const value = parseInt(input.value);\r\n                        if (value > 0) startRepeatTimer(audio.id, value);\r\n                      }}\r\n                      className=\"text-[#e1aa1e] hover:text-[#e1aa1e]/80 text-sm px-2 py-1\"\r\n                    >\r\n                      OK\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <button\r\n                      onClick={() => {\r\n                        if (audioTimers[audio.id]) {\r\n                          stopRepeatTimer(audio.id);\r\n                        } else {\r\n                          setShowIntervalInput(audio.id);\r\n                        }\r\n                      }}\r\n                      className={`p-1 hover:bg-[#404040] rounded-full transition-colors ${\r\n                        audioTimers[audio.id] ? 'text-[#e1aa1e]' : 'text-gray-400'\r\n                      }`}\r\n                      title={audioTimers[audio.id] ? 'Parar repetição' : 'Repetir'}\r\n                    >\r\n                      <svg\r\n                        className=\"w-5 h-5\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        viewBox=\"0 0 24 24\"\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth={2}\r\n                          d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n                    {audioTimers[audio.id] && (\r\n                      <span className=\"text-xs text-[#e1aa1e]\">\r\n                        {formatTime(audioTimers[audio.id].timeLeft)}\r\n                      </span>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              <button\r\n                onClick={() => handleDelete(audio.id)}\r\n                className=\"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\"\r\n              >\r\n                <svg\r\n                  className=\"w-5 h-5\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioPlayer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}