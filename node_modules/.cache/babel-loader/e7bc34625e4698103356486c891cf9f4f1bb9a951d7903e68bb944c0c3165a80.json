{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genil\\\\pasta teste\\\\src\\\\components\\\\VideoPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { videoService } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [newVideoUrl, setNewVideoUrl] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    loadVideos();\n  }, []);\n  const loadVideos = async () => {\n    try {\n      const data = await videoService.getRecentVideos();\n      setVideos(data);\n    } catch (error) {\n      console.error('Erro ao carregar vídeos:', error);\n    }\n  };\n\n  // Função para converter URL do YouTube em formato embed\n  const getEmbedUrl = url => {\n    console.log('URL original:', url);\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        var _url$split$, _url$split$2;\n        const videoId = url.includes('youtube.com') ? (_url$split$ = url.split('v=')[1]) === null || _url$split$ === void 0 ? void 0 : _url$split$.split('&')[0] : (_url$split$2 = url.split('youtu.be/')[1]) === null || _url$split$2 === void 0 ? void 0 : _url$split$2.split('?')[0];\n        const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      if (url.includes('vimeo.com')) {\n        var _url$split$3;\n        const videoId = (_url$split$3 = url.split('vimeo.com/')[1]) === null || _url$split$3 === void 0 ? void 0 : _url$split$3.split('?')[0];\n        const embedUrl = `https://player.vimeo.com/video/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      return url;\n    } catch (error) {\n      console.error('Erro ao processar URL:', error);\n      return url;\n    }\n  };\n  const handleAddVideo = async e => {\n    e.preventDefault();\n    setError('');\n    if (!newVideoUrl.trim()) {\n      setError('Por favor, insira uma URL válida');\n      return;\n    }\n    try {\n      const embedUrl = getEmbedUrl(newVideoUrl);\n      console.log('Enviando URL para o servidor:', embedUrl);\n      const newVideo = await videoService.addVideo(embedUrl);\n      console.log('Vídeo adicionado:', newVideo);\n      setVideos(prev => [newVideo, ...prev]);\n      setNewVideoUrl('');\n    } catch (error) {\n      console.error('Erro detalhado:', error);\n      setError(error.message || error.error_description || 'Erro ao adicionar vídeo. Verifique se a URL é válida.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"V\\xEDdeos Recentes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddVideo,\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          value: newVideoUrl,\n          onChange: e => setNewVideoUrl(e.target.value),\n          placeholder: \"Cole a URL do YouTube ou Vimeo aqui\",\n          className: \"flex-1 border rounded px-3 py-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-sm\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\",\n          children: \"Adicionar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative pt-[56.25%]\",\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            src: video.url,\n            className: \"absolute top-0 left-0 w-full h-full rounded\",\n            allowFullScreen: true,\n            allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n            title: `Video ${video.id}`,\n            onError: e => console.error('Erro ao carregar iframe:', e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 text-sm text-gray-500\",\n          children: [\"URL do v\\xEDdeo: \", video.url]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, video.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"8VdU1sZAI6YXjmHuSfFhNMdGdNY=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","videoService","jsxDEV","_jsxDEV","VideoPlayer","_s","videos","setVideos","newVideoUrl","setNewVideoUrl","error","setError","loadVideos","data","getRecentVideos","console","getEmbedUrl","url","log","includes","_url$split$","_url$split$2","videoId","split","embedUrl","_url$split$3","handleAddVideo","e","preventDefault","trim","newVideo","addVideo","prev","message","error_description","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","map","video","src","allowFullScreen","allow","title","id","onError","_c","$RefreshReg$"],"sources":["C:/Users/genil/pasta teste/src/components/VideoPlayer.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { videoService, VideoData } from '../lib/supabase';\r\n\r\nconst VideoPlayer = () => {\r\n  const [videos, setVideos] = useState<VideoData[]>([]);\r\n  const [newVideoUrl, setNewVideoUrl] = useState('');\r\n  const [error, setError] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    loadVideos();\r\n  }, []);\r\n\r\n  const loadVideos = async () => {\r\n    try {\r\n      const data = await videoService.getRecentVideos();\r\n      setVideos(data);\r\n    } catch (error) {\r\n      console.error('Erro ao carregar vídeos:', error);\r\n    }\r\n  };\r\n\r\n  // Função para converter URL do YouTube em formato embed\r\n  const getEmbedUrl = (url: string) => {\r\n    console.log('URL original:', url);\r\n    try {\r\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\r\n        const videoId = url.includes('youtube.com') \r\n          ? url.split('v=')[1]?.split('&')[0]\r\n          : url.split('youtu.be/')[1]?.split('?')[0];\r\n        \r\n        const embedUrl = `https://www.youtube.com/embed/${videoId}`;\r\n        console.log('URL convertida:', embedUrl);\r\n        return embedUrl;\r\n      }\r\n      if (url.includes('vimeo.com')) {\r\n        const videoId = url.split('vimeo.com/')[1]?.split('?')[0];\r\n        const embedUrl = `https://player.vimeo.com/video/${videoId}`;\r\n        console.log('URL convertida:', embedUrl);\r\n        return embedUrl;\r\n      }\r\n      return url;\r\n    } catch (error) {\r\n      console.error('Erro ao processar URL:', error);\r\n      return url;\r\n    }\r\n  };\r\n\r\n  const handleAddVideo = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    \r\n    if (!newVideoUrl.trim()) {\r\n      setError('Por favor, insira uma URL válida');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const embedUrl = getEmbedUrl(newVideoUrl);\r\n      console.log('Enviando URL para o servidor:', embedUrl);\r\n      \r\n      const newVideo = await videoService.addVideo(embedUrl);\r\n      console.log('Vídeo adicionado:', newVideo);\r\n      \r\n      setVideos(prev => [newVideo, ...prev]);\r\n      setNewVideoUrl('');\r\n    } catch (error: any) {\r\n      console.error('Erro detalhado:', error);\r\n      setError(\r\n        error.message || \r\n        error.error_description || \r\n        'Erro ao adicionar vídeo. Verifique se a URL é válida.'\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow p-4\">\r\n      <h2 className=\"text-xl font-semibold mb-4\">Vídeos Recentes</h2>\r\n      <form onSubmit={handleAddVideo} className=\"mb-4\">\r\n        <div className=\"flex flex-col gap-2\">\r\n          <input\r\n            type=\"url\"\r\n            value={newVideoUrl}\r\n            onChange={(e) => setNewVideoUrl(e.target.value)}\r\n            placeholder=\"Cole a URL do YouTube ou Vimeo aqui\"\r\n            className=\"flex-1 border rounded px-3 py-2\"\r\n          />\r\n          {error && <p className=\"text-red-500 text-sm\">{error}</p>}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\"\r\n          >\r\n            Adicionar\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <div className=\"space-y-4\">\r\n        {videos.map((video) => (\r\n          <div key={video.id} className=\"p-4 border rounded\">\r\n            <div className=\"relative pt-[56.25%]\">\r\n              <iframe\r\n                src={video.url}\r\n                className=\"absolute top-0 left-0 w-full h-full rounded\"\r\n                allowFullScreen\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                title={`Video ${video.id}`}\r\n                onError={(e) => console.error('Erro ao carregar iframe:', e)}\r\n              />\r\n            </div>\r\n            <div className=\"mt-2 text-sm text-gray-500\">\r\n              URL do vídeo: {video.url}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}