{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genil\\\\pasta teste\\\\src\\\\components\\\\AudioPlayer.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { audioService } from '../lib/supabase';\nimport { supabase } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  onEnded,\n  isPlaying,\n  setIsPlaying\n}) => {\n  _s2();\n  var _s = $RefreshSig$(),\n    _audioRef$current3,\n    _audioRef$current4;\n  const [audios, setAudios] = useState([]);\n  const [currentAudio, setCurrentAudio] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const audioRef = useRef(null);\n  const [audioTimers, setAudioTimers] = useState({});\n  const [showIntervalInput, setShowIntervalInput] = useState(null);\n  const timersRef = useRef({});\n  const [timerAudioId, setTimerAudioId] = useState(null);\n  const [pendingAudioId, setPendingAudioId] = useState(null);\n  const [pendingAudios, setPendingAudios] = useState([]);\n  const playAttemptRef = useRef(null);\n  const [editingAudioId, setEditingAudioId] = useState(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [showConfirmDialog, setShowConfirmDialog] = useState(null);\n  const [showTimerDialog, setShowTimerDialog] = useState(null);\n  useEffect(() => {\n    loadAudios();\n  }, []);\n  useEffect(() => {\n    const playAudio = async () => {\n      if (!audioRef.current) return;\n      try {\n        console.log('Tentando reproduzir áudio...');\n        await audioRef.current.play();\n        console.log('Áudio iniciado com sucesso');\n        window.dispatchEvent(new Event('audioPlay'));\n      } catch (error) {\n        console.error('Erro ao reproduzir áudio:', error);\n        if (error instanceof Error && error.name === 'AbortError') {\n          // Limpa qualquer tentativa pendente\n          if (playAttemptRef.current) {\n            clearTimeout(playAttemptRef.current);\n          }\n\n          // Tenta novamente após um delay\n          playAttemptRef.current = setTimeout(async () => {\n            try {\n              var _audioRef$current;\n              console.log('Tentando reproduzir novamente...');\n              await ((_audioRef$current = audioRef.current) === null || _audioRef$current === void 0 ? void 0 : _audioRef$current.play());\n              console.log('Áudio iniciado na segunda tentativa');\n              window.dispatchEvent(new Event('audioPlay'));\n            } catch (retryError) {\n              console.error('Erro na segunda tentativa:', retryError);\n              setIsPlaying(false);\n            }\n          }, 500);\n        } else {\n          setIsPlaying(false);\n        }\n      }\n    };\n    if (audioRef.current) {\n      if (isPlaying) {\n        // Limpa qualquer tentativa pendente antes de iniciar uma nova\n        if (playAttemptRef.current) {\n          clearTimeout(playAttemptRef.current);\n          playAttemptRef.current = null;\n        }\n\n        // Adiciona um pequeno delay antes de tentar reproduzir\n        playAttemptRef.current = setTimeout(() => {\n          playAudio();\n        }, 100);\n      } else {\n        // Limpa qualquer tentativa pendente\n        if (playAttemptRef.current) {\n          clearTimeout(playAttemptRef.current);\n          playAttemptRef.current = null;\n        }\n        audioRef.current.pause();\n        window.dispatchEvent(new Event('audioStop'));\n      }\n    }\n\n    // Cleanup\n    return () => {\n      if (playAttemptRef.current) {\n        clearTimeout(playAttemptRef.current);\n        playAttemptRef.current = null;\n      }\n    };\n  }, [isPlaying]);\n  useEffect(() => {\n    return () => {\n      Object.values(timersRef.current).forEach(timer => {\n        clearInterval(timer);\n      });\n    };\n  }, []);\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.onended = () => {\n        console.log('Áudio terminou (evento nativo)');\n        handleAudioEnd();\n      };\n      audioRef.current.onloadeddata = () => {\n        if (isPlaying) {\n          var _audioRef$current2;\n          (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.play().catch(error => {\n            console.error('Erro ao reproduzir áudio após carregamento:', error);\n            setIsPlaying(false);\n          });\n        }\n      };\n    }\n  }, [audioRef.current]);\n  useEffect(() => {\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      if (timer.timeLeft === 0) {\n        setAudioTimers(prev => ({\n          ...prev,\n          [audioId]: {\n            ...timer,\n            timeLeft: timer.interval\n          }\n        }));\n        if (!isPlaying) {\n          const audio = audios.find(a => a.id === audioId);\n          if (audio && audioRef.current) {\n            const playWithDelay = async () => {\n              try {\n                await new Promise(resolve => setTimeout(resolve, 500));\n                setCurrentAudio(audio);\n                if (audioRef.current) {\n                  audioRef.current.currentTime = 0;\n                  console.log('Tentando reproduzir áudio automático:', audio.title);\n                  await audioRef.current.play();\n                  setIsPlaying(true);\n                  console.log('Áudio automático iniciado com sucesso');\n                }\n              } catch (error) {\n                console.error('Erro ao reproduzir áudio automático:', error);\n                if (error instanceof Error && error.name === 'AbortError') {\n                  console.log('Tentando novamente em 1 segundo...');\n                  setTimeout(async () => {\n                    try {\n                      if (audioRef.current) {\n                        await audioRef.current.play();\n                        setIsPlaying(true);\n                        console.log('Áudio automático iniciado na segunda tentativa');\n                      }\n                    } catch (retryError) {\n                      console.error('Falha na segunda tentativa:', retryError);\n                      console.log('Adicionando à fila de pendentes após falha');\n                      setPendingAudios(prev => prev.includes(audioId) ? prev : [...prev, audioId]);\n                    }\n                  }, 1000);\n                }\n              }\n            };\n            playWithDelay();\n          }\n        } else {\n          console.log('Adicionando áudio à fila de pendentes:', audioId);\n          setPendingAudios(prev => {\n            if (prev.includes(audioId)) return prev;\n            console.log('Fila atualizada:', [...prev, audioId]);\n            return [...prev, audioId];\n          });\n        }\n      }\n    });\n  }, [audioTimers, audios, isPlaying]);\n  const loadAudios = async () => {\n    try {\n      const data = await audioService.getAudios();\n      console.log('Áudios carregados:', data); // Para debug\n      setAudios(data);\n    } catch (error) {\n      console.error('Erro ao carregar áudios:', error);\n    }\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const progress = audioRef.current.currentTime / audioRef.current.duration * 100;\n      setProgress(progress);\n    }\n  };\n  const handleProgressClick = e => {\n    if (audioRef.current) {\n      const bounds = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - bounds.left;\n      const width = bounds.width;\n      const percentage = x / width;\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\n    }\n  };\n  const handleAudioEnd = async () => {\n    console.log('Áudio terminou, verificando pendentes...');\n    console.log('Fila de pendentes:', pendingAudios);\n    if (playAttemptRef.current) {\n      clearTimeout(playAttemptRef.current);\n      playAttemptRef.current = null;\n    }\n    if (audioRef.current) {\n      audioRef.current.currentTime = 0;\n    }\n    setProgress(0);\n\n    // Adiciona um delay antes de verificar a fila de pendentes\n    await new Promise(resolve => setTimeout(resolve, 300));\n    if (pendingAudios.length > 0) {\n      try {\n        console.log('Existem áudios pendentes, reproduzindo próximo...');\n        const nextAudioId = pendingAudios[0];\n        const nextAudio = audios.find(a => a.id === nextAudioId);\n        setPendingAudios(prev => prev.slice(1));\n        if (nextAudio) {\n          console.log('Iniciando reprodução do áudio pendente:', nextAudio.title);\n          // Aumenta o delay antes de iniciar o próximo áudio\n          await new Promise(resolve => setTimeout(resolve, 800));\n          setCurrentAudio(nextAudio);\n          setIsPlaying(true);\n        }\n      } catch (error) {\n        console.error('Erro ao reproduzir próximo áudio:', error);\n        setIsPlaying(false);\n        onEnded();\n      }\n    } else {\n      console.log('Não há áudios pendentes');\n      setIsPlaying(false);\n      onEnded();\n    }\n    window.dispatchEvent(new Event('audioStop'));\n  };\n  const togglePlay = audio => {\n    if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id) {\n      setIsPlaying(!isPlaying);\n    } else {\n      console.log('Mudando para novo áudio manualmente');\n      setCurrentAudio(audio);\n      if (audioRef.current) {\n        audioRef.current.currentTime = 0;\n      }\n      setIsPlaying(true);\n      // Não vamos mais limpar a fila de pendentes ao tocar manualmente\n      // setPendingAudios([]);\n    }\n  };\n  const handleUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    setIsUploading(true);\n    try {\n      console.log('Iniciando upload do arquivo:', file.name);\n\n      // Upload do arquivo\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${Math.random()}.${fileExt}`;\n      const filePath = `audios/${fileName}`;\n      console.log('Tentando fazer upload para:', filePath);\n      const {\n        data: uploadData,\n        error: uploadError\n      } = await supabase.storage.from('media').upload(filePath, file);\n      if (uploadError) {\n        console.error('Erro no upload:', uploadError);\n        throw uploadError;\n      }\n      console.log('Upload bem sucedido:', uploadData);\n\n      // Obtém a URL pública\n      const {\n        data: {\n          publicUrl\n        }\n      } = supabase.storage.from('media').getPublicUrl(filePath);\n      console.log('URL pública gerada:', publicUrl);\n\n      // Adiciona ao banco de dados\n      const newAudio = await audioService.addAudio({\n        title: file.name,\n        url: publicUrl,\n        is_auto_play: false\n      });\n      console.log('Áudio adicionado ao banco:', newAudio);\n\n      // Recarrega todos os áudios\n      await loadAudios();\n\n      // Seleciona o novo áudio\n      setCurrentAudio(newAudio);\n\n      // Limpa o input\n      event.target.value = '';\n    } catch (error) {\n      console.error('Erro detalhado no upload:', error);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const startRepeatTimer = (audioId, minutes) => {\n    // Não vamos mais alterar o áudio atual ou seu estado de reprodução\n    // Apenas armazenamos qual áudio será reproduzido quando o timer zerar\n    setTimerAudioId(audioId);\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n    }\n    const seconds = minutes * 60;\n    const intervalId = setInterval(() => {\n      setAudioTimers(prev => {\n        const currentTimer = prev[audioId];\n        if (!currentTimer) return prev;\n        const newTimeLeft = currentTimer.timeLeft - 1;\n        return {\n          ...prev,\n          [audioId]: {\n            ...currentTimer,\n            timeLeft: newTimeLeft\n          }\n        };\n      });\n    }, 1000);\n    timersRef.current[audioId] = intervalId;\n    setAudioTimers(prev => ({\n      ...prev,\n      [audioId]: {\n        interval: seconds,\n        timeLeft: seconds,\n        intervalId\n      }\n    }));\n    setShowIntervalInput(null);\n  };\n  const stopRepeatTimer = audioId => {\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n      delete timersRef.current[audioId];\n    }\n    setAudioTimers(prev => {\n      const newTimers = {\n        ...prev\n      };\n      delete newTimers[audioId];\n      return newTimers;\n    });\n  };\n  const handleDelete = async audioId => {\n    try {\n      await audioService.deleteAudio(audioId);\n      if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId) {\n        setCurrentAudio(null);\n        setIsPlaying(false);\n      }\n      await loadAudios();\n    } catch (error) {\n      console.error('Erro ao deletar áudio:', error);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Adicione esta função auxiliar para formatar o tempo do timer\n  const formatTimeLeft = seconds => {\n    if (seconds < 60) {\n      return `${Math.ceil(seconds)}s`;\n    }\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.ceil(seconds % 60);\n    return `${minutes}min ${remainingSeconds}s`;\n  };\n\n  // Modifique a função getNextAudioInfo para verificar os timers ativos\n  const getNextAudioInfo = () => {\n    // Primeiro, verifica se há algum áudio pendente na fila\n    if (pendingAudios.length > 0) {\n      const nextAudioId = pendingAudios[0];\n      const nextAudio = audios.find(a => a.id === nextAudioId);\n      const timer = audioTimers[nextAudioId];\n      return {\n        nextAudio,\n        timer\n      };\n    }\n\n    // Se não há áudios pendentes, procura o próximo áudio agendado\n    let nextScheduledAudio = null;\n    let shortestTime = Infinity;\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      if (timer.timeLeft < shortestTime) {\n        const audio = audios.find(a => a.id === audioId);\n        if (audio) {\n          nextScheduledAudio = {\n            nextAudio: audio,\n            timer: timer\n          };\n          shortestTime = timer.timeLeft;\n        }\n      }\n    });\n    return nextScheduledAudio;\n  };\n  const handleUpdateTitle = async (audioId, newTitle) => {\n    try {\n      await audioService.updateAudio(audioId, {\n        title: newTitle\n      });\n      // Atualiza o estado local dos áudios\n      setAudios(prev => prev.map(audio => audio.id === audioId ? {\n        ...audio,\n        title: newTitle\n      } : audio));\n      // Se o áudio sendo editado é o atual, atualiza também o currentAudio\n      if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId) {\n        setCurrentAudio(prev => prev ? {\n          ...prev,\n          title: newTitle\n        } : null);\n      }\n      setEditingAudioId(null);\n    } catch (error) {\n      console.error('Erro ao atualizar título:', error);\n    }\n  };\n  const ConfirmDialog = ({\n    audioId,\n    onConfirm,\n    onCancel\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black/50 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] max-w-sm w-full mx-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-[#e1aa1e] font-medium mb-3\",\n        children: \"Confirmar a\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300 mb-4\",\n        children: \"Deseja realmente desativar a repeti\\xE7\\xE3o autom\\xE1tica?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onCancel,\n          className: \"px-4 py-2 rounded bg-[#404040] text-gray-200 hover:bg-[#505050] transition-colors\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onConfirm,\n          className: \"px-4 py-2 rounded bg-[#e1aa1e] text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors\",\n          children: \"Confirmar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 477,\n    columnNumber: 5\n  }, this);\n  const SetTimerDialog = ({\n    audioId,\n    audioTitle,\n    onConfirm,\n    onCancel\n  }) => {\n    _s();\n    const [minutes, setMinutes] = useState('');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black/50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-[#2d2d2d] p-6 rounded-lg border border-[#404040] max-w-sm w-full mx-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-[#e1aa1e] font-medium mb-2\",\n          children: \"Configurar Repeti\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300 text-sm mb-4\",\n          children: [\"Defina o intervalo de repeti\\xE7\\xE3o para:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-[#e1aa1e] font-medium\",\n            children: audioTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            value: minutes,\n            onChange: e => setMinutes(e.target.value),\n            placeholder: \"00\",\n            className: \"w-full px-4 py-3 bg-[#1e1e1e] border border-[#404040] rounded text-gray-200 text-center focus:border-[#e1aa1e] focus:outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none pr-12\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"absolute right-4 top-1/2 -translate-y-1/2 text-sm text-gray-400\",\n            children: \"minutos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onCancel,\n            className: \"px-4 py-2 rounded bg-[#404040] text-gray-200 hover:bg-[#505050] transition-colors\",\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const value = parseInt(minutes);\n              if (value > 0) onConfirm(value);\n            },\n            disabled: !minutes || parseInt(minutes) <= 0,\n            className: \"px-4 py-2 rounded bg-[#e1aa1e] text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",\n            children: \"Ativar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 7\n    }, this);\n  };\n  _s(SetTimerDialog, \"qCxpMrjlYFMe5oyW8TjmYFSRLDY=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 bg-[#2d2d2d] rounded-lg p-4 border border-[#404040]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-[#e1aa1e] font-medium\",\n          children: (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.title) || 'Selecione um áudio'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.url,\n        onTimeUpdate: handleTimeUpdate,\n        onEnded: handleAudioEnd,\n        className: \"hidden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-1 bg-[#404040] rounded-full cursor-pointer mb-4\",\n        onClick: handleProgressClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-full bg-[#e1aa1e] rounded-full\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between text-xs text-gray-400 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: formatTime(((_audioRef$current3 = audioRef.current) === null || _audioRef$current3 === void 0 ? void 0 : _audioRef$current3.currentTime) || 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: formatTime(((_audioRef$current4 = audioRef.current) === null || _audioRef$current4 === void 0 ? void 0 : _audioRef$current4.duration) || 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => currentAudio && togglePlay(currentAudio),\n            className: \"p-2 hover:bg-[#404040] rounded-full transition-colors\",\n            disabled: !currentAudio,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-8 h-8 text-[#e1aa1e]\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: isPlaying ? /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this), (() => {\n          const nextInfo = getNextAudioInfo();\n          if (!(nextInfo !== null && nextInfo !== void 0 && nextInfo.nextAudio)) return null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-right bg-[#1e1e1e] px-3 py-1 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-400\",\n                children: [\"Pr\\xF3ximo: \", nextInfo.nextAudio.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 19\n              }, this), nextInfo.timer && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-[#e1aa1e]\",\n                children: [\"Em \", formatTimeLeft(nextInfo.timer.timeLeft)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 15\n          }, this);\n        })()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm text-gray-400 px-2\",\n        children: \"Lista de \\xC1udios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"bg-[#e1aa1e] hover:bg-[#e1aa1e]/80 text-gray-900 px-3 py-1.5 rounded cursor-pointer transition-colors text-sm\",\n        children: [isUploading ? 'Enviando...' : 'Anexar Áudio', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"hidden\",\n          accept: \"audio/*\",\n          onChange: handleUpload,\n          disabled: isUploading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2 max-h-[400px] overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-400 italic mb-2 px-2\",\n        children: \"Clique no \\xEDcone de edi\\xE7\\xE3o ou d\\xEA um duplo clique no nome para renomear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 9\n      }, this), audios.map(audio => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors min-w-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => togglePlay(audio),\n          className: \"p-1 hover:bg-[#404040] rounded-full transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-6 h-6 text-[#e1aa1e]\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: isPlaying && (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id ? /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 13\n        }, this), editingAudioId === audio.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editingTitle,\n          onChange: e => setEditingTitle(e.target.value),\n          onBlur: () => {\n            if (editingTitle.trim() && editingTitle !== audio.title) {\n              handleUpdateTitle(audio.id, editingTitle);\n            } else {\n              setEditingAudioId(null);\n            }\n          },\n          onKeyDown: e => {\n            if (e.key === 'Enter') {\n              if (editingTitle.trim() && editingTitle !== audio.title) {\n                handleUpdateTitle(audio.id, editingTitle);\n              } else {\n                setEditingAudioId(null);\n              }\n            } else if (e.key === 'Escape') {\n              setEditingAudioId(null);\n            }\n          },\n          className: \"flex-1 bg-[#1e1e1e] text-gray-200 px-2 py-1 rounded border border-[#404040] focus:border-[#e1aa1e] focus:outline-none\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 flex items-center group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"truncate cursor-pointer hover:text-[#e1aa1e]\",\n              onDoubleClick: () => {\n                setEditingAudioId(audio.id);\n                setEditingTitle(audio.title);\n              },\n              children: audio.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setEditingAudioId(audio.id);\n                setEditingTitle(audio.title);\n              },\n              className: \"p-1 rounded-full hover:bg-[#404040] opacity-0 group-hover:opacity-100 transition-all ml-1\",\n              title: \"Editar nome\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-4 h-4 text-[#e1aa1e]\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 761,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 755,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 shrink-0\",\n          children: [showTimerDialog === audio.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2 bg-[#1e1e1e] p-2 rounded-lg border border-[#404040]\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"1\",\n                placeholder: \"00\",\n                className: \"w-16 px-2 py-1.5 bg-[#2d2d2d] border border-[#404040] rounded text-gray-200 text-center focus:border-[#e1aa1e] focus:outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none pr-8\",\n                onKeyDown: e => {\n                  if (e.key === 'Enter') {\n                    const value = parseInt(e.target.value);\n                    if (value > 0) startRepeatTimer(audio.id, value);\n                  } else if (e.key === 'Escape') {\n                    setShowIntervalInput(null);\n                  }\n                },\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 777,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"absolute right-2 text-xs text-gray-400 pointer-events-none\",\n                children: \"min\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 792,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  const input = document.querySelector('input[type=\"number\"]');\n                  const value = parseInt(input.value);\n                  if (value > 0) startRepeatTimer(audio.id, value);\n                },\n                className: \"bg-[#e1aa1e] hover:bg-[#e1aa1e]/80 text-gray-900 px-3 py-1.5 rounded text-sm font-medium transition-colors\",\n                children: \"Ativar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 797,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowIntervalInput(null),\n                className: \"bg-[#404040] hover:bg-[#505050] text-gray-200 px-2 py-1.5 rounded text-sm transition-colors\",\n                children: \"Cancelar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 775,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: audioTimers[audio.id] ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowConfirmDialog(audio.id),\n              className: \"flex items-center gap-1.5 px-2 py-1 rounded bg-[#e1aa1e]/10 text-[#e1aa1e] hover:bg-[#e1aa1e]/20 transition-colors\",\n              title: \"Clique para desativar a repeti\\xE7\\xE3o\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-4 h-4\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 829,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 823,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm\",\n                children: formatTimeLeft(audioTimers[audio.id].timeLeft)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 836,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 818,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowIntervalInput(audio.id),\n              className: \"p-1.5 hover:bg-[#404040] rounded transition-colors text-gray-400 hover:text-[#e1aa1e]\",\n              title: \"Ativar repeti\\xE7\\xE3o autom\\xE1tica\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-4 h-4\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 852,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 846,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 841,\n              columnNumber: 23\n            }, this)\n          }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(audio.id),\n            className: \"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-5 h-5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 874,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 13\n        }, this)]\n      }, audio.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 7\n    }, this), showConfirmDialog && /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      audioId: showConfirmDialog,\n      onConfirm: () => {\n        stopRepeatTimer(showConfirmDialog);\n        setShowConfirmDialog(null);\n      },\n      onCancel: () => setShowConfirmDialog(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 888,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 562,\n    columnNumber: 5\n  }, this);\n};\n_s2(AudioPlayer, \"qw9BZ3vaNo0psfB5nM29lFSpOrs=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","audioService","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioPlayer","onEnded","isPlaying","setIsPlaying","_s2","_s","$RefreshSig$","_audioRef$current3","_audioRef$current4","audios","setAudios","currentAudio","setCurrentAudio","progress","setProgress","isUploading","setIsUploading","audioRef","audioTimers","setAudioTimers","showIntervalInput","setShowIntervalInput","timersRef","timerAudioId","setTimerAudioId","pendingAudioId","setPendingAudioId","pendingAudios","setPendingAudios","playAttemptRef","editingAudioId","setEditingAudioId","editingTitle","setEditingTitle","showConfirmDialog","setShowConfirmDialog","showTimerDialog","setShowTimerDialog","loadAudios","playAudio","current","console","log","play","window","dispatchEvent","Event","error","Error","name","clearTimeout","setTimeout","_audioRef$current","retryError","pause","Object","values","forEach","timer","clearInterval","onended","handleAudioEnd","onloadeddata","_audioRef$current2","catch","entries","audioId","timeLeft","prev","interval","audio","find","a","id","playWithDelay","Promise","resolve","currentTime","title","includes","data","getAudios","handleTimeUpdate","duration","handleProgressClick","e","bounds","currentTarget","getBoundingClientRect","x","clientX","left","width","percentage","length","nextAudioId","nextAudio","slice","togglePlay","handleUpload","event","_event$target$files","file","target","files","fileExt","split","pop","fileName","Math","random","filePath","uploadData","uploadError","storage","from","upload","publicUrl","getPublicUrl","newAudio","addAudio","url","is_auto_play","value","startRepeatTimer","minutes","seconds","intervalId","setInterval","currentTimer","newTimeLeft","stopRepeatTimer","newTimers","handleDelete","deleteAudio","formatTime","mins","floor","secs","toString","padStart","formatTimeLeft","ceil","remainingSeconds","getNextAudioInfo","nextScheduledAudio","shortestTime","Infinity","handleUpdateTitle","newTitle","updateAudio","map","ConfirmDialog","onConfirm","onCancel","className","children","_jsxFileName","lineNumber","columnNumber","onClick","SetTimerDialog","audioTitle","setMinutes","type","min","onChange","placeholder","autoFocus","parseInt","disabled","ref","src","onTimeUpdate","style","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","nextInfo","accept","onBlur","trim","onKeyDown","key","onDoubleClick","input","document","querySelector","_c","$RefreshReg$"],"sources":["C:/Users/genil/pasta teste/src/components/AudioPlayer.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { audioService, AudioData } from '../lib/supabase';\r\nimport { supabase } from '../lib/supabase';\r\n\r\ninterface AudioTimer {\r\n  interval: number;\r\n  timeLeft: number;\r\n  intervalId: NodeJS.Timeout;\r\n}\r\n\r\ninterface AudioPlayerProps {\r\n  onEnded: () => void;\r\n  isPlaying: boolean;\r\n  setIsPlaying: (playing: boolean) => void;\r\n}\r\n\r\nconst AudioPlayer: React.FC<AudioPlayerProps> = ({ onEnded, isPlaying, setIsPlaying }) => {\r\n  const [audios, setAudios] = useState<AudioData[]>([]);\r\n  const [currentAudio, setCurrentAudio] = useState<AudioData | null>(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const audioRef = useRef<HTMLAudioElement>(null);\r\n  const [audioTimers, setAudioTimers] = useState<Record<string, AudioTimer>>({});\r\n  const [showIntervalInput, setShowIntervalInput] = useState<string | null>(null);\r\n  const timersRef = useRef<Record<string, NodeJS.Timeout>>({});\r\n  const [timerAudioId, setTimerAudioId] = useState<string | null>(null);\r\n  const [pendingAudioId, setPendingAudioId] = useState<string | null>(null);\r\n  const [pendingAudios, setPendingAudios] = useState<string[]>([]);\r\n  const playAttemptRef = useRef<NodeJS.Timeout | null>(null);\r\n  const [editingAudioId, setEditingAudioId] = useState<string | null>(null);\r\n  const [editingTitle, setEditingTitle] = useState('');\r\n  const [showConfirmDialog, setShowConfirmDialog] = useState<string | null>(null);\r\n  const [showTimerDialog, setShowTimerDialog] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    loadAudios();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const playAudio = async () => {\r\n      if (!audioRef.current) return;\r\n\r\n      try {\r\n        console.log('Tentando reproduzir áudio...');\r\n        await audioRef.current.play();\r\n        console.log('Áudio iniciado com sucesso');\r\n        window.dispatchEvent(new Event('audioPlay'));\r\n      } catch (error: unknown) {\r\n        console.error('Erro ao reproduzir áudio:', error);\r\n        if (error instanceof Error && error.name === 'AbortError') {\r\n          // Limpa qualquer tentativa pendente\r\n          if (playAttemptRef.current) {\r\n            clearTimeout(playAttemptRef.current);\r\n          }\r\n          \r\n          // Tenta novamente após um delay\r\n          playAttemptRef.current = setTimeout(async () => {\r\n            try {\r\n              console.log('Tentando reproduzir novamente...');\r\n              await audioRef.current?.play();\r\n              console.log('Áudio iniciado na segunda tentativa');\r\n              window.dispatchEvent(new Event('audioPlay'));\r\n            } catch (retryError) {\r\n              console.error('Erro na segunda tentativa:', retryError);\r\n              setIsPlaying(false);\r\n            }\r\n          }, 500);\r\n        } else {\r\n          setIsPlaying(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    if (audioRef.current) {\r\n      if (isPlaying) {\r\n        // Limpa qualquer tentativa pendente antes de iniciar uma nova\r\n        if (playAttemptRef.current) {\r\n          clearTimeout(playAttemptRef.current);\r\n          playAttemptRef.current = null;\r\n        }\r\n        \r\n        // Adiciona um pequeno delay antes de tentar reproduzir\r\n        playAttemptRef.current = setTimeout(() => {\r\n          playAudio();\r\n        }, 100);\r\n      } else {\r\n        // Limpa qualquer tentativa pendente\r\n        if (playAttemptRef.current) {\r\n          clearTimeout(playAttemptRef.current);\r\n          playAttemptRef.current = null;\r\n        }\r\n        audioRef.current.pause();\r\n        window.dispatchEvent(new Event('audioStop'));\r\n      }\r\n    }\r\n\r\n    // Cleanup\r\n    return () => {\r\n      if (playAttemptRef.current) {\r\n        clearTimeout(playAttemptRef.current);\r\n        playAttemptRef.current = null;\r\n      }\r\n    };\r\n  }, [isPlaying]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      Object.values(timersRef.current).forEach(timer => {\r\n        clearInterval(timer);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      audioRef.current.onended = () => {\r\n        console.log('Áudio terminou (evento nativo)');\r\n        handleAudioEnd();\r\n      };\r\n\r\n      audioRef.current.onloadeddata = () => {\r\n        if (isPlaying) {\r\n          audioRef.current?.play().catch(error => {\r\n            console.error('Erro ao reproduzir áudio após carregamento:', error);\r\n            setIsPlaying(false);\r\n          });\r\n        }\r\n      };\r\n    }\r\n  }, [audioRef.current]);\r\n\r\n  useEffect(() => {\r\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\r\n      if (timer.timeLeft === 0) {\r\n        setAudioTimers(prev => ({\r\n          ...prev,\r\n          [audioId]: {\r\n            ...timer,\r\n            timeLeft: timer.interval\r\n          }\r\n        }));\r\n\r\n        if (!isPlaying) {\r\n          const audio = audios.find(a => a.id === audioId);\r\n          if (audio && audioRef.current) {\r\n            const playWithDelay = async () => {\r\n              try {\r\n                await new Promise(resolve => setTimeout(resolve, 500));\r\n                setCurrentAudio(audio);\r\n                \r\n                if (audioRef.current) {\r\n                  audioRef.current.currentTime = 0;\r\n                  console.log('Tentando reproduzir áudio automático:', audio.title);\r\n                  await audioRef.current.play();\r\n                  setIsPlaying(true);\r\n                  console.log('Áudio automático iniciado com sucesso');\r\n                }\r\n              } catch (error) {\r\n                console.error('Erro ao reproduzir áudio automático:', error);\r\n                if (error instanceof Error && error.name === 'AbortError') {\r\n                  console.log('Tentando novamente em 1 segundo...');\r\n                  setTimeout(async () => {\r\n                    try {\r\n                      if (audioRef.current) {\r\n                        await audioRef.current.play();\r\n                        setIsPlaying(true);\r\n                        console.log('Áudio automático iniciado na segunda tentativa');\r\n                      }\r\n                    } catch (retryError) {\r\n                      console.error('Falha na segunda tentativa:', retryError);\r\n                      console.log('Adicionando à fila de pendentes após falha');\r\n                      setPendingAudios(prev => \r\n                        prev.includes(audioId) ? prev : [...prev, audioId]\r\n                      );\r\n                    }\r\n                  }, 1000);\r\n                }\r\n              }\r\n            };\r\n\r\n            playWithDelay();\r\n          }\r\n        } else {\r\n          console.log('Adicionando áudio à fila de pendentes:', audioId);\r\n          setPendingAudios(prev => {\r\n            if (prev.includes(audioId)) return prev;\r\n            console.log('Fila atualizada:', [...prev, audioId]);\r\n            return [...prev, audioId];\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }, [audioTimers, audios, isPlaying]);\r\n\r\n  const loadAudios = async () => {\r\n    try {\r\n      const data = await audioService.getAudios();\r\n      console.log('Áudios carregados:', data); // Para debug\r\n      setAudios(data);\r\n    } catch (error) {\r\n      console.error('Erro ao carregar áudios:', error);\r\n    }\r\n  };\r\n\r\n  const handleTimeUpdate = () => {\r\n    if (audioRef.current) {\r\n      const progress = (audioRef.current.currentTime / audioRef.current.duration) * 100;\r\n      setProgress(progress);\r\n    }\r\n  };\r\n\r\n  const handleProgressClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if (audioRef.current) {\r\n      const bounds = e.currentTarget.getBoundingClientRect();\r\n      const x = e.clientX - bounds.left;\r\n      const width = bounds.width;\r\n      const percentage = x / width;\r\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\r\n    }\r\n  };\r\n\r\n  const handleAudioEnd = async () => {\r\n    console.log('Áudio terminou, verificando pendentes...');\r\n    console.log('Fila de pendentes:', pendingAudios);\r\n    \r\n    if (playAttemptRef.current) {\r\n      clearTimeout(playAttemptRef.current);\r\n      playAttemptRef.current = null;\r\n    }\r\n\r\n    if (audioRef.current) {\r\n      audioRef.current.currentTime = 0;\r\n    }\r\n    setProgress(0);\r\n\r\n    // Adiciona um delay antes de verificar a fila de pendentes\r\n    await new Promise(resolve => setTimeout(resolve, 300));\r\n\r\n    if (pendingAudios.length > 0) {\r\n      try {\r\n        console.log('Existem áudios pendentes, reproduzindo próximo...');\r\n        const nextAudioId = pendingAudios[0];\r\n        const nextAudio = audios.find(a => a.id === nextAudioId);\r\n\r\n        setPendingAudios(prev => prev.slice(1));\r\n\r\n        if (nextAudio) {\r\n          console.log('Iniciando reprodução do áudio pendente:', nextAudio.title);\r\n          // Aumenta o delay antes de iniciar o próximo áudio\r\n          await new Promise(resolve => setTimeout(resolve, 800));\r\n          setCurrentAudio(nextAudio);\r\n          setIsPlaying(true);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro ao reproduzir próximo áudio:', error);\r\n        setIsPlaying(false);\r\n        onEnded();\r\n      }\r\n    } else {\r\n      console.log('Não há áudios pendentes');\r\n      setIsPlaying(false);\r\n      onEnded();\r\n    }\r\n\r\n    window.dispatchEvent(new Event('audioStop'));\r\n  };\r\n\r\n  const togglePlay = (audio: AudioData) => {\r\n    if (currentAudio?.id === audio.id) {\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      console.log('Mudando para novo áudio manualmente');\r\n      setCurrentAudio(audio);\r\n      if (audioRef.current) {\r\n        audioRef.current.currentTime = 0;\r\n      }\r\n      setIsPlaying(true);\r\n      // Não vamos mais limpar a fila de pendentes ao tocar manualmente\r\n      // setPendingAudios([]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    setIsUploading(true);\r\n    try {\r\n      console.log('Iniciando upload do arquivo:', file.name);\r\n      \r\n      // Upload do arquivo\r\n      const fileExt = file.name.split('.').pop();\r\n      const fileName = `${Math.random()}.${fileExt}`;\r\n      const filePath = `audios/${fileName}`;\r\n\r\n      console.log('Tentando fazer upload para:', filePath);\r\n\r\n      const { data: uploadData, error: uploadError } = await supabase.storage\r\n        .from('media')\r\n        .upload(filePath, file);\r\n\r\n      if (uploadError) {\r\n        console.error('Erro no upload:', uploadError);\r\n        throw uploadError;\r\n      }\r\n\r\n      console.log('Upload bem sucedido:', uploadData);\r\n\r\n      // Obtém a URL pública\r\n      const { data: { publicUrl } } = supabase.storage\r\n        .from('media')\r\n        .getPublicUrl(filePath);\r\n\r\n      console.log('URL pública gerada:', publicUrl);\r\n\r\n      // Adiciona ao banco de dados\r\n      const newAudio = await audioService.addAudio({\r\n        title: file.name,\r\n        url: publicUrl,\r\n        is_auto_play: false\r\n      });\r\n\r\n      console.log('Áudio adicionado ao banco:', newAudio);\r\n\r\n      // Recarrega todos os áudios\r\n      await loadAudios();\r\n      \r\n      // Seleciona o novo áudio\r\n      setCurrentAudio(newAudio);\r\n      \r\n      // Limpa o input\r\n      event.target.value = '';\r\n\r\n    } catch (error) {\r\n      console.error('Erro detalhado no upload:', error);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const startRepeatTimer = (audioId: string, minutes: number) => {\r\n    // Não vamos mais alterar o áudio atual ou seu estado de reprodução\r\n    // Apenas armazenamos qual áudio será reproduzido quando o timer zerar\r\n    setTimerAudioId(audioId);\r\n\r\n    if (timersRef.current[audioId]) {\r\n      clearInterval(timersRef.current[audioId]);\r\n    }\r\n\r\n    const seconds = minutes * 60;\r\n    \r\n    const intervalId = setInterval(() => {\r\n      setAudioTimers(prev => {\r\n        const currentTimer = prev[audioId];\r\n        if (!currentTimer) return prev;\r\n\r\n        const newTimeLeft = currentTimer.timeLeft - 1;\r\n        return {\r\n          ...prev,\r\n          [audioId]: {\r\n            ...currentTimer,\r\n            timeLeft: newTimeLeft\r\n          }\r\n        };\r\n      });\r\n    }, 1000);\r\n\r\n    timersRef.current[audioId] = intervalId;\r\n\r\n    setAudioTimers(prev => ({\r\n      ...prev,\r\n      [audioId]: {\r\n        interval: seconds,\r\n        timeLeft: seconds,\r\n        intervalId\r\n      }\r\n    }));\r\n\r\n    setShowIntervalInput(null);\r\n  };\r\n\r\n  const stopRepeatTimer = (audioId: string) => {\r\n    if (timersRef.current[audioId]) {\r\n      clearInterval(timersRef.current[audioId]);\r\n      delete timersRef.current[audioId];\r\n    }\r\n\r\n    setAudioTimers(prev => {\r\n      const newTimers = { ...prev };\r\n      delete newTimers[audioId];\r\n      return newTimers;\r\n    });\r\n  };\r\n\r\n  const handleDelete = async (audioId: string) => {\r\n    try {\r\n      await audioService.deleteAudio(audioId);\r\n      if (currentAudio?.id === audioId) {\r\n        setCurrentAudio(null);\r\n        setIsPlaying(false);\r\n      }\r\n      await loadAudios();\r\n    } catch (error) {\r\n      console.error('Erro ao deletar áudio:', error);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds: number): string => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = Math.floor(seconds % 60);\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  // Adicione esta função auxiliar para formatar o tempo do timer\r\n  const formatTimeLeft = (seconds: number): string => {\r\n    if (seconds < 60) {\r\n      return `${Math.ceil(seconds)}s`;\r\n    }\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = Math.ceil(seconds % 60);\r\n    return `${minutes}min ${remainingSeconds}s`;\r\n  };\r\n\r\n  // Modifique a função getNextAudioInfo para verificar os timers ativos\r\n  const getNextAudioInfo = () => {\r\n    // Primeiro, verifica se há algum áudio pendente na fila\r\n    if (pendingAudios.length > 0) {\r\n      const nextAudioId = pendingAudios[0];\r\n      const nextAudio = audios.find(a => a.id === nextAudioId);\r\n      const timer = audioTimers[nextAudioId];\r\n      \r\n      return { nextAudio, timer };\r\n    }\r\n\r\n    // Se não há áudios pendentes, procura o próximo áudio agendado\r\n    let nextScheduledAudio = null;\r\n    let shortestTime = Infinity;\r\n\r\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\r\n      if (timer.timeLeft < shortestTime) {\r\n        const audio = audios.find(a => a.id === audioId);\r\n        if (audio) {\r\n          nextScheduledAudio = {\r\n            nextAudio: audio,\r\n            timer: timer\r\n          };\r\n          shortestTime = timer.timeLeft;\r\n        }\r\n      }\r\n    });\r\n\r\n    return nextScheduledAudio;\r\n  };\r\n\r\n  const handleUpdateTitle = async (audioId: string, newTitle: string) => {\r\n    try {\r\n      await audioService.updateAudio(audioId, { title: newTitle });\r\n      // Atualiza o estado local dos áudios\r\n      setAudios(prev => prev.map(audio => \r\n        audio.id === audioId ? { ...audio, title: newTitle } : audio\r\n      ));\r\n      // Se o áudio sendo editado é o atual, atualiza também o currentAudio\r\n      if (currentAudio?.id === audioId) {\r\n        setCurrentAudio(prev => prev ? { ...prev, title: newTitle } : null);\r\n      }\r\n      setEditingAudioId(null);\r\n    } catch (error) {\r\n      console.error('Erro ao atualizar título:', error);\r\n    }\r\n  };\r\n\r\n  const ConfirmDialog = ({ audioId, onConfirm, onCancel }: { \r\n    audioId: string, \r\n    onConfirm: () => void, \r\n    onCancel: () => void \r\n  }) => (\r\n    <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] max-w-sm w-full mx-4\">\r\n        <h3 className=\"text-[#e1aa1e] font-medium mb-3\">Confirmar ação</h3>\r\n        <p className=\"text-gray-300 mb-4\">\r\n          Deseja realmente desativar a repetição automática?\r\n        </p>\r\n        <div className=\"flex justify-end gap-2\">\r\n          <button\r\n            onClick={onCancel}\r\n            className=\"px-4 py-2 rounded bg-[#404040] text-gray-200 hover:bg-[#505050] transition-colors\"\r\n          >\r\n            Cancelar\r\n          </button>\r\n          <button\r\n            onClick={onConfirm}\r\n            className=\"px-4 py-2 rounded bg-[#e1aa1e] text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors\"\r\n          >\r\n            Confirmar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const SetTimerDialog = ({ \r\n    audioId, \r\n    audioTitle,\r\n    onConfirm, \r\n    onCancel \r\n  }: { \r\n    audioId: string;\r\n    audioTitle: string;\r\n    onConfirm: (minutes: number) => void;\r\n    onCancel: () => void;\r\n  }) => {\r\n    const [minutes, setMinutes] = useState('');\r\n\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-[#2d2d2d] p-6 rounded-lg border border-[#404040] max-w-sm w-full mx-4\">\r\n          <h3 className=\"text-[#e1aa1e] font-medium mb-2\">Configurar Repetição</h3>\r\n          <p className=\"text-gray-300 text-sm mb-4\">\r\n            Defina o intervalo de repetição para:<br/>\r\n            <span className=\"text-[#e1aa1e] font-medium\">{audioTitle}</span>\r\n          </p>\r\n          \r\n          <div className=\"relative mb-6\">\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              value={minutes}\r\n              onChange={(e) => setMinutes(e.target.value)}\r\n              placeholder=\"00\"\r\n              className=\"w-full px-4 py-3 bg-[#1e1e1e] border border-[#404040] rounded text-gray-200 text-center focus:border-[#e1aa1e] focus:outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none pr-12\"\r\n              autoFocus\r\n            />\r\n            <span className=\"absolute right-4 top-1/2 -translate-y-1/2 text-sm text-gray-400\">\r\n              minutos\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end gap-2\">\r\n            <button\r\n              onClick={onCancel}\r\n              className=\"px-4 py-2 rounded bg-[#404040] text-gray-200 hover:bg-[#505050] transition-colors\"\r\n            >\r\n              Cancelar\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                const value = parseInt(minutes);\r\n                if (value > 0) onConfirm(value);\r\n              }}\r\n              disabled={!minutes || parseInt(minutes) <= 0}\r\n              className=\"px-4 py-2 rounded bg-[#e1aa1e] text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              Ativar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\">\r\n      {/* Player Central */}\r\n      <div className=\"mb-3 bg-[#2d2d2d] rounded-lg p-4 border border-[#404040]\">\r\n        {/* Título do Áudio Centralizado */}\r\n        <div className=\"mb-4 text-center\">\r\n          <h3 className=\"text-[#e1aa1e] font-medium\">\r\n            {currentAudio?.title || 'Selecione um áudio'}\r\n          </h3>\r\n        </div>\r\n\r\n        <audio\r\n          ref={audioRef}\r\n          src={currentAudio?.url}\r\n          onTimeUpdate={handleTimeUpdate}\r\n          onEnded={handleAudioEnd}\r\n          className=\"hidden\"\r\n        />\r\n\r\n        {/* Barra de Progresso */}\r\n        <div\r\n          className=\"h-1 bg-[#404040] rounded-full cursor-pointer mb-4\"\r\n          onClick={handleProgressClick}\r\n        >\r\n          <div\r\n            className=\"h-full bg-[#e1aa1e] rounded-full\"\r\n            style={{ width: `${progress}%` }}\r\n          />\r\n        </div>\r\n\r\n        {/* Tempo */}\r\n        <div className=\"flex justify-between text-xs text-gray-400 mb-3\">\r\n          <span>{formatTime(audioRef.current?.currentTime || 0)}</span>\r\n          <span>{formatTime(audioRef.current?.duration || 0)}</span>\r\n        </div>\r\n\r\n        {/* Layout em duas linhas */}\r\n        <div className=\"space-y-4\">\r\n          {/* Controle de Reprodução Centralizado */}\r\n          <div className=\"flex justify-center\">\r\n            <button\r\n              onClick={() => currentAudio && togglePlay(currentAudio)}\r\n              className=\"p-2 hover:bg-[#404040] rounded-full transition-colors\"\r\n              disabled={!currentAudio}\r\n            >\r\n              <svg\r\n                className=\"w-8 h-8 text-[#e1aa1e]\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                {isPlaying ? (\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                ) : (\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                )}\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Próxima Reprodução - Alinhado à direita */}\r\n          {(() => {\r\n            const nextInfo = getNextAudioInfo();\r\n            if (!nextInfo?.nextAudio) return null;\r\n\r\n            return (\r\n              <div className=\"flex justify-end\">\r\n                <div className=\"text-right bg-[#1e1e1e] px-3 py-1 rounded\">\r\n                  <div className=\"text-xs text-gray-400\">\r\n                    Próximo: {nextInfo.nextAudio.title}\r\n                  </div>\r\n                  {nextInfo.timer && (\r\n                    <div className=\"text-xs text-[#e1aa1e]\">\r\n                      Em {formatTimeLeft(nextInfo.timer.timeLeft)}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })()}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Painel de Controle */}\r\n      <div className=\"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\">\r\n        <span className=\"text-sm text-gray-400 px-2\">Lista de Áudios</span>\r\n        <label className=\"bg-[#e1aa1e] hover:bg-[#e1aa1e]/80 text-gray-900 px-3 py-1.5 rounded cursor-pointer transition-colors text-sm\">\r\n          {isUploading ? 'Enviando...' : 'Anexar Áudio'}\r\n          <input\r\n            type=\"file\"\r\n            className=\"hidden\"\r\n            accept=\"audio/*\"\r\n            onChange={handleUpload}\r\n            disabled={isUploading}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      {/* Lista de Áudios */}\r\n      <div className=\"space-y-2 max-h-[400px] overflow-y-auto\">\r\n        {/* Instrução de edição */}\r\n        <div className=\"text-xs text-gray-400 italic mb-2 px-2\">\r\n          Clique no ícone de edição ou dê um duplo clique no nome para renomear\r\n        </div>\r\n\r\n        {audios.map((audio) => (\r\n          <div\r\n            key={audio.id}\r\n            className=\"flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors min-w-0\"\r\n          >\r\n            <button\r\n              onClick={() => togglePlay(audio)}\r\n              className=\"p-1 hover:bg-[#404040] rounded-full transition-colors\"\r\n            >\r\n              <svg\r\n                className=\"w-6 h-6 text-[#e1aa1e]\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                {isPlaying && currentAudio?.id === audio.id ? (\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                ) : (\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                )}\r\n              </svg>\r\n            </button>\r\n\r\n            {editingAudioId === audio.id ? (\r\n              <input\r\n                type=\"text\"\r\n                value={editingTitle}\r\n                onChange={(e) => setEditingTitle(e.target.value)}\r\n                onBlur={() => {\r\n                  if (editingTitle.trim() && editingTitle !== audio.title) {\r\n                    handleUpdateTitle(audio.id, editingTitle);\r\n                  } else {\r\n                    setEditingAudioId(null);\r\n                  }\r\n                }}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === 'Enter') {\r\n                    if (editingTitle.trim() && editingTitle !== audio.title) {\r\n                      handleUpdateTitle(audio.id, editingTitle);\r\n                    } else {\r\n                      setEditingAudioId(null);\r\n                    }\r\n                  } else if (e.key === 'Escape') {\r\n                    setEditingAudioId(null);\r\n                  }\r\n                }}\r\n                className=\"flex-1 bg-[#1e1e1e] text-gray-200 px-2 py-1 rounded border border-[#404040] focus:border-[#e1aa1e] focus:outline-none\"\r\n                autoFocus\r\n              />\r\n            ) : (\r\n              <div className=\"flex-1 flex items-center group\">\r\n                <div className=\"flex-1 flex items-center\">\r\n                <span \r\n                    className=\"truncate cursor-pointer hover:text-[#e1aa1e]\"\r\n                  onDoubleClick={() => {\r\n                    setEditingAudioId(audio.id);\r\n                    setEditingTitle(audio.title);\r\n                  }}\r\n                >\r\n                  {audio.title}\r\n                </span>\r\n                <button\r\n                  onClick={() => {\r\n                    setEditingAudioId(audio.id);\r\n                    setEditingTitle(audio.title);\r\n                  }}\r\n                    className=\"p-1 rounded-full hover:bg-[#404040] opacity-0 group-hover:opacity-100 transition-all ml-1\"\r\n                  title=\"Editar nome\"\r\n                >\r\n                  <svg\r\n                      className=\"w-4 h-4 text-[#e1aa1e]\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"flex items-center gap-2 shrink-0\">\r\n                {showTimerDialog === audio.id ? (\r\n                  <div className=\"flex items-center gap-2 bg-[#1e1e1e] p-2 rounded-lg border border-[#404040]\">\r\n                  <div className=\"relative flex items-center\">\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                        placeholder=\"00\"\r\n                      className=\"w-16 px-2 py-1.5 bg-[#2d2d2d] border border-[#404040] rounded text-gray-200 text-center focus:border-[#e1aa1e] focus:outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none pr-8\"\r\n                      onKeyDown={(e) => {\r\n                        if (e.key === 'Enter') {\r\n                          const value = parseInt((e.target as HTMLInputElement).value);\r\n                          if (value > 0) startRepeatTimer(audio.id, value);\r\n                          } else if (e.key === 'Escape') {\r\n                            setShowIntervalInput(null);\r\n                        }\r\n                      }}\r\n                      autoFocus\r\n                    />\r\n                    <span className=\"absolute right-2 text-xs text-gray-400 pointer-events-none\">\r\n                        min\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex gap-1\">\r\n                    <button\r\n                      onClick={() => {\r\n                        const input = document.querySelector('input[type=\"number\"]') as HTMLInputElement;\r\n                        const value = parseInt(input.value);\r\n                        if (value > 0) startRepeatTimer(audio.id, value);\r\n                      }}\r\n                        className=\"bg-[#e1aa1e] hover:bg-[#e1aa1e]/80 text-gray-900 px-3 py-1.5 rounded text-sm font-medium transition-colors\"\r\n                      >\r\n                        Ativar\r\n                      </button>\r\n                      <button\r\n                        onClick={() => setShowIntervalInput(null)}\r\n                        className=\"bg-[#404040] hover:bg-[#505050] text-gray-200 px-2 py-1.5 rounded text-sm transition-colors\"\r\n                      >\r\n                        Cancelar\r\n                    </button>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    {audioTimers[audio.id] ? (\r\n                    <button\r\n                      onClick={() => setShowConfirmDialog(audio.id)}\r\n                        className=\"flex items-center gap-1.5 px-2 py-1 rounded bg-[#e1aa1e]/10 text-[#e1aa1e] hover:bg-[#e1aa1e]/20 transition-colors\"\r\n                        title=\"Clique para desativar a repetição\"\r\n                      >\r\n                        <svg\r\n                          className=\"w-4 h-4\"\r\n                          fill=\"none\"\r\n                          stroke=\"currentColor\"\r\n                          viewBox=\"0 0 24 24\"\r\n                        >\r\n                          <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth={2}\r\n                            d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\r\n                          />\r\n                        </svg>\r\n                        <span className=\"text-sm\">\r\n                          {formatTimeLeft(audioTimers[audio.id].timeLeft)}\r\n                        </span>\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        onClick={() => setShowIntervalInput(audio.id)}\r\n                        className=\"p-1.5 hover:bg-[#404040] rounded transition-colors text-gray-400 hover:text-[#e1aa1e]\"\r\n                        title=\"Ativar repetição automática\"\r\n                    >\r\n                      <svg\r\n                          className=\"w-4 h-4\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        viewBox=\"0 0 24 24\"\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth={2}\r\n                          d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n                    )}\r\n                  </>\r\n                )}\r\n\r\n              <button\r\n                onClick={() => handleDelete(audio.id)}\r\n                className=\"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\"\r\n              >\r\n                <svg\r\n                  className=\"w-5 h-5\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {showConfirmDialog && (\r\n        <ConfirmDialog\r\n          audioId={showConfirmDialog}\r\n          onConfirm={() => {\r\n            stopRepeatTimer(showConfirmDialog);\r\n            setShowConfirmDialog(null);\r\n          }}\r\n          onCancel={() => setShowConfirmDialog(null)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioPlayer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}