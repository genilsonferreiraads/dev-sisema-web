{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genil\\\\pasta teste\\\\src\\\\components\\\\AudioPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { audioService } from '../lib/supabase';\nimport { supabase } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  onEnded,\n  isPlaying,\n  setIsPlaying\n}) => {\n  _s();\n  const [audios, setAudios] = useState([]);\n  const [currentAudio, setCurrentAudio] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const audioRef = useRef(null);\n  const [audioTimers, setAudioTimers] = useState({});\n  const [showIntervalInput, setShowIntervalInput] = useState(null);\n  const timersRef = useRef({});\n  const [timerAudioId, setTimerAudioId] = useState(null);\n  const [pendingAudioId, setPendingAudioId] = useState(null);\n  const [pendingAudios, setPendingAudios] = useState([]);\n  useEffect(() => {\n    loadAudios();\n  }, []);\n  useEffect(() => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.play().catch(error => {\n          console.error('Erro ao reproduzir áudio:', error);\n          setIsPlaying(false);\n        });\n      } else {\n        audioRef.current.pause();\n      }\n    }\n  }, [isPlaying]);\n  useEffect(() => {\n    return () => {\n      Object.values(timersRef.current).forEach(timer => {\n        clearInterval(timer);\n      });\n    };\n  }, []);\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.onended = () => {\n        console.log('Áudio terminou (evento nativo)');\n        handleAudioEnd();\n      };\n      audioRef.current.onloadeddata = () => {\n        if (isPlaying) {\n          var _audioRef$current;\n          (_audioRef$current = audioRef.current) === null || _audioRef$current === void 0 ? void 0 : _audioRef$current.play().catch(error => {\n            console.error('Erro ao reproduzir áudio após carregamento:', error);\n            setIsPlaying(false);\n          });\n        }\n      };\n    }\n  }, [audioRef.current]);\n  useEffect(() => {\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      if (timer.timeLeft === 0) {\n        // Resetar o timer\n        setAudioTimers(prev => ({\n          ...prev,\n          [audioId]: {\n            ...timer,\n            timeLeft: timer.interval\n          }\n        }));\n\n        // Se não há áudio tocando, reproduzir imediatamente\n        if (!isPlaying) {\n          const audio = audios.find(a => a.id === audioId);\n          if (audio && audioRef.current) {\n            setCurrentAudio(audio);\n            audioRef.current.currentTime = 0;\n            audioRef.current.play().then(() => {\n              setIsPlaying(true);\n            }).catch(error => {\n              console.error('Erro ao reproduzir áudio:', error);\n            });\n          }\n        } else {\n          // Adicionar à fila de pendentes se não estiver já na fila\n          console.log('Adicionando áudio à fila de pendentes:', audioId);\n          setPendingAudios(prev => {\n            if (prev.includes(audioId)) return prev;\n            console.log('Fila atualizada:', [...prev, audioId]);\n            return [...prev, audioId];\n          });\n        }\n      }\n    });\n  }, [audioTimers, audios, isPlaying]);\n  const loadAudios = async () => {\n    try {\n      const data = await audioService.getAudios();\n      console.log('Áudios carregados:', data); // Para debug\n      setAudios(data);\n    } catch (error) {\n      console.error('Erro ao carregar áudios:', error);\n    }\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const progress = audioRef.current.currentTime / audioRef.current.duration * 100;\n      setProgress(progress);\n    }\n  };\n  const handleProgressClick = e => {\n    if (audioRef.current) {\n      const bounds = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - bounds.left;\n      const width = bounds.width;\n      const percentage = x / width;\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\n    }\n  };\n  const handleAudioEnd = async () => {\n    console.log('Áudio terminou, verificando pendentes...');\n    console.log('Fila de pendentes:', pendingAudios);\n    if (audioRef.current) {\n      audioRef.current.currentTime = 0;\n    }\n    setProgress(0);\n\n    // Verificar se há áudios pendentes\n    if (pendingAudios.length > 0) {\n      try {\n        console.log('Existem áudios pendentes, reproduzindo próximo...');\n        const nextAudioId = pendingAudios[0];\n        const nextAudio = audios.find(a => a.id === nextAudioId);\n\n        // Remover o áudio da fila de pendentes\n        setPendingAudios(prev => prev.slice(1));\n        if (nextAudio) {\n          console.log('Iniciando reprodução do áudio pendente:', nextAudio.title);\n          await new Promise(resolve => setTimeout(resolve, 100)); // Pequeno delay\n          setCurrentAudio(nextAudio);\n          setIsPlaying(true);\n        }\n      } catch (error) {\n        console.error('Erro ao reproduzir próximo áudio:', error);\n        setIsPlaying(false);\n        onEnded();\n      }\n    } else {\n      console.log('Não há áudios pendentes');\n      setIsPlaying(false);\n      onEnded();\n    }\n  };\n  const togglePlay = audio => {\n    if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id) {\n      setIsPlaying(!isPlaying);\n    } else {\n      console.log('Mudando para novo áudio manualmente');\n      setCurrentAudio(audio);\n      if (audioRef.current) {\n        audioRef.current.currentTime = 0;\n      }\n      setIsPlaying(true);\n      // Não vamos mais limpar a fila de pendentes ao tocar manualmente\n      // setPendingAudios([]);\n    }\n  };\n  const handleUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    setIsUploading(true);\n    try {\n      console.log('Iniciando upload do arquivo:', file.name);\n\n      // Upload do arquivo\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${Math.random()}.${fileExt}`;\n      const filePath = `audios/${fileName}`;\n      console.log('Tentando fazer upload para:', filePath);\n      const {\n        data: uploadData,\n        error: uploadError\n      } = await supabase.storage.from('media').upload(filePath, file);\n      if (uploadError) {\n        console.error('Erro no upload:', uploadError);\n        throw uploadError;\n      }\n      console.log('Upload bem sucedido:', uploadData);\n\n      // Obtém a URL pública\n      const {\n        data: {\n          publicUrl\n        }\n      } = supabase.storage.from('media').getPublicUrl(filePath);\n      console.log('URL pública gerada:', publicUrl);\n\n      // Adiciona ao banco de dados\n      const newAudio = await audioService.addAudio({\n        title: file.name,\n        url: publicUrl,\n        is_auto_play: false\n      });\n      console.log('Áudio adicionado ao banco:', newAudio);\n\n      // Recarrega todos os áudios\n      await loadAudios();\n\n      // Seleciona o novo áudio\n      setCurrentAudio(newAudio);\n\n      // Limpa o input\n      event.target.value = '';\n    } catch (error) {\n      console.error('Erro detalhado no upload:', error);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const startRepeatTimer = (audioId, minutes) => {\n    // Não vamos mais alterar o áudio atual ou seu estado de reprodução\n    // Apenas armazenamos qual áudio será reproduzido quando o timer zerar\n    setTimerAudioId(audioId);\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n    }\n    const seconds = minutes * 60;\n    const intervalId = setInterval(() => {\n      setAudioTimers(prev => {\n        const currentTimer = prev[audioId];\n        if (!currentTimer) return prev;\n        const newTimeLeft = currentTimer.timeLeft - 1;\n        return {\n          ...prev,\n          [audioId]: {\n            ...currentTimer,\n            timeLeft: newTimeLeft\n          }\n        };\n      });\n    }, 1000);\n    timersRef.current[audioId] = intervalId;\n    setAudioTimers(prev => ({\n      ...prev,\n      [audioId]: {\n        interval: seconds,\n        timeLeft: seconds,\n        intervalId\n      }\n    }));\n    setShowIntervalInput(null);\n  };\n  const stopRepeatTimer = audioId => {\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n      delete timersRef.current[audioId];\n    }\n    setAudioTimers(prev => {\n      const newTimers = {\n        ...prev\n      };\n      delete newTimers[audioId];\n      return newTimers;\n    });\n  };\n  const handleDelete = async audioId => {\n    try {\n      await audioService.deleteAudio(audioId);\n      if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId) {\n        setCurrentAudio(null);\n        setIsPlaying(false);\n      }\n      await loadAudios();\n    } catch (error) {\n      console.error('Erro ao deletar áudio:', error);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  const fadeVolume = (start, end, duration) => {\n    if (!audioRef.current) return;\n    const audio = audioRef.current;\n    const steps = 20; // número de steps para o fade\n    const stepValue = (end - start) / steps;\n    const stepDuration = duration / steps;\n    let currentStep = 0;\n    const fadeInterval = setInterval(() => {\n      currentStep++;\n      const newVolume = start + stepValue * currentStep;\n      audio.volume = Math.min(Math.max(newVolume, 0), 1); // mantém entre 0 e 1\n\n      if (currentStep >= steps) {\n        clearInterval(fadeInterval);\n        audio.volume = end;\n      }\n    }, stepDuration);\n  };\n  useEffect(() => {\n    const handleVideoPlay = () => {\n      console.log('Video/Audio externo começou a tocar, fazendo fade out');\n      fadeVolume(1, 0.15, 500); // fade para 15% em 500ms\n    };\n    const handleVideoEnd = () => {\n      console.log('Video/Audio externo parou, fazendo fade in');\n      fadeVolume(0.15, 1, 500); // fade para 100% em 500ms\n    };\n\n    // Inscreve nos eventos customizados\n    window.addEventListener('externalMediaPlay', handleVideoPlay);\n    window.addEventListener('externalMediaStop', handleVideoEnd);\n    return () => {\n      window.removeEventListener('externalMediaPlay', handleVideoPlay);\n      window.removeEventListener('externalMediaStop', handleVideoEnd);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 bg-[#2d2d2d] rounded-lg p-4 border border-[#404040]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-[#e1aa1e] font-medium truncate\",\n          children: (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.title) || 'Selecione um áudio'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.url,\n        onTimeUpdate: handleTimeUpdate,\n        onEnded: handleAudioEnd,\n        className: \"hidden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-1 bg-[#404040] rounded-full cursor-pointer\",\n        onClick: handleProgressClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-full bg-[#e1aa1e] rounded-full\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between text-xs text-gray-400 mt-1 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: audioRef.current ? `${Math.floor(audioRef.current.currentTime / 60)}:${String(Math.floor(audioRef.current.currentTime % 60)).padStart(2, '0')}` : '0:00'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: audioRef.current ? `${Math.floor(audioRef.current.duration / 60)}:${String(Math.floor(audioRef.current.duration % 60)).padStart(2, '0')}` : '0:00'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => currentAudio && togglePlay(currentAudio),\n          className: \"p-2 hover:bg-[#404040] rounded-full transition-colors\",\n          disabled: !currentAudio,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-8 h-8 text-[#e1aa1e]\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: isPlaying ? /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm text-gray-400 px-2\",\n        children: \"Lista de \\xC1udios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"bg-[#e1aa1e] hover:bg-[#e1aa1e]/80 text-gray-900 px-3 py-1.5 rounded cursor-pointer transition-colors text-sm\",\n        children: [isUploading ? 'Enviando...' : 'Anexar Áudio', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"hidden\",\n          accept: \"audio/*\",\n          onChange: handleUpload,\n          disabled: isUploading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2 max-h-[400px] overflow-y-auto\",\n      children: audios.map(audio => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors ${(currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id ? 'bg-[#2d2d2d]' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => togglePlay(audio),\n          className: \"p-1 hover:bg-[#404040] rounded-full transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-6 h-6 text-[#e1aa1e]\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: isPlaying && (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id ? /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"flex-1 truncate\",\n          children: audio.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1\",\n            children: showIntervalInput === audio.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"1\",\n                placeholder: \"Min\",\n                className: \"w-16 px-2 py-1 bg-[#2d2d2d] border border-[#404040] rounded text-gray-200 [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\",\n                onKeyDown: e => {\n                  if (e.key === 'Enter') {\n                    const value = parseInt(e.target.value);\n                    if (value > 0) startRepeatTimer(audio.id, value);\n                  }\n                },\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  const input = document.querySelector('input[type=\"number\"]');\n                  const value = parseInt(input.value);\n                  if (value > 0) startRepeatTimer(audio.id, value);\n                },\n                className: \"text-[#e1aa1e] hover:text-[#e1aa1e]/80 text-sm px-2 py-1\",\n                children: \"OK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  if (audioTimers[audio.id]) {\n                    stopRepeatTimer(audio.id);\n                  } else {\n                    setShowIntervalInput(audio.id);\n                  }\n                },\n                className: `p-1 hover:bg-[#404040] rounded-full transition-colors ${audioTimers[audio.id] ? 'text-[#e1aa1e]' : 'text-gray-400'}`,\n                title: audioTimers[audio.id] ? 'Parar repetição' : 'Repetir',\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"w-5 h-5\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  viewBox: \"0 0 24 24\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    strokeWidth: 2,\n                    d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 21\n              }, this), audioTimers[audio.id] && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-[#e1aa1e]\",\n                children: formatTime(audioTimers[audio.id].timeLeft)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(audio.id),\n            className: \"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-5 h-5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }, this)]\n      }, audio.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 366,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"QugP3SKIo0RefCK/caNLV1CXsVY=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","audioService","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioPlayer","onEnded","isPlaying","setIsPlaying","_s","audios","setAudios","currentAudio","setCurrentAudio","progress","setProgress","isUploading","setIsUploading","audioRef","audioTimers","setAudioTimers","showIntervalInput","setShowIntervalInput","timersRef","timerAudioId","setTimerAudioId","pendingAudioId","setPendingAudioId","pendingAudios","setPendingAudios","loadAudios","current","play","catch","error","console","pause","Object","values","forEach","timer","clearInterval","onended","log","handleAudioEnd","onloadeddata","_audioRef$current","entries","audioId","timeLeft","prev","interval","audio","find","a","id","currentTime","then","includes","data","getAudios","handleTimeUpdate","duration","handleProgressClick","e","bounds","currentTarget","getBoundingClientRect","x","clientX","left","width","percentage","length","nextAudioId","nextAudio","slice","title","Promise","resolve","setTimeout","togglePlay","handleUpload","event","_event$target$files","file","target","files","name","fileExt","split","pop","fileName","Math","random","filePath","uploadData","uploadError","storage","from","upload","publicUrl","getPublicUrl","newAudio","addAudio","url","is_auto_play","value","startRepeatTimer","minutes","seconds","intervalId","setInterval","currentTimer","newTimeLeft","stopRepeatTimer","newTimers","handleDelete","deleteAudio","formatTime","mins","floor","secs","toString","padStart","fadeVolume","start","end","steps","stepValue","stepDuration","currentStep","fadeInterval","newVolume","volume","min","max","handleVideoPlay","handleVideoEnd","window","addEventListener","removeEventListener","className","children","_jsxFileName","lineNumber","columnNumber","ref","src","onTimeUpdate","onClick","style","String","disabled","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","type","accept","onChange","map","placeholder","onKeyDown","key","parseInt","autoFocus","input","document","querySelector","_c","$RefreshReg$"],"sources":["C:/Users/genil/pasta teste/src/components/AudioPlayer.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { audioService, AudioData } from '../lib/supabase';\r\nimport { supabase } from '../lib/supabase';\r\n\r\ninterface AudioTimer {\r\n  interval: number;\r\n  timeLeft: number;\r\n  intervalId: NodeJS.Timeout;\r\n}\r\n\r\ninterface AudioPlayerProps {\r\n  onEnded: () => void;\r\n  isPlaying: boolean;\r\n  setIsPlaying: (playing: boolean) => void;\r\n}\r\n\r\nconst AudioPlayer: React.FC<AudioPlayerProps> = ({ onEnded, isPlaying, setIsPlaying }) => {\r\n  const [audios, setAudios] = useState<AudioData[]>([]);\r\n  const [currentAudio, setCurrentAudio] = useState<AudioData | null>(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const audioRef = useRef<HTMLAudioElement>(null);\r\n  const [audioTimers, setAudioTimers] = useState<Record<string, AudioTimer>>({});\r\n  const [showIntervalInput, setShowIntervalInput] = useState<string | null>(null);\r\n  const timersRef = useRef<Record<string, NodeJS.Timeout>>({});\r\n  const [timerAudioId, setTimerAudioId] = useState<string | null>(null);\r\n  const [pendingAudioId, setPendingAudioId] = useState<string | null>(null);\r\n  const [pendingAudios, setPendingAudios] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    loadAudios();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      if (isPlaying) {\r\n        audioRef.current.play().catch(error => {\r\n          console.error('Erro ao reproduzir áudio:', error);\r\n          setIsPlaying(false);\r\n        });\r\n      } else {\r\n        audioRef.current.pause();\r\n      }\r\n    }\r\n  }, [isPlaying]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      Object.values(timersRef.current).forEach(timer => {\r\n        clearInterval(timer);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      audioRef.current.onended = () => {\r\n        console.log('Áudio terminou (evento nativo)');\r\n        handleAudioEnd();\r\n      };\r\n\r\n      audioRef.current.onloadeddata = () => {\r\n        if (isPlaying) {\r\n          audioRef.current?.play().catch(error => {\r\n            console.error('Erro ao reproduzir áudio após carregamento:', error);\r\n            setIsPlaying(false);\r\n          });\r\n        }\r\n      };\r\n    }\r\n  }, [audioRef.current]);\r\n\r\n  useEffect(() => {\r\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\r\n      if (timer.timeLeft === 0) {\r\n        // Resetar o timer\r\n        setAudioTimers(prev => ({\r\n          ...prev,\r\n          [audioId]: {\r\n            ...timer,\r\n            timeLeft: timer.interval\r\n          }\r\n        }));\r\n\r\n        // Se não há áudio tocando, reproduzir imediatamente\r\n        if (!isPlaying) {\r\n          const audio = audios.find(a => a.id === audioId);\r\n          if (audio && audioRef.current) {\r\n            setCurrentAudio(audio);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.play()\r\n              .then(() => {\r\n                setIsPlaying(true);\r\n              })\r\n              .catch(error => {\r\n                console.error('Erro ao reproduzir áudio:', error);\r\n              });\r\n          }\r\n        } else {\r\n          // Adicionar à fila de pendentes se não estiver já na fila\r\n          console.log('Adicionando áudio à fila de pendentes:', audioId);\r\n          setPendingAudios(prev => {\r\n            if (prev.includes(audioId)) return prev;\r\n            console.log('Fila atualizada:', [...prev, audioId]);\r\n            return [...prev, audioId];\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }, [audioTimers, audios, isPlaying]);\r\n\r\n  const loadAudios = async () => {\r\n    try {\r\n      const data = await audioService.getAudios();\r\n      console.log('Áudios carregados:', data); // Para debug\r\n      setAudios(data);\r\n    } catch (error) {\r\n      console.error('Erro ao carregar áudios:', error);\r\n    }\r\n  };\r\n\r\n  const handleTimeUpdate = () => {\r\n    if (audioRef.current) {\r\n      const progress = (audioRef.current.currentTime / audioRef.current.duration) * 100;\r\n      setProgress(progress);\r\n    }\r\n  };\r\n\r\n  const handleProgressClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if (audioRef.current) {\r\n      const bounds = e.currentTarget.getBoundingClientRect();\r\n      const x = e.clientX - bounds.left;\r\n      const width = bounds.width;\r\n      const percentage = x / width;\r\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\r\n    }\r\n  };\r\n\r\n  const handleAudioEnd = async () => {\r\n    console.log('Áudio terminou, verificando pendentes...');\r\n    console.log('Fila de pendentes:', pendingAudios);\r\n    \r\n    if (audioRef.current) {\r\n      audioRef.current.currentTime = 0;\r\n    }\r\n    setProgress(0);\r\n\r\n    // Verificar se há áudios pendentes\r\n    if (pendingAudios.length > 0) {\r\n      try {\r\n        console.log('Existem áudios pendentes, reproduzindo próximo...');\r\n        const nextAudioId = pendingAudios[0];\r\n        const nextAudio = audios.find(a => a.id === nextAudioId);\r\n\r\n        // Remover o áudio da fila de pendentes\r\n        setPendingAudios(prev => prev.slice(1));\r\n\r\n        if (nextAudio) {\r\n          console.log('Iniciando reprodução do áudio pendente:', nextAudio.title);\r\n          await new Promise(resolve => setTimeout(resolve, 100)); // Pequeno delay\r\n          setCurrentAudio(nextAudio);\r\n          setIsPlaying(true);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro ao reproduzir próximo áudio:', error);\r\n        setIsPlaying(false);\r\n        onEnded();\r\n      }\r\n    } else {\r\n      console.log('Não há áudios pendentes');\r\n      setIsPlaying(false);\r\n      onEnded();\r\n    }\r\n  };\r\n\r\n  const togglePlay = (audio: AudioData) => {\r\n    if (currentAudio?.id === audio.id) {\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      console.log('Mudando para novo áudio manualmente');\r\n      setCurrentAudio(audio);\r\n      if (audioRef.current) {\r\n        audioRef.current.currentTime = 0;\r\n      }\r\n      setIsPlaying(true);\r\n      // Não vamos mais limpar a fila de pendentes ao tocar manualmente\r\n      // setPendingAudios([]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    setIsUploading(true);\r\n    try {\r\n      console.log('Iniciando upload do arquivo:', file.name);\r\n      \r\n      // Upload do arquivo\r\n      const fileExt = file.name.split('.').pop();\r\n      const fileName = `${Math.random()}.${fileExt}`;\r\n      const filePath = `audios/${fileName}`;\r\n\r\n      console.log('Tentando fazer upload para:', filePath);\r\n\r\n      const { data: uploadData, error: uploadError } = await supabase.storage\r\n        .from('media')\r\n        .upload(filePath, file);\r\n\r\n      if (uploadError) {\r\n        console.error('Erro no upload:', uploadError);\r\n        throw uploadError;\r\n      }\r\n\r\n      console.log('Upload bem sucedido:', uploadData);\r\n\r\n      // Obtém a URL pública\r\n      const { data: { publicUrl } } = supabase.storage\r\n        .from('media')\r\n        .getPublicUrl(filePath);\r\n\r\n      console.log('URL pública gerada:', publicUrl);\r\n\r\n      // Adiciona ao banco de dados\r\n      const newAudio = await audioService.addAudio({\r\n        title: file.name,\r\n        url: publicUrl,\r\n        is_auto_play: false\r\n      });\r\n\r\n      console.log('Áudio adicionado ao banco:', newAudio);\r\n\r\n      // Recarrega todos os áudios\r\n      await loadAudios();\r\n      \r\n      // Seleciona o novo áudio\r\n      setCurrentAudio(newAudio);\r\n      \r\n      // Limpa o input\r\n      event.target.value = '';\r\n\r\n    } catch (error) {\r\n      console.error('Erro detalhado no upload:', error);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const startRepeatTimer = (audioId: string, minutes: number) => {\r\n    // Não vamos mais alterar o áudio atual ou seu estado de reprodução\r\n    // Apenas armazenamos qual áudio será reproduzido quando o timer zerar\r\n    setTimerAudioId(audioId);\r\n\r\n    if (timersRef.current[audioId]) {\r\n      clearInterval(timersRef.current[audioId]);\r\n    }\r\n\r\n    const seconds = minutes * 60;\r\n    \r\n    const intervalId = setInterval(() => {\r\n      setAudioTimers(prev => {\r\n        const currentTimer = prev[audioId];\r\n        if (!currentTimer) return prev;\r\n\r\n        const newTimeLeft = currentTimer.timeLeft - 1;\r\n        return {\r\n          ...prev,\r\n          [audioId]: {\r\n            ...currentTimer,\r\n            timeLeft: newTimeLeft\r\n          }\r\n        };\r\n      });\r\n    }, 1000);\r\n\r\n    timersRef.current[audioId] = intervalId;\r\n\r\n    setAudioTimers(prev => ({\r\n      ...prev,\r\n      [audioId]: {\r\n        interval: seconds,\r\n        timeLeft: seconds,\r\n        intervalId\r\n      }\r\n    }));\r\n\r\n    setShowIntervalInput(null);\r\n  };\r\n\r\n  const stopRepeatTimer = (audioId: string) => {\r\n    if (timersRef.current[audioId]) {\r\n      clearInterval(timersRef.current[audioId]);\r\n      delete timersRef.current[audioId];\r\n    }\r\n\r\n    setAudioTimers(prev => {\r\n      const newTimers = { ...prev };\r\n      delete newTimers[audioId];\r\n      return newTimers;\r\n    });\r\n  };\r\n\r\n  const handleDelete = async (audioId: string) => {\r\n    try {\r\n      await audioService.deleteAudio(audioId);\r\n      if (currentAudio?.id === audioId) {\r\n        setCurrentAudio(null);\r\n        setIsPlaying(false);\r\n      }\r\n      await loadAudios();\r\n    } catch (error) {\r\n      console.error('Erro ao deletar áudio:', error);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds: number): string => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = Math.floor(seconds % 60);\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const fadeVolume = (start: number, end: number, duration: number) => {\r\n    if (!audioRef.current) return;\r\n    \r\n    const audio = audioRef.current;\r\n    const steps = 20; // número de steps para o fade\r\n    const stepValue = (end - start) / steps;\r\n    const stepDuration = duration / steps;\r\n\r\n    let currentStep = 0;\r\n\r\n    const fadeInterval = setInterval(() => {\r\n      currentStep++;\r\n      const newVolume = start + (stepValue * currentStep);\r\n      audio.volume = Math.min(Math.max(newVolume, 0), 1); // mantém entre 0 e 1\r\n\r\n      if (currentStep >= steps) {\r\n        clearInterval(fadeInterval);\r\n        audio.volume = end;\r\n      }\r\n    }, stepDuration);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleVideoPlay = () => {\r\n      console.log('Video/Audio externo começou a tocar, fazendo fade out');\r\n      fadeVolume(1, 0.15, 500); // fade para 15% em 500ms\r\n    };\r\n\r\n    const handleVideoEnd = () => {\r\n      console.log('Video/Audio externo parou, fazendo fade in');\r\n      fadeVolume(0.15, 1, 500); // fade para 100% em 500ms\r\n    };\r\n\r\n    // Inscreve nos eventos customizados\r\n    window.addEventListener('externalMediaPlay', handleVideoPlay);\r\n    window.addEventListener('externalMediaStop', handleVideoEnd);\r\n\r\n    return () => {\r\n      window.removeEventListener('externalMediaPlay', handleVideoPlay);\r\n      window.removeEventListener('externalMediaStop', handleVideoEnd);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\">\r\n      {/* Player Central */}\r\n      <div className=\"mb-3 bg-[#2d2d2d] rounded-lg p-4 border border-[#404040]\">\r\n        <div className=\"mb-3\">\r\n          <h3 className=\"text-[#e1aa1e] font-medium truncate\">\r\n            {currentAudio?.title || 'Selecione um áudio'}\r\n          </h3>\r\n        </div>\r\n\r\n        <audio\r\n          ref={audioRef}\r\n          src={currentAudio?.url}\r\n          onTimeUpdate={handleTimeUpdate}\r\n          onEnded={handleAudioEnd}\r\n          className=\"hidden\"\r\n        />\r\n\r\n        {/* Barra de Progresso */}\r\n        <div\r\n          className=\"h-1 bg-[#404040] rounded-full cursor-pointer\"\r\n          onClick={handleProgressClick}\r\n        >\r\n          <div\r\n            className=\"h-full bg-[#e1aa1e] rounded-full\"\r\n            style={{ width: `${progress}%` }}\r\n          />\r\n        </div>\r\n\r\n        {/* Tempo */}\r\n        <div className=\"flex justify-between text-xs text-gray-400 mt-1 mb-3\">\r\n          <span>\r\n            {audioRef.current\r\n              ? `${Math.floor(audioRef.current.currentTime / 60)}:${String(\r\n                  Math.floor(audioRef.current.currentTime % 60)\r\n                ).padStart(2, '0')}`\r\n              : '0:00'}\r\n          </span>\r\n          <span>\r\n            {audioRef.current\r\n              ? `${Math.floor(audioRef.current.duration / 60)}:${String(\r\n                  Math.floor(audioRef.current.duration % 60)\r\n                ).padStart(2, '0')}`\r\n              : '0:00'}\r\n          </span>\r\n        </div>\r\n\r\n        {/* Controle Principal */}\r\n        <div className=\"flex justify-center\">\r\n          <button\r\n            onClick={() => currentAudio && togglePlay(currentAudio)}\r\n            className=\"p-2 hover:bg-[#404040] rounded-full transition-colors\"\r\n            disabled={!currentAudio}\r\n          >\r\n            <svg\r\n              className=\"w-8 h-8 text-[#e1aa1e]\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              {isPlaying ? (\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                />\r\n              ) : (\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                />\r\n              )}\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Painel de Controle */}\r\n      <div className=\"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\">\r\n        <span className=\"text-sm text-gray-400 px-2\">Lista de Áudios</span>\r\n        <label className=\"bg-[#e1aa1e] hover:bg-[#e1aa1e]/80 text-gray-900 px-3 py-1.5 rounded cursor-pointer transition-colors text-sm\">\r\n          {isUploading ? 'Enviando...' : 'Anexar Áudio'}\r\n          <input\r\n            type=\"file\"\r\n            className=\"hidden\"\r\n            accept=\"audio/*\"\r\n            onChange={handleUpload}\r\n            disabled={isUploading}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      {/* Lista de Áudios */}\r\n      <div className=\"space-y-2 max-h-[400px] overflow-y-auto\">\r\n        {audios.map((audio) => (\r\n          <div\r\n            key={audio.id}\r\n            className={`flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors ${\r\n              currentAudio?.id === audio.id ? 'bg-[#2d2d2d]' : ''\r\n            }`}\r\n          >\r\n            <button\r\n              onClick={() => togglePlay(audio)}\r\n              className=\"p-1 hover:bg-[#404040] rounded-full transition-colors\"\r\n            >\r\n              <svg\r\n                className=\"w-6 h-6 text-[#e1aa1e]\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                {isPlaying && currentAudio?.id === audio.id ? (\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                ) : (\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                )}\r\n              </svg>\r\n            </button>\r\n            <span className=\"flex-1 truncate\">{audio.title}</span>\r\n            \r\n            {/* Controles do item */}\r\n            <div className=\"flex items-center gap-2\">\r\n              <div className=\"flex items-center gap-1\">\r\n                {showIntervalInput === audio.id ? (\r\n                  <div className=\"flex items-center gap-1\">\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      placeholder=\"Min\"\r\n                      className=\"w-16 px-2 py-1 bg-[#2d2d2d] border border-[#404040] rounded text-gray-200 [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\"\r\n                      onKeyDown={(e) => {\r\n                        if (e.key === 'Enter') {\r\n                          const value = parseInt((e.target as HTMLInputElement).value);\r\n                          if (value > 0) startRepeatTimer(audio.id, value);\r\n                        }\r\n                      }}\r\n                      autoFocus\r\n                    />\r\n                    <button\r\n                      onClick={() => {\r\n                        const input = document.querySelector('input[type=\"number\"]') as HTMLInputElement;\r\n                        const value = parseInt(input.value);\r\n                        if (value > 0) startRepeatTimer(audio.id, value);\r\n                      }}\r\n                      className=\"text-[#e1aa1e] hover:text-[#e1aa1e]/80 text-sm px-2 py-1\"\r\n                    >\r\n                      OK\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <button\r\n                      onClick={() => {\r\n                        if (audioTimers[audio.id]) {\r\n                          stopRepeatTimer(audio.id);\r\n                        } else {\r\n                          setShowIntervalInput(audio.id);\r\n                        }\r\n                      }}\r\n                      className={`p-1 hover:bg-[#404040] rounded-full transition-colors ${\r\n                        audioTimers[audio.id] ? 'text-[#e1aa1e]' : 'text-gray-400'\r\n                      }`}\r\n                      title={audioTimers[audio.id] ? 'Parar repetição' : 'Repetir'}\r\n                    >\r\n                      <svg\r\n                        className=\"w-5 h-5\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        viewBox=\"0 0 24 24\"\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth={2}\r\n                          d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n                    {audioTimers[audio.id] && (\r\n                      <span className=\"text-xs text-[#e1aa1e]\">\r\n                        {formatTime(audioTimers[audio.id].timeLeft)}\r\n                      </span>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              <button\r\n                onClick={() => handleDelete(audio.id)}\r\n                className=\"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\"\r\n              >\r\n                <svg\r\n                  className=\"w-5 h-5\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioPlayer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}