{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genil\\\\Desktop\\\\em desemvolvimento Sistema academia\\\\src\\\\components\\\\AudioPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { audioService } from '../lib/supabase';\nimport { supabase } from '../lib/supabase';\nimport '../styles/animations.css';\nimport TextToSpeech from './TextToSpeech';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  onEnded,\n  isPlaying,\n  setIsPlaying\n}) => {\n  _s();\n  var _audioRef$current6, _audioRef$current7, _audios$find;\n  const [audios, setAudios] = useState([]);\n  const [currentAudio, setCurrentAudio] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const audioRef = useRef(null);\n  const [audioTimers, setAudioTimers] = useState({});\n  const timersRef = useRef({});\n  const [timerAudioId, setTimerAudioId] = useState(null);\n  const [pendingAudioId, setPendingAudioId] = useState(null);\n  const [pendingAudios, setPendingAudios] = useState([]);\n  const playAttemptRef = useRef(null);\n  const [editingAudioId, setEditingAudioId] = useState(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [showConfirmDialog, setShowConfirmDialog] = useState(null);\n  const [showTimerDialog, setShowTimerDialog] = useState(null);\n  const [popupPosition, setPopupPosition] = useState(null);\n  const [confirmPosition, setConfirmPosition] = useState(null);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [timerInputValue, setTimerInputValue] = useState('');\n  const [preferences, setPreferences] = useState({});\n  const [playAttempts, setPlayAttempts] = useState(0);\n  const MAX_PLAY_ATTEMPTS = 3;\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(null);\n  const [deletePosition, setDeletePosition] = useState(null);\n  const canvasRef = useRef(null);\n  const analyserRef = useRef(null);\n  const animationRef = useRef(null);\n  const isPlayingRef = useRef(false);\n  const endTimeRefs = useRef({});\n  const [showTextToSpeech, setShowTextToSpeech] = useState(false);\n  const [isOperationInProgress, setIsOperationInProgress] = useState(false);\n  useEffect(() => {\n    loadAudios();\n    return () => {\n      if (canvasRef.current) {\n        var _canvasRef$current$ge;\n        (_canvasRef$current$ge = canvasRef.current.getContext('2d')) === null || _canvasRef$current$ge === void 0 ? void 0 : _canvasRef$current$ge.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      }\n    };\n  }, []);\n  const loadAudios = async () => {\n    try {\n      const data = await audioService.getAudios();\n      setAudios(data);\n\n      // Carrega as preferências para cada áudio\n      data.forEach(audio => {\n        loadAudioPreferences(audio.id);\n      });\n    } catch (error) {\n      console.error('Erro ao carregar áudios:', error);\n    }\n  };\n  const loadAudioPreferences = async audioId => {\n    try {\n      const prefs = await audioService.loadPreferences(audioId);\n      if (prefs.auto_repeat && prefs.timer_end_at) {\n        const endTime = new Date(prefs.timer_end_at).getTime();\n        const now = Date.now();\n        const timeLeft = Math.max(0, Math.floor((endTime - now) / 1000));\n\n        // Se ainda há tempo restante ou se acabou de terminar\n        if (timeLeft >= 0) {\n          const interval = prefs.repeat_interval * 60;\n\n          // Se o timer acabou de terminar, cria um novo ciclo\n          if (timeLeft === 0) {\n            const newEndTime = new Date(Date.now() + interval * 1000).toISOString();\n\n            // Atualiza o endTime no banco\n            await audioService.updatePreferences(audioId, {\n              ...prefs,\n              timer_end_at: newEndTime\n            });\n\n            // Inicia novo ciclo com o novo endTime\n            startNewTimerCycle(audioId, interval, newEndTime);\n          } else {\n            // Continua o ciclo atual com o tempo restante\n            startNewTimerCycle(audioId, interval, prefs.timer_end_at);\n          }\n        } else {\n          // Se o timer expirou há muito tempo, desativa-o\n          await audioService.updatePreferences(audioId, {\n            auto_repeat: false,\n            timer_end_at: undefined,\n            repeat_interval: 0\n          });\n        }\n      }\n\n      // Atualiza as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          auto_repeat: prefs.auto_repeat || false,\n          repeat_interval: prefs.repeat_interval || 0,\n          last_played_at: prefs.last_played_at,\n          play_count: prefs.play_count || 0\n        }\n      }));\n    } catch (error) {\n      // Mantém o erro silencioso\n    }\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const progress = audioRef.current.currentTime / audioRef.current.duration * 100;\n      setProgress(progress);\n    }\n  };\n  const handleProgressClick = e => {\n    if (audioRef.current) {\n      const bounds = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - bounds.left;\n      const width = bounds.width;\n      const percentage = x / width;\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\n    }\n  };\n  const startNewTimerCycle = (audioId, interval, existingEndTime) => {\n    endTimeRefs.current[audioId] = existingEndTime || new Date(Date.now() + interval * 1000).toISOString();\n    const initialTimeLeft = Math.max(0, Math.floor((new Date(endTimeRefs.current[audioId]).getTime() - Date.now()) / 1000));\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n    }\n    let attemptCount = 0;\n    const MAX_ATTEMPTS = 3;\n    const createNewCycle = async () => {\n      try {\n        var _audioRef$current;\n        if (isPlayingRef.current) {\n          if (attemptCount < MAX_ATTEMPTS) {\n            attemptCount++;\n            setTimeout(() => createNewCycle(), 1000);\n          } else {\n            isPlayingRef.current = false;\n          }\n          return;\n        }\n        isPlayingRef.current = true;\n        attemptCount = 0;\n        const audioData = await audioService.getAudio(audioId);\n        if (!audioData) {\n          isPlayingRef.current = false;\n          return;\n        }\n\n        // Primeiro atualiza as preferências\n        const newEndTime = new Date(Date.now() + interval * 1000).toISOString();\n        await audioService.updatePreferences(audioId, {\n          auto_repeat: true,\n          repeat_interval: interval / 60,\n          timer_end_at: newEndTime\n        });\n        endTimeRefs.current[audioId] = newEndTime;\n\n        // Depois prepara o áudio\n        if (audioRef.current) {\n          audioRef.current.src = audioData.url;\n          audioRef.current.currentTime = 0;\n\n          // Aguarda o áudio estar pronto\n          await new Promise(resolve => {\n            audioRef.current.addEventListener('canplay', resolve, {\n              once: true\n            });\n          });\n          setCurrentAudio(audioData);\n          setIsPlaying(true);\n          try {\n            await audioRef.current.play();\n          } catch (error) {\n            isPlayingRef.current = false;\n            setIsPlaying(false);\n            return;\n          }\n        }\n\n        // Libera para próxima reprodução quando este áudio terminar\n        (_audioRef$current = audioRef.current) === null || _audioRef$current === void 0 ? void 0 : _audioRef$current.addEventListener('ended', () => {\n          isPlayingRef.current = false;\n          setIsPlaying(false);\n        }, {\n          once: true\n        });\n      } catch (error) {\n        isPlayingRef.current = false;\n        setIsPlaying(false);\n      }\n    };\n    const intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const timerEndTime = new Date(endTimeRefs.current[audioId]).getTime();\n      const newTimeLeft = Math.max(0, Math.floor((timerEndTime - currentTime) / 1000));\n      if (newTimeLeft === 0 && !isPlayingRef.current) {\n        createNewCycle();\n      }\n      setAudioTimers(prev => ({\n        ...prev,\n        [audioId]: {\n          interval,\n          timeLeft: newTimeLeft,\n          intervalId,\n          endTime: endTimeRefs.current[audioId]\n        }\n      }));\n    }, 1000);\n    timersRef.current[audioId] = intervalId;\n    setAudioTimers(prev => ({\n      ...prev,\n      [audioId]: {\n        interval,\n        timeLeft: initialTimeLeft,\n        intervalId,\n        endTime: endTimeRefs.current[audioId]\n      }\n    }));\n    if (initialTimeLeft === 0) {\n      createNewCycle();\n    }\n    return intervalId;\n  };\n  const handleAudioEnd = () => {\n    if (onEnded) {\n      onEnded();\n    }\n  };\n  const togglePlay = audio => {\n    // Se clicou em um áudio diferente do atual\n    if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) !== audio.id) {\n      // Para o áudio atual se estiver tocando\n      if (audioRef.current) {\n        audioRef.current.pause();\n        isPlayingRef.current = false;\n      }\n      // Apenas define o novo áudio\n      setCurrentAudio(audio);\n\n      // Se não tiver timer ativo, inicia a reprodução manualmente\n      if (!audioTimers[audio.id]) {\n        if (audioRef.current) {\n          audioRef.current.src = audio.url;\n          audioRef.current.currentTime = 0;\n\n          // Aguarda o áudio estar pronto antes de reproduzir\n          audioRef.current.addEventListener('canplay', () => {\n            if (!isPlayingRef.current) {\n              var _audioRef$current2;\n              isPlayingRef.current = true;\n              setIsPlaying(true);\n              (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.play().catch(() => {\n                isPlayingRef.current = false;\n                setIsPlaying(false);\n              });\n            }\n          }, {\n            once: true\n          });\n        }\n      }\n    } else {\n      // Se clicou no mesmo áudio, apenas alterna play/pause\n      if (isPlaying) {\n        var _audioRef$current3;\n        (_audioRef$current3 = audioRef.current) === null || _audioRef$current3 === void 0 ? void 0 : _audioRef$current3.pause();\n        isPlayingRef.current = false;\n        setIsPlaying(false);\n      } else {\n        if (audioRef.current && !isPlayingRef.current) {\n          isPlayingRef.current = true;\n          setIsPlaying(true);\n          audioRef.current.play().catch(() => {\n            isPlayingRef.current = false;\n            setIsPlaying(false);\n          });\n        }\n      }\n    }\n  };\n  const handleUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    setIsUploading(true);\n    try {\n      console.log('Iniciando upload do arquivo:', file.name);\n\n      // Upload do arquivo\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${Math.random()}.${fileExt}`;\n      const filePath = `audios/${fileName}`;\n      console.log('Tentando fazer upload para:', filePath);\n      const {\n        data: uploadData,\n        error: uploadError\n      } = await supabase.storage.from('media').upload(filePath, file);\n      if (uploadError) {\n        console.error('Erro no upload:', uploadError);\n        throw uploadError;\n      }\n      console.log('Upload bem sucedido:', uploadData);\n\n      // Obtém a URL pública\n      const {\n        data: {\n          publicUrl\n        }\n      } = supabase.storage.from('media').getPublicUrl(filePath);\n      console.log('URL pública gerada:', publicUrl);\n\n      // Adiciona ao banco de dados\n      const newAudio = await audioService.addAudio({\n        title: file.name,\n        url: publicUrl,\n        auto_repeat: false,\n        repeat_interval: 0,\n        play_count: 0\n      });\n      console.log('Áudio adicionado ao banco:', newAudio);\n\n      // Recarrega todos os áudios\n      await loadAudios();\n\n      // Seleciona o novo áudio\n      setCurrentAudio(newAudio);\n\n      // Limpa o input\n      event.target.value = '';\n    } catch (error) {\n      console.error('Erro detalhado no upload:', error);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const startRepeatTimer = async (audioId, minutes) => {\n    setTimerAudioId(audioId);\n    const seconds = minutes * 60;\n\n    // Inicia o novo ciclo do timer\n    startNewTimerCycle(audioId, seconds);\n\n    // Calcula o tempo de término\n    const endTime = new Date(Date.now() + seconds * 1000).toISOString();\n\n    // Salva as preferências no banco\n    try {\n      const prefs = {\n        auto_repeat: true,\n        repeat_interval: minutes,\n        timer_end_at: endTime\n      };\n      await audioService.updatePreferences(audioId, prefs);\n\n      // Atualiza também as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          ...prev[audioId],\n          auto_repeat: true,\n          repeat_interval: minutes\n        }\n      }));\n      console.log(`Timer salvo para ${audioId} com intervalo de ${minutes}min`);\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n  const stopRepeatTimer = async audioId => {\n    // Não para o timer se o áudio estiver tocando\n    if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId && isPlaying) {\n      return;\n    }\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n      delete timersRef.current[audioId];\n    }\n    setAudioTimers(prev => {\n      const newTimers = {\n        ...prev\n      };\n      delete newTimers[audioId];\n      return newTimers;\n    });\n    try {\n      const prefs = {\n        auto_repeat: false,\n        repeat_interval: 0,\n        timer_end_at: undefined\n      };\n      await audioService.updatePreferences(audioId, prefs);\n\n      // Atualiza também as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          ...prev[audioId],\n          auto_repeat: false,\n          repeat_interval: 0\n        }\n      }));\n      console.log(`Timer removido para ${audioId}`);\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n  const handleDelete = async audioId => {\n    try {\n      var _fileUrl$split$;\n      const audioToDelete = audios.find(a => a.id === audioId);\n      if (!audioToDelete) return;\n      const fileUrl = audioToDelete.url;\n      const fileName = (_fileUrl$split$ = fileUrl.split('/audios/')[1]) === null || _fileUrl$split$ === void 0 ? void 0 : _fileUrl$split$.split('?')[0];\n      if (fileName) {\n        console.log('Tentando remover arquivo:', fileName);\n        try {\n          // Primeira tentativa de remoção\n          const {\n            error: storageError\n          } = await supabase.storage.from('media').remove([`audios/${fileName}`]);\n          if (storageError) {\n            console.error('Erro ao remover arquivo:', storageError);\n\n            // Se falhar, espera um momento e tenta novamente\n            await new Promise(resolve => setTimeout(resolve, 1000));\n\n            // Segunda tentativa\n            await supabase.storage.from('media').remove([`audios/${fileName}`]);\n          }\n\n          // Verifica se o arquivo ainda existe\n          const {\n            data: files\n          } = await supabase.storage.from('media').list('audios', {\n            search: fileName\n          });\n          console.log('Verificação após remoção:', files);\n        } catch (storageError) {\n          console.error('Erro ao acessar storage:', storageError);\n        }\n      }\n\n      // Remove o registro do banco de dados\n      await audioService.deleteAudio(audioId);\n\n      // Atualiza estados locais\n      if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId) {\n        setCurrentAudio(null);\n        setIsPlaying(false);\n      }\n      if (audioTimers[audioId]) {\n        await stopRepeatTimer(audioId);\n      }\n      setPreferences(prev => {\n        const newPrefs = {\n          ...prev\n        };\n        delete newPrefs[audioId];\n        return newPrefs;\n      });\n\n      // Força uma atualização da lista de arquivos no storage\n      const {\n        data: updatedFiles\n      } = await supabase.storage.from('media').list('audios');\n      console.log('Lista atualizada de arquivos:', updatedFiles);\n\n      // Recarrega a lista de áudios\n      await loadAudios();\n      console.log('Áudio removido com sucesso:', audioId);\n    } catch (error) {\n      console.error('Erro ao deletar áudio:', error);\n      try {\n        await loadAudios();\n      } catch (e) {\n        console.error('Erro ao recarregar áudios após falha:', e);\n      }\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Adicione esta função auxiliar para formatar o tempo do timer\n  const formatTimeLeft = seconds => {\n    if (seconds < 60) {\n      return `${Math.ceil(seconds)}s`;\n    }\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.ceil(seconds % 60);\n    return `${minutes}min ${remainingSeconds}s`;\n  };\n\n  // Modifique a função getNextAudioInfo para verificar os timers ativos\n  const getNextAudioInfo = () => {\n    // Primeiro, verifica se há algum áudio pendente na fila\n    if (pendingAudios.length > 0) {\n      const nextAudioId = pendingAudios[0];\n      const nextAudio = audios.find(a => a.id === nextAudioId);\n      const timer = audioTimers[nextAudioId];\n      return {\n        nextAudio,\n        timer\n      };\n    }\n\n    // Se não há áudios pendentes, procura o próximo áudio agendado\n    let nextScheduledAudio = null;\n    let shortestTime = Infinity;\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      if (timer.timeLeft < shortestTime) {\n        const audio = audios.find(a => a.id === audioId);\n        if (audio) {\n          nextScheduledAudio = {\n            nextAudio: audio,\n            timer: timer\n          };\n          shortestTime = timer.timeLeft;\n        }\n      }\n    });\n    return nextScheduledAudio;\n  };\n  const handleUpdateTitle = async (audioId, newTitle) => {\n    try {\n      await audioService.updateAudio(audioId, {\n        title: newTitle\n      });\n      // Atualiza o estado local dos áudios\n      setAudios(prev => prev.map(audio => audio.id === audioId ? {\n        ...audio,\n        title: newTitle\n      } : audio));\n      // Se o áudio sendo editado é o atual, atualiza também o currentAudio\n      if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId) {\n        setCurrentAudio(prev => prev ? {\n          ...prev,\n          title: newTitle\n        } : null);\n      }\n      setEditingAudioId(null);\n    } catch (error) {\n      console.error('Erro ao atualizar título:', error);\n    }\n  };\n  const ConfirmDialog = ({\n    audioId,\n    onConfirm,\n    onEdit,\n    onCancel,\n    buttonPosition\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50\",\n    onClick: e => {\n      if (e.target === e.currentTarget) onCancel();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\",\n      style: {\n        top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n        left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n        transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n        opacity: isAnimating ? 0 : 1,\n        transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-[#e1aa1e] font-medium text-sm mb-2\",\n        children: \"Gerenciar Repeti\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300 text-xs mb-4\",\n        children: \"Escolha uma das op\\xE7\\xF5es para editar a repeti\\xE7\\xE3o autom\\xE1tica:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onCancel,\n          className: \"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onEdit,\n          className: \"px-3 py-1.5 rounded bg-[#e1aa1e]/20 text-xs text-[#e1aa1e] hover:bg-[#e1aa1e]/30 transition-colors\",\n          children: \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onConfirm,\n          className: \"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors\",\n          children: \"Desativar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 620,\n    columnNumber: 5\n  }, this);\n  const SetTimerDialog = ({\n    audioId,\n    audioTitle,\n    onConfirm,\n    onCancel,\n    buttonPosition,\n    inputValue,\n    onInputChange\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-50\",\n      onClick: e => {\n        if (e.target === e.currentTarget) onCancel();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\",\n        style: {\n          top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n          left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n          transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n          opacity: isAnimating ? 0 : 1,\n          transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-[#e1aa1e] font-medium text-sm mb-2\",\n          children: \"Repetir \\xC1udio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300 text-xs mb-3 truncate\",\n          children: audioTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            value: inputValue,\n            onChange: e => onInputChange(e.target.value),\n            placeholder: \"00\",\n            className: \"w-full px-3 py-2 bg-[#1e1e1e] border border-[#404040] rounded text-gray-200 text-center focus:border-[#e1aa1e] focus:outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none pr-12\",\n            onKeyDown: e => {\n              if (e.key === 'Enter') {\n                const value = parseInt(inputValue);\n                if (value > 0) onConfirm(value);\n              } else if (e.key === 'Escape') {\n                onCancel();\n              }\n            },\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"absolute right-3 top-1/2 -translate-y-1/2 text-xs text-gray-400\",\n            children: \"minutos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onCancel,\n            className: \"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\",\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const value = parseInt(inputValue);\n              if (value > 0) onConfirm(value);\n            },\n            disabled: !inputValue || parseInt(inputValue) <= 0,\n            className: \"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",\n            children: \"Ativar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 7\n    }, this);\n  };\n  const handleShowTimerDialog = (e, audioId) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setPopupPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2\n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowTimerDialog(audioId);\n    }, 10);\n  };\n  const handleShowConfirmDialog = (e, audioId) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setConfirmPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2\n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowConfirmDialog(audioId);\n    }, 10);\n  };\n\n  // Adicione este useEffect para gerenciar a seleção de texto\n  useEffect(() => {\n    const style = document.createElement('style');\n    style.innerHTML = `\n      .dragging * {\n        user-select: none !important;\n        -webkit-user-select: none !important;\n        cursor: grabbing !important;\n      }\n    `;\n    document.head.appendChild(style);\n    return () => style.remove();\n  }, []);\n  const DeleteConfirmDialog = ({\n    audioId,\n    onConfirm,\n    onCancel,\n    buttonPosition\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50\",\n    onClick: e => {\n      if (e.target === e.currentTarget) onCancel();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\",\n      style: {\n        top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n        left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n        transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n        opacity: isAnimating ? 0 : 1,\n        transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-red-500 font-medium text-sm mb-2\",\n        children: \"Confirmar Exclus\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300 text-xs mb-4\",\n        children: \"Tem certeza que deseja excluir este \\xE1udio?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onCancel,\n          className: \"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onConfirm,\n          className: \"px-3 py-1.5 rounded bg-red-500 text-xs text-white hover:bg-red-600 transition-colors\",\n          children: \"Excluir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 794,\n    columnNumber: 5\n  }, this);\n  useEffect(() => {\n    if (audioRef.current && canvasRef.current) {\n      if (isPlaying) {\n        var _canvasRef$current$ge2;\n        audioRef.current.play();\n        (_canvasRef$current$ge2 = canvasRef.current.getContext('2d')) === null || _canvasRef$current$ge2 === void 0 ? void 0 : _canvasRef$current$ge2.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      } else {\n        var _canvasRef$current$ge3;\n        audioRef.current.pause();\n        (_canvasRef$current$ge3 = canvasRef.current.getContext('2d')) === null || _canvasRef$current$ge3 === void 0 ? void 0 : _canvasRef$current$ge3.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      }\n    }\n  }, [isPlaying]);\n  const animate = () => {\n    if (!canvasRef.current || !analyserRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const bufferLength = analyserRef.current.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const draw = () => {\n      animationRef.current = requestAnimationFrame(draw);\n      analyserRef.current.getByteFrequencyData(dataArray);\n\n      // Fundo com gradiente\n      ctx.fillStyle = '#1e1e1e';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Número de ondas e configurações\n      const waves = 3;\n      const points = 100;\n      const spacing = canvas.height / (waves + 1);\n\n      // Para cada linha de onda\n      for (let w = 1; w <= waves; w++) {\n        const baseY = spacing * w;\n        ctx.beginPath();\n        ctx.moveTo(0, baseY);\n\n        // Desenha a onda através da largura do canvas\n        for (let x = 0; x <= canvas.width; x++) {\n          const progress = x / canvas.width;\n          const index = Math.floor(progress * bufferLength);\n          const value = dataArray[index] / 255.0;\n\n          // Amplitude varia com o áudio\n          const amplitude = isPlaying ? 30 * value : 10;\n\n          // Frequência e fase variam com o tempo e posição\n          const frequency = 0.02;\n          const phase = Date.now() * 0.002 + w;\n\n          // Calcula a posição Y com múltiplas ondas sobrepostas\n          const y = baseY + Math.sin(x * frequency + phase) * amplitude + Math.sin(x * frequency * 0.5 + phase * 1.5) * amplitude * 0.5;\n          ctx.lineTo(x, y);\n        }\n\n        // Gradiente para a onda\n        const gradient = ctx.createLinearGradient(0, baseY - 50, 0, baseY + 50);\n        const alpha = isPlaying ? 0.5 - (w - 1) * 0.1 : 0.2;\n        gradient.addColorStop(0, `rgba(225, 170, 30, 0)`);\n        gradient.addColorStop(0.5, `rgba(225, 170, 30, ${alpha})`);\n        gradient.addColorStop(1, `rgba(225, 170, 30, 0)`);\n        ctx.strokeStyle = gradient;\n        ctx.lineWidth = 2;\n        ctx.stroke();\n\n        // Efeito de brilho\n        if (isPlaying) {\n          ctx.save();\n          ctx.filter = 'blur(4px)';\n          ctx.strokeStyle = `rgba(225, 170, 30, ${alpha * 0.5})`;\n          ctx.lineWidth = 4;\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n\n      // Adiciona partículas brilhantes\n      if (isPlaying) {\n        for (let i = 0; i < bufferLength; i += 8) {\n          const value = dataArray[i] / 255.0;\n          if (value > 0.5) {\n            const x = Math.random() * canvas.width;\n            const y = Math.random() * canvas.height;\n            const size = Math.random() * 3 * value;\n            ctx.beginPath();\n            ctx.arc(x, y, size, 0, Math.PI * 2);\n            ctx.fillStyle = `rgba(225, 170, 30, ${value * 0.3})`;\n            ctx.fill();\n          }\n        }\n      }\n    };\n    draw();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 bg-[#2d2d2d] rounded-lg border border-[#404040] overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 border-b border-[#404040]\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-[#e1aa1e] font-medium text-center\",\n          children: (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.title) || 'Selecione um áudio'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 942,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 941,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative h-32 bg-[#1e1e1e] p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"absolute inset-0 w-full h-full\",\n          width: 1000,\n          height: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (currentAudio) {\n                setIsPlaying(!isPlaying);\n                if (isPlaying) {\n                  var _audioRef$current4;\n                  (_audioRef$current4 = audioRef.current) === null || _audioRef$current4 === void 0 ? void 0 : _audioRef$current4.pause();\n                } else {\n                  var _audioRef$current5;\n                  (_audioRef$current5 = audioRef.current) === null || _audioRef$current5 === void 0 ? void 0 : _audioRef$current5.play();\n                }\n              }\n            },\n            className: `p-4 rounded-full bg-[#e1aa1e]/90 hover:bg-[#e1aa1e] transition-all transform \n                hover:scale-105 active:scale-95 ${isPlaying ? 'animate-pulse' : ''}`,\n            disabled: !currentAudio,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-8 h-8 text-gray-900\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: isPlaying ? /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2.5,\n                d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 980,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2.5,\n                d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 987,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 973,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 958,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 957,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 948,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-[#1e1e1e]/50\",\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          ref: audioRef,\n          src: currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.url,\n          onTimeUpdate: handleTimeUpdate,\n          onEnded: handleAudioEnd,\n          onPlay: () => window.dispatchEvent(new Event('audioPlay')),\n          onPause: () => window.dispatchEvent(new Event('audioStop')),\n          className: \"hidden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1001,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-1 bg-[#404040] rounded-full cursor-pointer mb-2\",\n          onClick: handleProgressClick,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-full bg-[#e1aa1e] rounded-full\",\n            style: {\n              width: `${progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1016,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1012,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between text-xs text-gray-400 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatTime(((_audioRef$current6 = audioRef.current) === null || _audioRef$current6 === void 0 ? void 0 : _audioRef$current6.currentTime) || 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatTime(((_audioRef$current7 = audioRef.current) === null || _audioRef$current7 === void 0 ? void 0 : _audioRef$current7.duration) || 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1023,\n          columnNumber: 11\n        }, this), (() => {\n          const nextInfo = getNextAudioInfo();\n          if (!(nextInfo !== null && nextInfo !== void 0 && nextInfo.nextAudio)) return null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-right bg-[#2d2d2d] px-3 py-1 rounded border border-[#404040]/50\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-400\",\n                children: [\"Pr\\xF3ximo: \", nextInfo.nextAudio.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1036,\n                columnNumber: 19\n              }, this), nextInfo.timer && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-[#e1aa1e]\",\n                children: [\"Em \", formatTimeLeft(nextInfo.timer.timeLeft)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1040,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1035,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1034,\n            columnNumber: 15\n          }, this);\n        })()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 939,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-400 px-2\",\n          children: \"Lista de \\xC1udios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1054,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1053,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex-1 relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleUpload,\n            accept: \"audio/*\",\n            className: \"hidden\",\n            disabled: isUploading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1060,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-full bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-4 py-2 rounded flex items-center justify-center gap-2 transition-colors cursor-pointer whitespace-nowrap ${isUploading ? 'opacity-50 cursor-not-allowed' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-5 h-5 flex-shrink-0\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M12 4v16m8-8H4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1071,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1070,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"truncate\",\n              children: isUploading ? 'Enviando...' : 'Anexar Áudio'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1073,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1067,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1059,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowTextToSpeech(true),\n          className: \"flex-1 bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-4 py-2 rounded flex items-center justify-center gap-2 transition-colors whitespace-nowrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-5 h-5 flex-shrink-0\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1082,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1081,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"truncate\",\n            children: \"Falar Texto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1084,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1077,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1058,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1052,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2 max-h-[400px] overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-400 italic mb-2 px-2\",\n        children: \"Clique no \\xEDcone de edi\\xE7\\xE3o ou d\\xEA um duplo clique no nome para renomear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1091,\n        columnNumber: 9\n      }, this), audios.map(audio => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors min-w-0 bg-[#1e1e1e] mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => togglePlay(audio),\n          className: \"p-1 hover:bg-[#404040] rounded-full transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-6 h-6 text-[#e1aa1e]\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: isPlaying && (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id ? /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1111,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1118,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1100,\n          columnNumber: 13\n        }, this), editingAudioId === audio.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editingTitle,\n          onChange: e => setEditingTitle(e.target.value),\n          onBlur: () => {\n            if (editingTitle.trim() && editingTitle !== audio.title) {\n              handleUpdateTitle(audio.id, editingTitle);\n            } else {\n              setEditingAudioId(null);\n            }\n          },\n          onKeyDown: e => {\n            if (e.key === 'Enter') {\n              if (editingTitle.trim() && editingTitle !== audio.title) {\n                handleUpdateTitle(audio.id, editingTitle);\n              } else {\n                setEditingAudioId(null);\n              }\n            } else if (e.key === 'Escape') {\n              setEditingAudioId(null);\n            }\n          },\n          className: \"flex-1 bg-[#1e1e1e] text-gray-200 px-2 py-1 rounded border border-[#404040] focus:border-[#e1aa1e] focus:outline-none\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1129,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 flex items-center group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"truncate cursor-pointer hover:text-[#e1aa1e]\",\n              onDoubleClick: () => {\n                setEditingAudioId(audio.id);\n                setEditingTitle(audio.title);\n              },\n              children: audio.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setEditingAudioId(audio.id);\n                setEditingTitle(audio.title);\n              },\n              className: \"p-1 rounded-full hover:bg-[#404040] opacity-0 group-hover:opacity-100 transition-all ml-1\",\n              title: \"Editar nome\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-4 h-4 text-[#e1aa1e]\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1180,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1174,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1166,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1156,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1155,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 shrink-0\",\n          children: [audioTimers[audio.id] ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              handleShowConfirmDialog(e, audio.id);\n            },\n            className: \"flex items-center gap-1.5 px-2 py-1 rounded bg-[#e1aa1e]/10 text-[#e1aa1e] hover:bg-[#e1aa1e]/20 transition-colors\",\n            title: \"Clique para desativar a repeti\\xE7\\xE3o\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-4 h-4\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1207,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1201,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: formatTimeLeft(audioTimers[audio.id].timeLeft)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1214,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1194,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              handleShowTimerDialog(e, audio.id);\n            },\n            className: \"p-1.5 hover:bg-[#404040] rounded transition-colors text-gray-400 hover:text-[#e1aa1e]\",\n            title: \"Ativar repeti\\xE7\\xE3o autom\\xE1tica\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-4 h-4\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1232,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1226,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1219,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              setDeletePosition({\n                x: e.currentTarget.getBoundingClientRect().x,\n                y: e.currentTarget.getBoundingClientRect().y + 30\n              });\n              setShowDeleteConfirm(audio.id);\n            },\n            className: \"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\",\n            title: \"Excluir \\xE1udio\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-5 h-5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1256,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1250,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1242,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1192,\n          columnNumber: 13\n        }, this)]\n      }, audio.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1096,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1090,\n      columnNumber: 7\n    }, this), showTimerDialog && /*#__PURE__*/_jsxDEV(SetTimerDialog, {\n      audioId: showTimerDialog,\n      audioTitle: ((_audios$find = audios.find(a => a.id === showTimerDialog)) === null || _audios$find === void 0 ? void 0 : _audios$find.title) || '',\n      onConfirm: minutes => {\n        startRepeatTimer(showTimerDialog, minutes);\n        setShowTimerDialog(null);\n        setPopupPosition(null);\n        setTimerInputValue('');\n      },\n      onCancel: () => {\n        setShowTimerDialog(null);\n        setPopupPosition(null);\n        setTimerInputValue('');\n      },\n      buttonPosition: popupPosition,\n      inputValue: timerInputValue,\n      onInputChange: setTimerInputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1270,\n      columnNumber: 9\n    }, this), showConfirmDialog && /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      audioId: showConfirmDialog,\n      onConfirm: () => {\n        stopRepeatTimer(showConfirmDialog);\n        setShowConfirmDialog(null);\n        setConfirmPosition(null);\n      },\n      onEdit: () => {\n        setShowConfirmDialog(null);\n        setConfirmPosition(null);\n        // Abre o diálogo de timer com a posição atual\n        setPopupPosition(confirmPosition);\n        setShowTimerDialog(showConfirmDialog);\n      },\n      onCancel: () => {\n        setShowConfirmDialog(null);\n        setConfirmPosition(null);\n      },\n      buttonPosition: confirmPosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1291,\n      columnNumber: 9\n    }, this), showDeleteConfirm && /*#__PURE__*/_jsxDEV(DeleteConfirmDialog, {\n      audioId: showDeleteConfirm,\n      onConfirm: () => {\n        handleDelete(showDeleteConfirm);\n        setShowDeleteConfirm(null);\n        setDeletePosition(null);\n      },\n      onCancel: () => {\n        setShowDeleteConfirm(null);\n        setDeletePosition(null);\n      },\n      buttonPosition: deletePosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1314,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextToSpeech, {\n      apiKey: \"AIzaSyBvkopJSt0VaBRbqfdtevWDuCwVRDhNZ2o\",\n      isOpen: showTextToSpeech,\n      onClose: () => setShowTextToSpeech(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1329,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 937,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"MhE5QOpq/EPaToIDlBJ6z1MwIq8=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","audioService","supabase","TextToSpeech","jsxDEV","_jsxDEV","AudioPlayer","onEnded","isPlaying","setIsPlaying","_s","_audioRef$current6","_audioRef$current7","_audios$find","audios","setAudios","currentAudio","setCurrentAudio","progress","setProgress","isUploading","setIsUploading","audioRef","audioTimers","setAudioTimers","timersRef","timerAudioId","setTimerAudioId","pendingAudioId","setPendingAudioId","pendingAudios","setPendingAudios","playAttemptRef","editingAudioId","setEditingAudioId","editingTitle","setEditingTitle","showConfirmDialog","setShowConfirmDialog","showTimerDialog","setShowTimerDialog","popupPosition","setPopupPosition","confirmPosition","setConfirmPosition","isAnimating","setIsAnimating","timerInputValue","setTimerInputValue","preferences","setPreferences","playAttempts","setPlayAttempts","MAX_PLAY_ATTEMPTS","showDeleteConfirm","setShowDeleteConfirm","deletePosition","setDeletePosition","canvasRef","analyserRef","animationRef","isPlayingRef","endTimeRefs","showTextToSpeech","setShowTextToSpeech","isOperationInProgress","setIsOperationInProgress","loadAudios","current","_canvasRef$current$ge","getContext","clearRect","width","height","data","getAudios","forEach","audio","loadAudioPreferences","id","error","console","audioId","prefs","loadPreferences","auto_repeat","timer_end_at","endTime","Date","getTime","now","timeLeft","Math","max","floor","interval","repeat_interval","newEndTime","toISOString","updatePreferences","startNewTimerCycle","undefined","prev","last_played_at","play_count","handleTimeUpdate","currentTime","duration","handleProgressClick","e","bounds","currentTarget","getBoundingClientRect","x","clientX","left","percentage","existingEndTime","initialTimeLeft","clearInterval","attemptCount","MAX_ATTEMPTS","createNewCycle","_audioRef$current","setTimeout","audioData","getAudio","src","url","Promise","resolve","addEventListener","once","play","intervalId","setInterval","timerEndTime","newTimeLeft","handleAudioEnd","togglePlay","pause","_audioRef$current2","catch","_audioRef$current3","handleUpload","event","_event$target$files","file","target","files","log","name","fileExt","split","pop","fileName","random","filePath","uploadData","uploadError","storage","from","upload","publicUrl","getPublicUrl","newAudio","addAudio","title","value","startRepeatTimer","minutes","seconds","stopRepeatTimer","newTimers","handleDelete","_fileUrl$split$","audioToDelete","find","a","fileUrl","storageError","remove","list","search","deleteAudio","newPrefs","updatedFiles","formatTime","mins","secs","toString","padStart","formatTimeLeft","ceil","remainingSeconds","getNextAudioInfo","length","nextAudioId","nextAudio","timer","nextScheduledAudio","shortestTime","Infinity","Object","entries","handleUpdateTitle","newTitle","updateAudio","map","ConfirmDialog","onConfirm","onEdit","onCancel","buttonPosition","className","onClick","children","style","top","y","transform","opacity","transition","_jsxFileName","lineNumber","columnNumber","SetTimerDialog","audioTitle","inputValue","onInputChange","type","min","onChange","placeholder","onKeyDown","key","parseInt","autoFocus","disabled","handleShowTimerDialog","rect","handleShowConfirmDialog","document","createElement","innerHTML","head","appendChild","DeleteConfirmDialog","_canvasRef$current$ge2","_canvasRef$current$ge3","animate","canvas","ctx","bufferLength","frequencyBinCount","dataArray","Uint8Array","draw","requestAnimationFrame","getByteFrequencyData","fillStyle","fillRect","waves","points","spacing","w","baseY","beginPath","moveTo","index","amplitude","frequency","phase","sin","lineTo","gradient","createLinearGradient","alpha","addColorStop","strokeStyle","lineWidth","stroke","save","filter","restore","i","size","arc","PI","fill","ref","_audioRef$current4","_audioRef$current5","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onTimeUpdate","onPlay","window","dispatchEvent","Event","onPause","nextInfo","accept","onBlur","trim","onDoubleClick","apiKey","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/Users/genil/Desktop/em desemvolvimento Sistema academia/src/components/AudioPlayer.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { audioService, AudioData } from '../lib/supabase';\nimport { supabase } from '../lib/supabase';\nimport '../styles/animations.css';\nimport TextToSpeech from './TextToSpeech';\n\ninterface AudioTimer {\n  interval: number;\n  timeLeft: number;\n  intervalId: NodeJS.Timeout;\n  endTime: string;\n}\n\ninterface AudioPlayerProps {\n  onEnded: () => void;\n  isPlaying: boolean;\n  setIsPlaying: (playing: boolean) => void;\n}\n\nconst AudioPlayer: React.FC<AudioPlayerProps> = ({ onEnded, isPlaying, setIsPlaying }) => {\n  const [audios, setAudios] = useState<AudioData[]>([]);\n  const [currentAudio, setCurrentAudio] = useState<AudioData | null>(null);\n  const [progress, setProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const [audioTimers, setAudioTimers] = useState<Record<string, AudioTimer>>({});\n  const timersRef = useRef<Record<string, NodeJS.Timeout>>({});\n  const [timerAudioId, setTimerAudioId] = useState<string | null>(null);\n  const [pendingAudioId, setPendingAudioId] = useState<string | null>(null);\n  const [pendingAudios, setPendingAudios] = useState<string[]>([]);\n  const playAttemptRef = useRef<NodeJS.Timeout | null>(null);\n  const [editingAudioId, setEditingAudioId] = useState<string | null>(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [showConfirmDialog, setShowConfirmDialog] = useState<string | null>(null);\n  const [showTimerDialog, setShowTimerDialog] = useState<string | null>(null);\n  const [popupPosition, setPopupPosition] = useState<{ x: number; y: number } | null>(null);\n  const [confirmPosition, setConfirmPosition] = useState<{ x: number; y: number } | null>(null);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [timerInputValue, setTimerInputValue] = useState('');\n  const [preferences, setPreferences] = useState<Record<string, {\n    auto_repeat: boolean;\n    repeat_interval: number;\n    last_played_at?: string;\n    play_count: number;\n  }>>({});\n  const [playAttempts, setPlayAttempts] = useState(0);\n  const MAX_PLAY_ATTEMPTS = 3;\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState<string | null>(null);\n  const [deletePosition, setDeletePosition] = useState<{ x: number; y: number } | null>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const analyserRef = useRef<AnalyserNode | null>(null);\n  const animationRef = useRef<number | null>(null);\n  const isPlayingRef = useRef(false);\n  const endTimeRefs = useRef<Record<string, string>>({});\n  const [showTextToSpeech, setShowTextToSpeech] = useState(false);\n  const [isOperationInProgress, setIsOperationInProgress] = useState(false);\n\n  useEffect(() => {\n    loadAudios();\n    return () => {\n      if (canvasRef.current) {\n        canvasRef.current.getContext('2d')?.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      }\n    };\n  }, []);\n\n  const loadAudios = async () => {\n    try {\n      const data = await audioService.getAudios();\n      setAudios(data);\n      \n      // Carrega as preferências para cada áudio\n      data.forEach(audio => {\n        loadAudioPreferences(audio.id);\n      });\n    } catch (error) {\n      console.error('Erro ao carregar áudios:', error);\n    }\n  };\n\n  const loadAudioPreferences = async (audioId: string) => {\n    try {\n      const prefs = await audioService.loadPreferences(audioId);\n      \n      if (prefs.auto_repeat && prefs.timer_end_at) {\n        const endTime = new Date(prefs.timer_end_at).getTime();\n        const now = Date.now();\n        const timeLeft = Math.max(0, Math.floor((endTime - now) / 1000));\n\n        // Se ainda há tempo restante ou se acabou de terminar\n        if (timeLeft >= 0) {\n          const interval = prefs.repeat_interval * 60;\n          \n          // Se o timer acabou de terminar, cria um novo ciclo\n          if (timeLeft === 0) {\n            const newEndTime = new Date(Date.now() + interval * 1000).toISOString();\n            \n            // Atualiza o endTime no banco\n            await audioService.updatePreferences(audioId, {\n              ...prefs,\n              timer_end_at: newEndTime\n            });\n\n            // Inicia novo ciclo com o novo endTime\n            startNewTimerCycle(audioId, interval, newEndTime);\n          } else {\n            // Continua o ciclo atual com o tempo restante\n            startNewTimerCycle(audioId, interval, prefs.timer_end_at);\n          }\n        } else {\n          // Se o timer expirou há muito tempo, desativa-o\n          await audioService.updatePreferences(audioId, {\n            auto_repeat: false,\n            timer_end_at: undefined,\n            repeat_interval: 0\n          });\n        }\n      }\n\n      // Atualiza as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          auto_repeat: prefs.auto_repeat || false,\n          repeat_interval: prefs.repeat_interval || 0,\n          last_played_at: prefs.last_played_at,\n          play_count: prefs.play_count || 0\n        }\n      }));\n\n    } catch (error) {\n      // Mantém o erro silencioso\n    }\n  };\n\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const progress = (audioRef.current.currentTime / audioRef.current.duration) * 100;\n      setProgress(progress);\n    }\n  };\n\n  const handleProgressClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (audioRef.current) {\n      const bounds = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - bounds.left;\n      const width = bounds.width;\n      const percentage = x / width;\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\n    }\n  };\n\n  const startNewTimerCycle = (audioId: string, interval: number, existingEndTime?: string) => {\n    endTimeRefs.current[audioId] = existingEndTime || new Date(Date.now() + interval * 1000).toISOString();\n    const initialTimeLeft = Math.max(0, Math.floor((new Date(endTimeRefs.current[audioId]).getTime() - Date.now()) / 1000));\n    \n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n    }\n\n    let attemptCount = 0;\n    const MAX_ATTEMPTS = 3;\n\n    const createNewCycle = async () => {\n      try {\n        if (isPlayingRef.current) {\n          if (attemptCount < MAX_ATTEMPTS) {\n            attemptCount++;\n            setTimeout(() => createNewCycle(), 1000);\n          } else {\n            isPlayingRef.current = false;\n          }\n          return;\n        }\n\n        isPlayingRef.current = true;\n        attemptCount = 0;\n        \n        const audioData = await audioService.getAudio(audioId);\n        if (!audioData) {\n          isPlayingRef.current = false;\n          return;\n        }\n\n        // Primeiro atualiza as preferências\n        const newEndTime = new Date(Date.now() + interval * 1000).toISOString();\n        await audioService.updatePreferences(audioId, {\n          auto_repeat: true,\n          repeat_interval: interval / 60,\n          timer_end_at: newEndTime\n        });\n\n        endTimeRefs.current[audioId] = newEndTime;\n\n        // Depois prepara o áudio\n        if (audioRef.current) {\n          audioRef.current.src = audioData.url;\n          audioRef.current.currentTime = 0;\n\n          // Aguarda o áudio estar pronto\n          await new Promise((resolve) => {\n            audioRef.current!.addEventListener('canplay', resolve, { once: true });\n          });\n\n          setCurrentAudio(audioData);\n          setIsPlaying(true);\n\n          try {\n            await audioRef.current.play();\n          } catch (error) {\n            isPlayingRef.current = false;\n            setIsPlaying(false);\n            return;\n          }\n        }\n\n        // Libera para próxima reprodução quando este áudio terminar\n        audioRef.current?.addEventListener('ended', () => {\n          isPlayingRef.current = false;\n          setIsPlaying(false);\n        }, { once: true });\n\n      } catch (error) {\n        isPlayingRef.current = false;\n        setIsPlaying(false);\n      }\n    };\n\n    const intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const timerEndTime = new Date(endTimeRefs.current[audioId]).getTime();\n      const newTimeLeft = Math.max(0, Math.floor((timerEndTime - currentTime) / 1000));\n\n      if (newTimeLeft === 0 && !isPlayingRef.current) {\n        createNewCycle();\n      }\n\n      setAudioTimers(prev => ({\n        ...prev,\n        [audioId]: {\n          interval,\n          timeLeft: newTimeLeft,\n          intervalId,\n          endTime: endTimeRefs.current[audioId]\n        }\n      }));\n    }, 1000);\n\n    timersRef.current[audioId] = intervalId;\n\n    setAudioTimers(prev => ({\n      ...prev,\n      [audioId]: {\n        interval,\n        timeLeft: initialTimeLeft,\n        intervalId,\n        endTime: endTimeRefs.current[audioId]\n      }\n    }));\n\n    if (initialTimeLeft === 0) {\n      createNewCycle();\n    }\n\n    return intervalId;\n  };\n\n  const handleAudioEnd = () => {\n    if (onEnded) {\n      onEnded();\n    }\n  };\n\n  const togglePlay = (audio: AudioData) => {\n    // Se clicou em um áudio diferente do atual\n    if (currentAudio?.id !== audio.id) {\n      // Para o áudio atual se estiver tocando\n      if (audioRef.current) {\n        audioRef.current.pause();\n        isPlayingRef.current = false;\n      }\n      // Apenas define o novo áudio\n      setCurrentAudio(audio);\n      \n      // Se não tiver timer ativo, inicia a reprodução manualmente\n      if (!audioTimers[audio.id]) {\n        if (audioRef.current) {\n          audioRef.current.src = audio.url;\n          audioRef.current.currentTime = 0;\n          \n          // Aguarda o áudio estar pronto antes de reproduzir\n          audioRef.current.addEventListener('canplay', () => {\n            if (!isPlayingRef.current) {\n              isPlayingRef.current = true;\n              setIsPlaying(true);\n              audioRef.current?.play().catch(() => {\n                isPlayingRef.current = false;\n                setIsPlaying(false);\n              });\n            }\n          }, { once: true });\n        }\n      }\n    } else {\n      // Se clicou no mesmo áudio, apenas alterna play/pause\n      if (isPlaying) {\n        audioRef.current?.pause();\n        isPlayingRef.current = false;\n        setIsPlaying(false);\n      } else {\n        if (audioRef.current && !isPlayingRef.current) {\n          isPlayingRef.current = true;\n          setIsPlaying(true);\n          audioRef.current.play().catch(() => {\n            isPlayingRef.current = false;\n            setIsPlaying(false);\n          });\n        }\n      }\n    }\n  };\n\n  const handleUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    setIsUploading(true);\n    try {\n      console.log('Iniciando upload do arquivo:', file.name);\n      \n      // Upload do arquivo\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${Math.random()}.${fileExt}`;\n      const filePath = `audios/${fileName}`;\n\n      console.log('Tentando fazer upload para:', filePath);\n\n      const { data: uploadData, error: uploadError } = await supabase.storage\n        .from('media')\n        .upload(filePath, file);\n\n      if (uploadError) {\n        console.error('Erro no upload:', uploadError);\n        throw uploadError;\n      }\n\n      console.log('Upload bem sucedido:', uploadData);\n\n      // Obtém a URL pública\n      const { data: { publicUrl } } = supabase.storage\n        .from('media')\n        .getPublicUrl(filePath);\n\n      console.log('URL pública gerada:', publicUrl);\n\n      // Adiciona ao banco de dados\n      const newAudio = await audioService.addAudio({\n        title: file.name,\n        url: publicUrl,\n        auto_repeat: false,\n        repeat_interval: 0,\n        play_count: 0\n      });\n\n      console.log('Áudio adicionado ao banco:', newAudio);\n\n      // Recarrega todos os áudios\n      await loadAudios();\n      \n      // Seleciona o novo áudio\n      setCurrentAudio(newAudio);\n      \n      // Limpa o input\n      event.target.value = '';\n\n    } catch (error) {\n      console.error('Erro detalhado no upload:', error);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const startRepeatTimer = async (audioId: string, minutes: number) => {\n    setTimerAudioId(audioId);\n    const seconds = minutes * 60;\n    \n    // Inicia o novo ciclo do timer\n    startNewTimerCycle(audioId, seconds);\n\n    // Calcula o tempo de término\n    const endTime = new Date(Date.now() + seconds * 1000).toISOString();\n\n    // Salva as preferências no banco\n    try {\n      const prefs = {\n        auto_repeat: true,\n        repeat_interval: minutes,\n        timer_end_at: endTime\n      };\n      \n      await audioService.updatePreferences(audioId, prefs);\n      \n      // Atualiza também as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          ...prev[audioId],\n          auto_repeat: true,\n          repeat_interval: minutes\n        }\n      }));\n      \n      console.log(`Timer salvo para ${audioId} com intervalo de ${minutes}min`);\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n\n  const stopRepeatTimer = async (audioId: string) => {\n    // Não para o timer se o áudio estiver tocando\n    if (currentAudio?.id === audioId && isPlaying) {\n      return;\n    }\n\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n      delete timersRef.current[audioId];\n    }\n\n    setAudioTimers(prev => {\n      const newTimers = { ...prev };\n      delete newTimers[audioId];\n      return newTimers;\n    });\n\n    try {\n      const prefs = {\n        auto_repeat: false,\n        repeat_interval: 0,\n        timer_end_at: undefined\n      };\n      \n      await audioService.updatePreferences(audioId, prefs);\n      \n      // Atualiza também as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          ...prev[audioId],\n          auto_repeat: false,\n          repeat_interval: 0\n        }\n      }));\n      \n      console.log(`Timer removido para ${audioId}`);\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n\n  const handleDelete = async (audioId: string) => {\n    try {\n      const audioToDelete = audios.find(a => a.id === audioId);\n      if (!audioToDelete) return;\n\n      const fileUrl = audioToDelete.url;\n      const fileName = fileUrl.split('/audios/')[1]?.split('?')[0];\n\n      if (fileName) {\n        console.log('Tentando remover arquivo:', fileName);\n\n        try {\n          // Primeira tentativa de remoção\n          const { error: storageError } = await supabase.storage\n            .from('media')\n            .remove([`audios/${fileName}`]);\n\n          if (storageError) {\n            console.error('Erro ao remover arquivo:', storageError);\n            \n            // Se falhar, espera um momento e tenta novamente\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            \n            // Segunda tentativa\n            await supabase.storage\n              .from('media')\n              .remove([`audios/${fileName}`]);\n          }\n\n          // Verifica se o arquivo ainda existe\n          const { data: files } = await supabase.storage\n            .from('media')\n            .list('audios', {\n              search: fileName\n            });\n\n          console.log('Verificação após remoção:', files);\n        } catch (storageError) {\n          console.error('Erro ao acessar storage:', storageError);\n        }\n      }\n\n      // Remove o registro do banco de dados\n      await audioService.deleteAudio(audioId);\n\n      // Atualiza estados locais\n      if (currentAudio?.id === audioId) {\n        setCurrentAudio(null);\n        setIsPlaying(false);\n      }\n\n      if (audioTimers[audioId]) {\n        await stopRepeatTimer(audioId);\n      }\n\n      setPreferences(prev => {\n        const newPrefs = { ...prev };\n        delete newPrefs[audioId];\n        return newPrefs;\n      });\n\n      // Força uma atualização da lista de arquivos no storage\n      const { data: updatedFiles } = await supabase.storage\n        .from('media')\n        .list('audios');\n\n      console.log('Lista atualizada de arquivos:', updatedFiles);\n\n      // Recarrega a lista de áudios\n      await loadAudios();\n\n      console.log('Áudio removido com sucesso:', audioId);\n    } catch (error) {\n      console.error('Erro ao deletar áudio:', error);\n      try {\n        await loadAudios();\n      } catch (e) {\n        console.error('Erro ao recarregar áudios após falha:', e);\n      }\n    }\n  };\n\n  const formatTime = (seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Adicione esta função auxiliar para formatar o tempo do timer\n  const formatTimeLeft = (seconds: number): string => {\n    if (seconds < 60) {\n      return `${Math.ceil(seconds)}s`;\n    }\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.ceil(seconds % 60);\n    return `${minutes}min ${remainingSeconds}s`;\n  };\n\n  // Modifique a função getNextAudioInfo para verificar os timers ativos\n  const getNextAudioInfo = () => {\n    // Primeiro, verifica se há algum áudio pendente na fila\n    if (pendingAudios.length > 0) {\n      const nextAudioId = pendingAudios[0];\n      const nextAudio = audios.find(a => a.id === nextAudioId);\n      const timer = audioTimers[nextAudioId];\n      \n      return { nextAudio, timer };\n    }\n\n    // Se não há áudios pendentes, procura o próximo áudio agendado\n    let nextScheduledAudio = null;\n    let shortestTime = Infinity;\n\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      if (timer.timeLeft < shortestTime) {\n        const audio = audios.find(a => a.id === audioId);\n        if (audio) {\n          nextScheduledAudio = {\n            nextAudio: audio,\n            timer: timer\n          };\n          shortestTime = timer.timeLeft;\n        }\n      }\n    });\n\n    return nextScheduledAudio;\n  };\n\n  const handleUpdateTitle = async (audioId: string, newTitle: string) => {\n    try {\n      await audioService.updateAudio(audioId, { title: newTitle });\n      // Atualiza o estado local dos áudios\n      setAudios(prev => prev.map(audio => \n        audio.id === audioId ? { ...audio, title: newTitle } : audio\n      ));\n      // Se o áudio sendo editado é o atual, atualiza também o currentAudio\n      if (currentAudio?.id === audioId) {\n        setCurrentAudio(prev => prev ? { ...prev, title: newTitle } : null);\n      }\n      setEditingAudioId(null);\n    } catch (error) {\n      console.error('Erro ao atualizar título:', error);\n    }\n  };\n\n  const ConfirmDialog = ({ \n    audioId, \n    onConfirm,\n    onEdit,\n    onCancel,\n    buttonPosition\n  }: { \n    audioId: string;\n    onConfirm: () => void;\n    onEdit: () => void;\n    onCancel: () => void;\n    buttonPosition: { x: number; y: number } | null;\n  }) => (\n    <div className=\"fixed inset-0 z-50\" onClick={(e) => {\n      if (e.target === e.currentTarget) onCancel();\n    }}>\n      <div \n        className=\"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\"\n        style={{\n          top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n          left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n          transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n          opacity: isAnimating ? 0 : 1,\n          transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n        }}\n      >\n        <h3 className=\"text-[#e1aa1e] font-medium text-sm mb-2\">Gerenciar Repetição</h3>\n        <p className=\"text-gray-300 text-xs mb-4\">\n          Escolha uma das opções para editar a repetição automática:\n        </p>\n        <div className=\"flex justify-end gap-2\">\n          <button\n            onClick={onCancel}\n            className=\"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\"\n          >\n            Cancelar\n          </button>\n          <button\n            onClick={onEdit}\n            className=\"px-3 py-1.5 rounded bg-[#e1aa1e]/20 text-xs text-[#e1aa1e] hover:bg-[#e1aa1e]/30 transition-colors\"\n          >\n            Editar\n          </button>\n          <button\n            onClick={onConfirm}\n            className=\"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors\"\n          >\n            Desativar\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  const SetTimerDialog = ({ \n    audioId, \n    audioTitle,\n    onConfirm, \n    onCancel,\n    buttonPosition,\n    inputValue,\n    onInputChange\n  }: { \n    audioId: string;\n    audioTitle: string;\n    onConfirm: (minutes: number) => void;\n    onCancel: () => void;\n    buttonPosition: { x: number; y: number } | null;\n    inputValue: string;\n    onInputChange: (value: string) => void;\n  }) => {\n    return (\n      <div className=\"fixed inset-0 z-50\" onClick={(e) => {\n        if (e.target === e.currentTarget) onCancel();\n      }}>\n        <div \n          className=\"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\"\n          style={{\n            top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n            left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n            transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n            opacity: isAnimating ? 0 : 1,\n            transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n          }}\n        >\n          <h3 className=\"text-[#e1aa1e] font-medium text-sm mb-2\">Repetir Áudio</h3>\n          <p className=\"text-gray-300 text-xs mb-3 truncate\">\n            {audioTitle}\n          </p>\n          \n          <div className=\"relative mb-4\">\n            <input\n              type=\"number\"\n              min=\"1\"\n              value={inputValue}\n              onChange={(e) => onInputChange(e.target.value)}\n              placeholder=\"00\"\n              className=\"w-full px-3 py-2 bg-[#1e1e1e] border border-[#404040] rounded text-gray-200 text-center focus:border-[#e1aa1e] focus:outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none pr-12\"\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  const value = parseInt(inputValue);\n                  if (value > 0) onConfirm(value);\n                } else if (e.key === 'Escape') {\n                  onCancel();\n                }\n              }}\n              autoFocus\n            />\n            <span className=\"absolute right-3 top-1/2 -translate-y-1/2 text-xs text-gray-400\">\n              minutos\n            </span>\n          </div>\n\n          <div className=\"flex justify-end gap-2\">\n            <button\n              onClick={onCancel}\n              className=\"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\"\n            >\n              Cancelar\n            </button>\n            <button\n              onClick={() => {\n                const value = parseInt(inputValue);\n                if (value > 0) onConfirm(value);\n              }}\n              disabled={!inputValue || parseInt(inputValue) <= 0}\n              className=\"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              Ativar\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const handleShowTimerDialog = (e: React.MouseEvent, audioId: string) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setPopupPosition({ \n      x: rect.left + rect.width/2, \n      y: rect.top + rect.height/2 \n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowTimerDialog(audioId);\n    }, 10);\n  };\n\n  const handleShowConfirmDialog = (e: React.MouseEvent, audioId: string) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setConfirmPosition({ \n      x: rect.left + rect.width/2, \n      y: rect.top + rect.height/2 \n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowConfirmDialog(audioId);\n    }, 10);\n  };\n\n  // Adicione este useEffect para gerenciar a seleção de texto\n  useEffect(() => {\n    const style = document.createElement('style');\n    style.innerHTML = `\n      .dragging * {\n        user-select: none !important;\n        -webkit-user-select: none !important;\n        cursor: grabbing !important;\n      }\n    `;\n    document.head.appendChild(style);\n    return () => style.remove();\n  }, []);\n\n  const DeleteConfirmDialog = ({ \n    audioId, \n    onConfirm,\n    onCancel,\n    buttonPosition\n  }: { \n    audioId: string;\n    onConfirm: () => void;\n    onCancel: () => void;\n    buttonPosition: { x: number; y: number } | null;\n  }) => (\n    <div className=\"fixed inset-0 z-50\" onClick={(e) => {\n      if (e.target === e.currentTarget) onCancel();\n    }}>\n      <div \n        className=\"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\"\n        style={{\n          top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n          left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n          transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n          opacity: isAnimating ? 0 : 1,\n          transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n        }}\n      >\n        <h3 className=\"text-red-500 font-medium text-sm mb-2\">Confirmar Exclusão</h3>\n        <p className=\"text-gray-300 text-xs mb-4\">\n          Tem certeza que deseja excluir este áudio?\n        </p>\n        <div className=\"flex justify-end gap-2\">\n          <button\n            onClick={onCancel}\n            className=\"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\"\n          >\n            Cancelar\n          </button>\n          <button\n            onClick={onConfirm}\n            className=\"px-3 py-1.5 rounded bg-red-500 text-xs text-white hover:bg-red-600 transition-colors\"\n          >\n            Excluir\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  useEffect(() => {\n    if (audioRef.current && canvasRef.current) {\n      if (isPlaying) {\n        audioRef.current.play();\n        canvasRef.current.getContext('2d')?.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      } else {\n        audioRef.current.pause();\n        canvasRef.current.getContext('2d')?.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      }\n    }\n  }, [isPlaying]);\n\n  const animate = () => {\n    if (!canvasRef.current || !analyserRef.current) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const bufferLength = analyserRef.current.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n\n    const draw = () => {\n      animationRef.current = requestAnimationFrame(draw);\n      analyserRef.current!.getByteFrequencyData(dataArray);\n\n      // Fundo com gradiente\n      ctx.fillStyle = '#1e1e1e';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Número de ondas e configurações\n      const waves = 3;\n      const points = 100;\n      const spacing = canvas.height / (waves + 1);\n\n      // Para cada linha de onda\n      for (let w = 1; w <= waves; w++) {\n        const baseY = spacing * w;\n        \n        ctx.beginPath();\n        ctx.moveTo(0, baseY);\n\n        // Desenha a onda através da largura do canvas\n        for (let x = 0; x <= canvas.width; x++) {\n          const progress = x / canvas.width;\n          const index = Math.floor(progress * bufferLength);\n          const value = dataArray[index] / 255.0;\n          \n          // Amplitude varia com o áudio\n          const amplitude = isPlaying ? 30 * value : 10;\n          \n          // Frequência e fase variam com o tempo e posição\n          const frequency = 0.02;\n          const phase = Date.now() * 0.002 + w;\n          \n          // Calcula a posição Y com múltiplas ondas sobrepostas\n          const y = baseY + \n                   Math.sin(x * frequency + phase) * amplitude +\n                   Math.sin(x * frequency * 0.5 + phase * 1.5) * amplitude * 0.5;\n\n          ctx.lineTo(x, y);\n        }\n\n        // Gradiente para a onda\n        const gradient = ctx.createLinearGradient(0, baseY - 50, 0, baseY + 50);\n        const alpha = isPlaying ? (0.5 - (w - 1) * 0.1) : 0.2;\n        \n        gradient.addColorStop(0, `rgba(225, 170, 30, 0)`);\n        gradient.addColorStop(0.5, `rgba(225, 170, 30, ${alpha})`);\n        gradient.addColorStop(1, `rgba(225, 170, 30, 0)`);\n\n        ctx.strokeStyle = gradient;\n        ctx.lineWidth = 2;\n        ctx.stroke();\n\n        // Efeito de brilho\n        if (isPlaying) {\n          ctx.save();\n          ctx.filter = 'blur(4px)';\n          ctx.strokeStyle = `rgba(225, 170, 30, ${alpha * 0.5})`;\n          ctx.lineWidth = 4;\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n\n      // Adiciona partículas brilhantes\n      if (isPlaying) {\n        for (let i = 0; i < bufferLength; i += 8) {\n          const value = dataArray[i] / 255.0;\n          if (value > 0.5) {\n            const x = Math.random() * canvas.width;\n            const y = Math.random() * canvas.height;\n            const size = Math.random() * 3 * value;\n\n            ctx.beginPath();\n            ctx.arc(x, y, size, 0, Math.PI * 2);\n            ctx.fillStyle = `rgba(225, 170, 30, ${value * 0.3})`;\n            ctx.fill();\n          }\n        }\n      }\n    };\n\n    draw();\n  };\n\n  return (\n    <div className=\"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-4\">\n      {/* Player Principal com Visualizador */}\n      <div className=\"mb-4 bg-[#2d2d2d] rounded-lg border border-[#404040] overflow-hidden\">\n        {/* Título do Áudio */}\n        <div className=\"p-3 border-b border-[#404040]\">\n          <h3 className=\"text-[#e1aa1e] font-medium text-center\">\n            {currentAudio?.title || 'Selecione um áudio'}\n          </h3>\n        </div>\n\n        {/* Área do Visualizador */}\n        <div className=\"relative h-32 bg-[#1e1e1e] p-4\">\n          <canvas\n            ref={canvasRef}\n            className=\"absolute inset-0 w-full h-full\"\n            width={1000}\n            height={200}\n          />\n          \n          {/* Botão de Play centralizado */}\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <button\n              onClick={() => {\n                if (currentAudio) {\n                  setIsPlaying(!isPlaying);\n                  if (isPlaying) {\n                    audioRef.current?.pause();\n                  } else {\n                    audioRef.current?.play();\n                  }\n                }\n              }}\n              className={`p-4 rounded-full bg-[#e1aa1e]/90 hover:bg-[#e1aa1e] transition-all transform \n                hover:scale-105 active:scale-95 ${isPlaying ? 'animate-pulse' : ''}`}\n              disabled={!currentAudio}\n            >\n              <svg\n                className=\"w-8 h-8 text-gray-900\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                {isPlaying ? (\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2.5}\n                    d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                ) : (\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2.5}\n                    d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                )}\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        {/* Controles e Progresso */}\n        <div className=\"p-4 bg-[#1e1e1e]/50\">\n          <audio\n            ref={audioRef}\n            src={currentAudio?.url}\n            onTimeUpdate={handleTimeUpdate}\n            onEnded={handleAudioEnd}\n            onPlay={() => window.dispatchEvent(new Event('audioPlay'))}\n            onPause={() => window.dispatchEvent(new Event('audioStop'))}\n            className=\"hidden\"\n          />\n\n          {/* Barra de Progresso */}\n          <div\n            className=\"h-1 bg-[#404040] rounded-full cursor-pointer mb-2\"\n            onClick={handleProgressClick}\n          >\n            <div\n              className=\"h-full bg-[#e1aa1e] rounded-full\"\n              style={{ width: `${progress}%` }}\n            />\n          </div>\n\n          {/* Tempo */}\n          <div className=\"flex justify-between text-xs text-gray-400 mb-3\">\n            <span>{formatTime(audioRef.current?.currentTime || 0)}</span>\n            <span>{formatTime(audioRef.current?.duration || 0)}</span>\n          </div>\n\n          {/* Próxima Reprodução */}\n          {(() => {\n            const nextInfo = getNextAudioInfo();\n            if (!nextInfo?.nextAudio) return null;\n\n            return (\n              <div className=\"flex justify-end\">\n                <div className=\"text-right bg-[#2d2d2d] px-3 py-1 rounded border border-[#404040]/50\">\n                  <div className=\"text-xs text-gray-400\">\n                    Próximo: {nextInfo.nextAudio.title}\n                  </div>\n                  {nextInfo.timer && (\n                    <div className=\"text-xs text-[#e1aa1e]\">\n                      Em {formatTimeLeft(nextInfo.timer.timeLeft)}\n                    </div>\n                  )}\n                </div>\n              </div>\n            );\n          })()}\n        </div>\n      </div>\n\n      {/* Cabeçalho da Lista */}\n      <div className=\"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\">\n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-sm text-gray-400 px-2\">Lista de Áudios</span>\n        </div>\n\n        {/* Botão de Upload */}\n        <div className=\"flex gap-3\">\n          <label className=\"flex-1 relative\">\n            <input\n              type=\"file\"\n              onChange={handleUpload}\n              accept=\"audio/*\"\n              className=\"hidden\"\n              disabled={isUploading}\n            />\n            <div className={`w-full bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-4 py-2 rounded flex items-center justify-center gap-2 transition-colors cursor-pointer whitespace-nowrap ${\n              isUploading ? 'opacity-50 cursor-not-allowed' : ''\n            }`}>\n              <svg className=\"w-5 h-5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n              </svg>\n              <span className=\"truncate\">{isUploading ? 'Enviando...' : 'Anexar Áudio'}</span>\n            </div>\n          </label>\n\n          <button\n            onClick={() => setShowTextToSpeech(true)}\n            className=\"flex-1 bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-4 py-2 rounded flex items-center justify-center gap-2 transition-colors whitespace-nowrap\"\n          >\n            <svg className=\"w-5 h-5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\" />\n            </svg>\n            <span className=\"truncate\">Falar Texto</span>\n          </button>\n        </div>\n      </div>\n\n      {/* Lista de Áudios */}\n      <div className=\"space-y-2 max-h-[400px] overflow-y-auto\">\n        <div className=\"text-xs text-gray-400 italic mb-2 px-2\">\n          Clique no ícone de edição ou dê um duplo clique no nome para renomear\n        </div>\n\n        {audios.map((audio) => (\n          <div\n            key={audio.id}\n            className=\"flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors min-w-0 bg-[#1e1e1e] mb-2\"\n          >\n            <button\n              onClick={() => togglePlay(audio)}\n              className=\"p-1 hover:bg-[#404040] rounded-full transition-colors\"\n            >\n              <svg\n                className=\"w-6 h-6 text-[#e1aa1e]\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                {isPlaying && currentAudio?.id === audio.id ? (\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                ) : (\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                )}\n              </svg>\n            </button>\n\n            {editingAudioId === audio.id ? (\n                    <input\n                type=\"text\"\n                value={editingTitle}\n                onChange={(e) => setEditingTitle(e.target.value)}\n                onBlur={() => {\n                  if (editingTitle.trim() && editingTitle !== audio.title) {\n                    handleUpdateTitle(audio.id, editingTitle);\n                  } else {\n                    setEditingAudioId(null);\n                  }\n                }}\n                      onKeyDown={(e) => {\n                        if (e.key === 'Enter') {\n                    if (editingTitle.trim() && editingTitle !== audio.title) {\n                      handleUpdateTitle(audio.id, editingTitle);\n                    } else {\n                      setEditingAudioId(null);\n                    }\n                  } else if (e.key === 'Escape') {\n                    setEditingAudioId(null);\n                  }\n                }}\n                className=\"flex-1 bg-[#1e1e1e] text-gray-200 px-2 py-1 rounded border border-[#404040] focus:border-[#e1aa1e] focus:outline-none\"\n                      autoFocus\n              />\n            ) : (\n              <div className=\"flex-1 flex items-center group\">\n                <div className=\"flex-1 flex items-center\">\n                <span \n                    className=\"truncate cursor-pointer hover:text-[#e1aa1e]\"\n                  onDoubleClick={() => {\n                    setEditingAudioId(audio.id);\n                    setEditingTitle(audio.title);\n                  }}\n                >\n                  {audio.title}\n                </span>\n                <button\n                  onClick={() => {\n                    setEditingAudioId(audio.id);\n                    setEditingTitle(audio.title);\n                  }}\n                    className=\"p-1 rounded-full hover:bg-[#404040] opacity-0 group-hover:opacity-100 transition-all ml-1\"\n                  title=\"Editar nome\"\n                >\n                  <svg\n                      className=\"w-4 h-4 text-[#e1aa1e]\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                    />\n                  </svg>\n                </button>\n                </div>\n              </div>\n            )}\n            \n            <div className=\"flex items-center gap-2 shrink-0\">\n                {audioTimers[audio.id] ? (\n                    <button\n                    onClick={(e) => {\n                      handleShowConfirmDialog(e, audio.id);\n                    }}\n                    className=\"flex items-center gap-1.5 px-2 py-1 rounded bg-[#e1aa1e]/10 text-[#e1aa1e] hover:bg-[#e1aa1e]/20 transition-colors\"\n                    title=\"Clique para desativar a repetição\"\n                  >\n                    <svg\n                      className=\"w-4 h-4\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                      />\n                    </svg>\n                    <span className=\"text-sm\">\n                      {formatTimeLeft(audioTimers[audio.id].timeLeft)}\n                    </span>\n                    </button>\n                ) : (\n                    <button\n                    onClick={(e) => {\n                      handleShowTimerDialog(e, audio.id);\n                    }}\n                    className=\"p-1.5 hover:bg-[#404040] rounded transition-colors text-gray-400 hover:text-[#e1aa1e]\"\n                    title=\"Ativar repetição automática\"\n                    >\n                      <svg\n                      className=\"w-4 h-4\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                        />\n                      </svg>\n                    </button>\n                )}\n\n              <button\n                onClick={(e) => {\n                  setDeletePosition({ x: e.currentTarget.getBoundingClientRect().x, y: e.currentTarget.getBoundingClientRect().y + 30 });\n                  setShowDeleteConfirm(audio.id);\n                }}\n                className=\"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\"\n                title=\"Excluir áudio\"\n              >\n                <svg\n                  className=\"w-5 h-5\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                  />\n                </svg>\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {showTimerDialog && (\n        <SetTimerDialog\n          audioId={showTimerDialog}\n          audioTitle={audios.find(a => a.id === showTimerDialog)?.title || ''}\n          onConfirm={(minutes) => {\n            startRepeatTimer(showTimerDialog, minutes);\n            setShowTimerDialog(null);\n            setPopupPosition(null);\n            setTimerInputValue('');\n          }}\n          onCancel={() => {\n            setShowTimerDialog(null);\n            setPopupPosition(null);\n            setTimerInputValue('');\n          }}\n          buttonPosition={popupPosition}\n          inputValue={timerInputValue}\n          onInputChange={setTimerInputValue}\n        />\n      )}\n\n      {showConfirmDialog && (\n        <ConfirmDialog\n          audioId={showConfirmDialog}\n          onConfirm={() => {\n            stopRepeatTimer(showConfirmDialog);\n            setShowConfirmDialog(null);\n            setConfirmPosition(null);\n          }}\n          onEdit={() => {\n            setShowConfirmDialog(null);\n            setConfirmPosition(null);\n            // Abre o diálogo de timer com a posição atual\n            setPopupPosition(confirmPosition);\n            setShowTimerDialog(showConfirmDialog);\n          }}\n          onCancel={() => {\n            setShowConfirmDialog(null);\n            setConfirmPosition(null);\n          }}\n          buttonPosition={confirmPosition}\n        />\n      )}\n\n      {showDeleteConfirm && (\n        <DeleteConfirmDialog\n          audioId={showDeleteConfirm}\n          onConfirm={() => {\n            handleDelete(showDeleteConfirm);\n            setShowDeleteConfirm(null);\n            setDeletePosition(null);\n          }}\n          onCancel={() => {\n            setShowDeleteConfirm(null);\n            setDeletePosition(null);\n          }}\n          buttonPosition={deletePosition}\n        />\n      )}\n\n      <TextToSpeech \n        apiKey=\"AIzaSyBvkopJSt0VaBRbqfdtevWDuCwVRDhNZ2o\"\n        isOpen={showTextToSpeech}\n        onClose={() => setShowTextToSpeech(false)}\n      />\n    </div>\n    \n  );\n};\n\nexport default AudioPlayer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}