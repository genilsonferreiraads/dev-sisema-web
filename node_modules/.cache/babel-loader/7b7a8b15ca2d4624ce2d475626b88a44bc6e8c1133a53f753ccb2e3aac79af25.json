{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genil\\\\Desktop\\\\Dev Sistema academia\\\\src\\\\components\\\\AudioPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { audioService } from '../lib/supabase';\nimport { supabase } from '../lib/supabase';\nimport '../styles/animations.css';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  onEnded,\n  isPlaying,\n  setIsPlaying\n}) => {\n  _s();\n  var _audioRef$current3, _audioRef$current4, _audios$find;\n  const [audios, setAudios] = useState([]);\n  const [currentAudio, setCurrentAudio] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const audioRef = useRef(null);\n  const [audioTimers, setAudioTimers] = useState({});\n  const timersRef = useRef({});\n  const [timerAudioId, setTimerAudioId] = useState(null);\n  const [pendingAudioId, setPendingAudioId] = useState(null);\n  const [pendingAudios, setPendingAudios] = useState([]);\n  const playAttemptRef = useRef(null);\n  const [editingAudioId, setEditingAudioId] = useState(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [showConfirmDialog, setShowConfirmDialog] = useState(null);\n  const [showTimerDialog, setShowTimerDialog] = useState(null);\n  const [popupPosition, setPopupPosition] = useState(null);\n  const [confirmPosition, setConfirmPosition] = useState(null);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [timerInputValue, setTimerInputValue] = useState('');\n  const [preferences, setPreferences] = useState({});\n  const [playAttempts, setPlayAttempts] = useState(0);\n  const MAX_PLAY_ATTEMPTS = 3;\n  useEffect(() => {\n    loadAudios();\n  }, []);\n  useEffect(() => {\n    const playAudio = async () => {\n      if (!audioRef.current) return;\n      try {\n        console.log('Tentando reproduzir áudio...');\n        await audioRef.current.play();\n        console.log('Áudio iniciado com sucesso');\n        window.dispatchEvent(new Event('audioPlay'));\n      } catch (error) {\n        console.error('Erro ao reproduzir áudio:', error);\n        if (error instanceof Error && error.name === 'AbortError') {\n          // Limpa qualquer tentativa pendente\n          if (playAttemptRef.current) {\n            clearTimeout(playAttemptRef.current);\n          }\n\n          // Tenta novamente após um delay\n          playAttemptRef.current = setTimeout(async () => {\n            try {\n              var _audioRef$current;\n              console.log('Tentando reproduzir novamente...');\n              await ((_audioRef$current = audioRef.current) === null || _audioRef$current === void 0 ? void 0 : _audioRef$current.play());\n              console.log('Áudio iniciado na segunda tentativa');\n              window.dispatchEvent(new Event('audioPlay'));\n            } catch (retryError) {\n              console.error('Erro na segunda tentativa:', retryError);\n              setIsPlaying(false);\n            }\n          }, 500);\n        } else {\n          setIsPlaying(false);\n        }\n      }\n    };\n    if (audioRef.current) {\n      if (isPlaying) {\n        // Limpa qualquer tentativa pendente antes de iniciar uma nova\n        if (playAttemptRef.current) {\n          clearTimeout(playAttemptRef.current);\n          playAttemptRef.current = null;\n        }\n\n        // Adiciona um pequeno delay antes de tentar reproduzir\n        playAttemptRef.current = setTimeout(() => {\n          playAudio();\n        }, 100);\n      } else {\n        // Limpa qualquer tentativa pendente\n        if (playAttemptRef.current) {\n          clearTimeout(playAttemptRef.current);\n          playAttemptRef.current = null;\n        }\n        audioRef.current.pause();\n        window.dispatchEvent(new Event('audioStop'));\n      }\n    }\n\n    // Cleanup\n    return () => {\n      if (playAttemptRef.current) {\n        clearTimeout(playAttemptRef.current);\n        playAttemptRef.current = null;\n      }\n    };\n  }, [isPlaying]);\n  useEffect(() => {\n    return () => {\n      Object.values(timersRef.current).forEach(timer => {\n        clearInterval(timer);\n      });\n    };\n  }, []);\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.onended = () => {\n        console.log('Áudio terminou (evento nativo)');\n        handleAudioEnd();\n      };\n      audioRef.current.onloadeddata = () => {\n        if (isPlaying) {\n          var _audioRef$current2;\n          (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.play().catch(error => {\n            console.error('Erro ao reproduzir áudio após carregamento:', error);\n            setIsPlaying(false);\n          });\n        }\n      };\n    }\n  }, [audioRef.current]);\n  useEffect(() => {\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      const currentTime = Date.now();\n      const endTime = new Date(timer.endTime).getTime();\n      const timeLeft = Math.max(0, Math.floor((endTime - currentTime) / 1000));\n      if (timeLeft === 0) {\n        console.log('Timer zerou, iniciando novo ciclo e reprodução');\n\n        // Calcula o novo tempo de término para o próximo ciclo\n        const newEndTime = new Date(Date.now() + timer.interval * 1000).toISOString();\n\n        // Atualiza as preferências no banco antes de iniciar o novo ciclo\n        audioService.updatePreferences(audioId, {\n          auto_repeat: true,\n          repeat_interval: Math.floor(timer.interval / 60),\n          timer_end_at: newEndTime\n        }).catch(error => {\n          console.error('Erro ao atualizar preferências do timer:', error);\n        });\n\n        // Inicia um novo ciclo\n        startNewTimerCycle(audioId, timer.interval);\n\n        // Encontra e reproduz o áudio\n        const audio = audios.find(a => a.id === audioId);\n        if (audio) {\n          if (!isPlaying || (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId) {\n            const attemptPlay = async (attempts = 0) => {\n              try {\n                setCurrentAudio(audio);\n                if (audioRef.current) {\n                  audioRef.current.currentTime = 0;\n                  await audioRef.current.play();\n                  setIsPlaying(true);\n                  setPlayAttempts(0);\n                  console.log('Áudio iniciado com sucesso');\n                }\n              } catch (error) {\n                console.error(`Erro ao reproduzir áudio (tentativa ${attempts + 1}):`, error);\n                if (error instanceof Error && error.name === 'AbortError' && attempts < MAX_PLAY_ATTEMPTS) {\n                  console.log(`Tentando novamente em 500ms (tentativa ${attempts + 1})`);\n                  setPlayAttempts(attempts + 1);\n                  await new Promise(resolve => setTimeout(resolve, 500));\n                  return attemptPlay(attempts + 1);\n                }\n                setPendingAudios(prev => prev.includes(audioId) ? prev : [...prev, audioId]);\n              }\n            };\n            attemptPlay();\n          } else {\n            setPendingAudios(prev => {\n              if (prev.includes(audioId)) return prev;\n              return [...prev, audioId];\n            });\n          }\n        }\n      }\n    });\n  }, [audioTimers, audios, isPlaying, currentAudio]);\n  useEffect(() => {\n    const updateInterval = setInterval(() => {\n      audios.forEach(audio => {\n        const prefs = preferences[audio.id];\n        if (prefs !== null && prefs !== void 0 && prefs.auto_repeat && audioTimers[audio.id]) {\n          const timer = audioTimers[audio.id];\n          const currentTime = Date.now();\n          const endTime = new Date(timer.endTime).getTime();\n          const timeLeft = Math.max(0, Math.floor((endTime - currentTime) / 1000));\n          if (timeLeft !== timer.timeLeft) {\n            setAudioTimers(prev => ({\n              ...prev,\n              [audio.id]: {\n                ...timer,\n                timeLeft\n              }\n            }));\n          }\n        }\n      });\n    }, 1000);\n    return () => clearInterval(updateInterval);\n  }, [audios, preferences, audioTimers]);\n  const loadAudios = async () => {\n    try {\n      const data = await audioService.getAudios();\n      setAudios(data);\n\n      // Carrega as preferências para cada áudio\n      data.forEach(audio => {\n        loadAudioPreferences(audio.id);\n      });\n    } catch (error) {\n      console.error('Erro ao carregar áudios:', error);\n    }\n  };\n  const loadAudioPreferences = async audioId => {\n    try {\n      const prefs = await audioService.loadPreferences(audioId);\n      if (prefs.auto_repeat && prefs.timer_end_at) {\n        const endTime = new Date(prefs.timer_end_at).getTime();\n        const now = Date.now();\n        const timeLeft = Math.max(0, Math.floor((endTime - now) / 1000));\n        if (timeLeft > 0) {\n          const interval = prefs.repeat_interval * 60;\n\n          // Cria um timer temporário que será substituído pelo startNewTimerCycle\n          const tempIntervalId = setInterval(() => {}, 1000);\n\n          // Atualiza o timer com o tempo restante real\n          setAudioTimers(prev => ({\n            ...prev,\n            [audioId]: {\n              interval,\n              timeLeft,\n              intervalId: tempIntervalId,\n              endTime: prefs.timer_end_at\n            }\n          }));\n\n          // Inicia o ciclo do timer\n          startNewTimerCycle(audioId, interval, prefs.timer_end_at);\n\n          // Limpa o timer temporário\n          clearInterval(tempIntervalId);\n          console.log(`Restaurando timer para ${audioId} com ${timeLeft}s restantes de ${interval}s totais`);\n        } else {\n          await audioService.updatePreferences(audioId, {\n            auto_repeat: false,\n            timer_end_at: undefined,\n            repeat_interval: 0\n          });\n        }\n      }\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          auto_repeat: prefs.auto_repeat || false,\n          repeat_interval: prefs.repeat_interval || 0,\n          last_played_at: prefs.last_played_at,\n          play_count: prefs.play_count || 0\n        }\n      }));\n    } catch (error) {\n      console.error('Erro ao carregar preferências:', error);\n    }\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const progress = audioRef.current.currentTime / audioRef.current.duration * 100;\n      setProgress(progress);\n    }\n  };\n  const handleProgressClick = e => {\n    if (audioRef.current) {\n      const bounds = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - bounds.left;\n      const width = bounds.width;\n      const percentage = x / width;\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\n    }\n  };\n  const startNewTimerCycle = (audioId, interval, existingEndTime) => {\n    const endTime = existingEndTime || new Date(Date.now() + interval * 1000).toISOString();\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n    }\n    const intervalId = setInterval(() => {\n      setAudioTimers(prev => {\n        const currentTimer = prev[audioId];\n        if (!currentTimer) return prev;\n        const currentTime = Date.now();\n        const timerEndTime = new Date(currentTimer.endTime).getTime();\n        const newTimeLeft = Math.max(0, Math.floor((timerEndTime - currentTime) / 1000));\n        if (newTimeLeft === 0) {\n          return prev;\n        }\n        return {\n          ...prev,\n          [audioId]: {\n            ...currentTimer,\n            timeLeft: newTimeLeft\n          }\n        };\n      });\n    }, 1000);\n    setAudioTimers(prev => ({\n      ...prev,\n      [audioId]: {\n        interval,\n        timeLeft: existingEndTime ? Math.max(0, Math.floor((new Date(existingEndTime).getTime() - Date.now()) / 1000)) : interval,\n        intervalId,\n        endTime\n      }\n    }));\n    timersRef.current[audioId] = intervalId;\n  };\n  const handleAudioEnd = async () => {\n    console.log('Áudio terminou, verificando status...');\n    if (playAttemptRef.current) {\n      clearTimeout(playAttemptRef.current);\n      playAttemptRef.current = null;\n    }\n    if (audioRef.current) {\n      audioRef.current.currentTime = 0;\n    }\n    setProgress(0);\n\n    // Processa a fila de pendentes\n    if (pendingAudios.length > 0) {\n      const nextAudioId = pendingAudios[0];\n      const nextAudio = audios.find(a => a.id === nextAudioId);\n      setPendingAudios(prev => prev.slice(1));\n      if (nextAudio) {\n        const attemptPlay = async (attempts = 0) => {\n          try {\n            await new Promise(resolve => setTimeout(resolve, 500));\n            setCurrentAudio(nextAudio);\n            if (audioRef.current) {\n              await audioRef.current.play();\n              setIsPlaying(true);\n              setPlayAttempts(0);\n            }\n          } catch (error) {\n            console.error(`Erro ao reproduzir próximo áudio (tentativa ${attempts + 1}):`, error);\n            if (error instanceof Error && error.name === 'AbortError' && attempts < MAX_PLAY_ATTEMPTS) {\n              await new Promise(resolve => setTimeout(resolve, 500));\n              return attemptPlay(attempts + 1);\n            }\n            setIsPlaying(false);\n            onEnded();\n          }\n        };\n        attemptPlay();\n      }\n    } else {\n      setIsPlaying(false);\n      onEnded();\n    }\n    window.dispatchEvent(new Event('audioStop'));\n  };\n  const togglePlay = async audio => {\n    if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id) {\n      setIsPlaying(!isPlaying);\n    } else {\n      console.log('Mudando para novo áudio manualmente');\n      setCurrentAudio(audio);\n      if (audioRef.current) {\n        audioRef.current.currentTime = 0;\n      }\n      setIsPlaying(true);\n      // Não vamos mais limpar a fila de pendentes ao tocar manualmente\n      // setPendingAudios([]);\n    }\n    if (!isPlaying) {\n      try {\n        var _preferences$audio$id;\n        await audioService.updatePreferences(audio.id, {\n          last_played_at: new Date().toISOString(),\n          play_count: (((_preferences$audio$id = preferences[audio.id]) === null || _preferences$audio$id === void 0 ? void 0 : _preferences$audio$id.play_count) || 0) + 1\n        });\n      } catch (error) {\n        console.error('Erro ao atualizar estatísticas de reprodução:', error);\n      }\n    }\n  };\n  const handleUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    setIsUploading(true);\n    try {\n      console.log('Iniciando upload do arquivo:', file.name);\n\n      // Upload do arquivo\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${Math.random()}.${fileExt}`;\n      const filePath = `audios/${fileName}`;\n      console.log('Tentando fazer upload para:', filePath);\n      const {\n        data: uploadData,\n        error: uploadError\n      } = await supabase.storage.from('media').upload(filePath, file);\n      if (uploadError) {\n        console.error('Erro no upload:', uploadError);\n        throw uploadError;\n      }\n      console.log('Upload bem sucedido:', uploadData);\n\n      // Obtém a URL pública\n      const {\n        data: {\n          publicUrl\n        }\n      } = supabase.storage.from('media').getPublicUrl(filePath);\n      console.log('URL pública gerada:', publicUrl);\n\n      // Adiciona ao banco de dados\n      const newAudio = await audioService.addAudio({\n        title: file.name,\n        url: publicUrl,\n        auto_repeat: false,\n        repeat_interval: 0,\n        play_count: 0\n      });\n      console.log('Áudio adicionado ao banco:', newAudio);\n\n      // Recarrega todos os áudios\n      await loadAudios();\n\n      // Seleciona o novo áudio\n      setCurrentAudio(newAudio);\n\n      // Limpa o input\n      event.target.value = '';\n    } catch (error) {\n      console.error('Erro detalhado no upload:', error);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const startRepeatTimer = async (audioId, minutes) => {\n    setTimerAudioId(audioId);\n    const seconds = minutes * 60;\n\n    // Inicia o novo ciclo do timer\n    startNewTimerCycle(audioId, seconds);\n\n    // Calcula o tempo de término\n    const endTime = new Date(Date.now() + seconds * 1000).toISOString();\n\n    // Salva as preferências no banco\n    try {\n      const prefs = {\n        auto_repeat: true,\n        repeat_interval: minutes,\n        timer_end_at: endTime\n      };\n      await audioService.updatePreferences(audioId, prefs);\n\n      // Atualiza também as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          ...prev[audioId],\n          auto_repeat: true,\n          repeat_interval: minutes\n        }\n      }));\n      console.log(`Timer salvo para ${audioId} com intervalo de ${minutes}min`);\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n  const stopRepeatTimer = async audioId => {\n    // Não para o timer se o áudio estiver tocando\n    if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId && isPlaying) {\n      return;\n    }\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n      delete timersRef.current[audioId];\n    }\n    setAudioTimers(prev => {\n      const newTimers = {\n        ...prev\n      };\n      delete newTimers[audioId];\n      return newTimers;\n    });\n    try {\n      const prefs = {\n        auto_repeat: false,\n        repeat_interval: 0,\n        timer_end_at: undefined\n      };\n      await audioService.updatePreferences(audioId, prefs);\n\n      // Atualiza também as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          ...prev[audioId],\n          auto_repeat: false,\n          repeat_interval: 0\n        }\n      }));\n      console.log(`Timer removido para ${audioId}`);\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n  const handleDelete = async audioId => {\n    try {\n      await audioService.deleteAudio(audioId);\n      if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId) {\n        setCurrentAudio(null);\n        setIsPlaying(false);\n      }\n      await loadAudios();\n    } catch (error) {\n      console.error('Erro ao deletar áudio:', error);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Adicione esta função auxiliar para formatar o tempo do timer\n  const formatTimeLeft = seconds => {\n    if (seconds < 60) {\n      return `${Math.ceil(seconds)}s`;\n    }\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.ceil(seconds % 60);\n    return `${minutes}min ${remainingSeconds}s`;\n  };\n\n  // Modifique a função getNextAudioInfo para verificar os timers ativos\n  const getNextAudioInfo = () => {\n    // Primeiro, verifica se há algum áudio pendente na fila\n    if (pendingAudios.length > 0) {\n      const nextAudioId = pendingAudios[0];\n      const nextAudio = audios.find(a => a.id === nextAudioId);\n      const timer = audioTimers[nextAudioId];\n      return {\n        nextAudio,\n        timer\n      };\n    }\n\n    // Se não há áudios pendentes, procura o próximo áudio agendado\n    let nextScheduledAudio = null;\n    let shortestTime = Infinity;\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      if (timer.timeLeft < shortestTime) {\n        const audio = audios.find(a => a.id === audioId);\n        if (audio) {\n          nextScheduledAudio = {\n            nextAudio: audio,\n            timer: timer\n          };\n          shortestTime = timer.timeLeft;\n        }\n      }\n    });\n    return nextScheduledAudio;\n  };\n  const handleUpdateTitle = async (audioId, newTitle) => {\n    try {\n      await audioService.updateAudio(audioId, {\n        title: newTitle\n      });\n      // Atualiza o estado local dos áudios\n      setAudios(prev => prev.map(audio => audio.id === audioId ? {\n        ...audio,\n        title: newTitle\n      } : audio));\n      // Se o áudio sendo editado é o atual, atualiza também o currentAudio\n      if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId) {\n        setCurrentAudio(prev => prev ? {\n          ...prev,\n          title: newTitle\n        } : null);\n      }\n      setEditingAudioId(null);\n    } catch (error) {\n      console.error('Erro ao atualizar título:', error);\n    }\n  };\n  const ConfirmDialog = ({\n    audioId,\n    onConfirm,\n    onEdit,\n    onCancel,\n    buttonPosition\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50\",\n    onClick: e => {\n      if (e.target === e.currentTarget) onCancel();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\",\n      style: {\n        top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n        left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n        transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n        opacity: isAnimating ? 0 : 1,\n        transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-[#e1aa1e] font-medium text-sm mb-2\",\n        children: \"Gerenciar Repeti\\xE7\\xE3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300 text-xs mb-4\",\n        children: \"Escolha uma das op\\xE7\\xF5es para editar a repeti\\xE7\\xE3o autom\\xE1tica:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onCancel,\n          className: \"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onEdit,\n          className: \"px-3 py-1.5 rounded bg-[#e1aa1e]/20 text-xs text-[#e1aa1e] hover:bg-[#e1aa1e]/30 transition-colors\",\n          children: \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onConfirm,\n          className: \"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors\",\n          children: \"Desativar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 677,\n    columnNumber: 5\n  }, this);\n  const SetTimerDialog = ({\n    audioId,\n    audioTitle,\n    onConfirm,\n    onCancel,\n    buttonPosition,\n    inputValue,\n    onInputChange\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-50\",\n      onClick: e => {\n        if (e.target === e.currentTarget) onCancel();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\",\n        style: {\n          top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n          left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n          transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n          opacity: isAnimating ? 0 : 1,\n          transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-[#e1aa1e] font-medium text-sm mb-2\",\n          children: \"Repetir \\xC1udio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300 text-xs mb-3 truncate\",\n          children: audioTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            value: inputValue,\n            onChange: e => onInputChange(e.target.value),\n            placeholder: \"00\",\n            className: \"w-full px-3 py-2 bg-[#1e1e1e] border border-[#404040] rounded text-gray-200 text-center focus:border-[#e1aa1e] focus:outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none pr-12\",\n            onKeyDown: e => {\n              if (e.key === 'Enter') {\n                const value = parseInt(inputValue);\n                if (value > 0) onConfirm(value);\n              } else if (e.key === 'Escape') {\n                onCancel();\n              }\n            },\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"absolute right-3 top-1/2 -translate-y-1/2 text-xs text-gray-400\",\n            children: \"minutos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onCancel,\n            className: \"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\",\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const value = parseInt(inputValue);\n              if (value > 0) onConfirm(value);\n            },\n            disabled: !inputValue || parseInt(inputValue) <= 0,\n            className: \"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",\n            children: \"Ativar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 7\n    }, this);\n  };\n  const handleShowTimerDialog = (e, audioId) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setPopupPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2\n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowTimerDialog(audioId);\n    }, 10);\n  };\n  const handleShowConfirmDialog = (e, audioId) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setConfirmPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2\n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowConfirmDialog(audioId);\n    }, 10);\n  };\n\n  // Adicione este useEffect para gerenciar a seleção de texto\n  useEffect(() => {\n    const style = document.createElement('style');\n    style.innerHTML = `\n      .dragging * {\n        user-select: none !important;\n        -webkit-user-select: none !important;\n        cursor: grabbing !important;\n      }\n    `;\n    document.head.appendChild(style);\n    return () => style.remove();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 bg-[#2d2d2d] rounded-lg p-4 border border-[#404040]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-[#e1aa1e] font-medium\",\n          children: (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.title) || 'Selecione um áudio'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.url,\n        onTimeUpdate: handleTimeUpdate,\n        onEnded: handleAudioEnd,\n        className: \"hidden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-1 bg-[#404040] rounded-full cursor-pointer mb-4\",\n        onClick: handleProgressClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-full bg-[#e1aa1e] rounded-full\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between text-xs text-gray-400 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: formatTime(((_audioRef$current3 = audioRef.current) === null || _audioRef$current3 === void 0 ? void 0 : _audioRef$current3.currentTime) || 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: formatTime(((_audioRef$current4 = audioRef.current) === null || _audioRef$current4 === void 0 ? void 0 : _audioRef$current4.duration) || 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 871,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => currentAudio && togglePlay(currentAudio),\n            className: \"p-2 hover:bg-[#404040] rounded-full transition-colors\",\n            disabled: !currentAudio,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-8 h-8 text-[#e1aa1e]\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: isPlaying ? /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 892,\n                columnNumber: 17\n              }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 899,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 885,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 880,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 9\n        }, this), (() => {\n          const nextInfo = getNextAudioInfo();\n          if (!(nextInfo !== null && nextInfo !== void 0 && nextInfo.nextAudio)) return null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-right bg-[#1e1e1e] px-3 py-1 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-400\",\n                children: [\"Pr\\xF3ximo: \", nextInfo.nextAudio.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 918,\n                columnNumber: 19\n              }, this), nextInfo.timer && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-[#e1aa1e]\",\n                children: [\"Em \", formatTimeLeft(nextInfo.timer.timeLeft)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 922,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 916,\n            columnNumber: 15\n          }, this);\n        })()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-400 px-2\",\n          children: \"Lista de \\xC1udios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"bg-[#e1aa1e] hover:bg-[#e1aa1e]/80 text-gray-900 px-3 py-1.5 rounded cursor-pointer transition-colors text-sm\",\n          children: [isUploading ? 'Enviando...' : 'Anexar Áudio', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"hidden\",\n            accept: \"audio/*\",\n            onChange: handleUpload,\n            disabled: isUploading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 943,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 940,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 934,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2 max-h-[400px] overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-400 italic mb-2 px-2\",\n        children: \"Clique no \\xEDcone de edi\\xE7\\xE3o ou d\\xEA um duplo clique no nome para renomear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 956,\n        columnNumber: 9\n      }, this), audios.map(audio => /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: false,\n        className: \"flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors min-w-0 bg-[#1e1e1e] mb-2\",\n        layout: true,\n        transition: {\n          layout: {\n            duration: 0.3,\n            ease: [0.25, 1, 0.5, 1]\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => togglePlay(audio),\n          className: \"p-1 hover:bg-[#404040] rounded-full transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-6 h-6 text-[#e1aa1e]\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: isPlaying && (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id ? /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 984,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 991,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 977,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 973,\n          columnNumber: 13\n        }, this), editingAudioId === audio.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editingTitle,\n          onChange: e => setEditingTitle(e.target.value),\n          onBlur: () => {\n            if (editingTitle.trim() && editingTitle !== audio.title) {\n              handleUpdateTitle(audio.id, editingTitle);\n            } else {\n              setEditingAudioId(null);\n            }\n          },\n          onKeyDown: e => {\n            if (e.key === 'Enter') {\n              if (editingTitle.trim() && editingTitle !== audio.title) {\n                handleUpdateTitle(audio.id, editingTitle);\n              } else {\n                setEditingAudioId(null);\n              }\n            } else if (e.key === 'Escape') {\n              setEditingAudioId(null);\n            }\n          },\n          className: \"flex-1 bg-[#1e1e1e] text-gray-200 px-2 py-1 rounded border border-[#404040] focus:border-[#e1aa1e] focus:outline-none\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1002,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 flex items-center group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"truncate cursor-pointer hover:text-[#e1aa1e]\",\n              onDoubleClick: () => {\n                setEditingAudioId(audio.id);\n                setEditingTitle(audio.title);\n              },\n              children: audio.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1030,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setEditingAudioId(audio.id);\n                setEditingTitle(audio.title);\n              },\n              className: \"p-1 rounded-full hover:bg-[#404040] opacity-0 group-hover:opacity-100 transition-all ml-1\",\n              title: \"Editar nome\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-4 h-4 text-[#e1aa1e]\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1053,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1047,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1039,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1029,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1028,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 shrink-0\",\n          children: [audioTimers[audio.id] ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              handleShowConfirmDialog(e, audio.id);\n            },\n            className: \"flex items-center gap-1.5 px-2 py-1 rounded bg-[#e1aa1e]/10 text-[#e1aa1e] hover:bg-[#e1aa1e]/20 transition-colors\",\n            title: \"Clique para desativar a repeti\\xE7\\xE3o\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-4 h-4\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1080,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1074,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: formatTimeLeft(audioTimers[audio.id].timeLeft)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1087,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1067,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              handleShowTimerDialog(e, audio.id);\n            },\n            className: \"p-1.5 hover:bg-[#404040] rounded transition-colors text-gray-400 hover:text-[#e1aa1e]\",\n            title: \"Ativar repeti\\xE7\\xE3o autom\\xE1tica\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-4 h-4\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1105,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1099,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(audio.id),\n            className: \"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-5 h-5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1125,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1119,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1065,\n          columnNumber: 13\n        }, this)]\n      }, audio.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 961,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 955,\n      columnNumber: 7\n    }, this), showTimerDialog && /*#__PURE__*/_jsxDEV(SetTimerDialog, {\n      audioId: showTimerDialog,\n      audioTitle: ((_audios$find = audios.find(a => a.id === showTimerDialog)) === null || _audios$find === void 0 ? void 0 : _audios$find.title) || '',\n      onConfirm: minutes => {\n        startRepeatTimer(showTimerDialog, minutes);\n        setShowTimerDialog(null);\n        setPopupPosition(null);\n        setTimerInputValue('');\n      },\n      onCancel: () => {\n        setShowTimerDialog(null);\n        setPopupPosition(null);\n        setTimerInputValue('');\n      },\n      buttonPosition: popupPosition,\n      inputValue: timerInputValue,\n      onInputChange: setTimerInputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1139,\n      columnNumber: 9\n    }, this), showConfirmDialog && /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      audioId: showConfirmDialog,\n      onConfirm: () => {\n        stopRepeatTimer(showConfirmDialog);\n        setShowConfirmDialog(null);\n        setConfirmPosition(null);\n      },\n      onEdit: () => {\n        setShowConfirmDialog(null);\n        setConfirmPosition(null);\n        // Abre o diálogo de timer com a posição atual\n        setPopupPosition(confirmPosition);\n        setShowTimerDialog(showConfirmDialog);\n      },\n      onCancel: () => {\n        setShowConfirmDialog(null);\n        setConfirmPosition(null);\n      },\n      buttonPosition: confirmPosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1160,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 841,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"w0i8Lydq+mFaK8jZEU50McjM7D8=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","audioService","supabase","motion","jsxDEV","_jsxDEV","AudioPlayer","onEnded","isPlaying","setIsPlaying","_s","_audioRef$current3","_audioRef$current4","_audios$find","audios","setAudios","currentAudio","setCurrentAudio","progress","setProgress","isUploading","setIsUploading","audioRef","audioTimers","setAudioTimers","timersRef","timerAudioId","setTimerAudioId","pendingAudioId","setPendingAudioId","pendingAudios","setPendingAudios","playAttemptRef","editingAudioId","setEditingAudioId","editingTitle","setEditingTitle","showConfirmDialog","setShowConfirmDialog","showTimerDialog","setShowTimerDialog","popupPosition","setPopupPosition","confirmPosition","setConfirmPosition","isAnimating","setIsAnimating","timerInputValue","setTimerInputValue","preferences","setPreferences","playAttempts","setPlayAttempts","MAX_PLAY_ATTEMPTS","loadAudios","playAudio","current","console","log","play","window","dispatchEvent","Event","error","Error","name","clearTimeout","setTimeout","_audioRef$current","retryError","pause","Object","values","forEach","timer","clearInterval","onended","handleAudioEnd","onloadeddata","_audioRef$current2","catch","entries","audioId","currentTime","Date","now","endTime","getTime","timeLeft","Math","max","floor","newEndTime","interval","toISOString","updatePreferences","auto_repeat","repeat_interval","timer_end_at","startNewTimerCycle","audio","find","a","id","attemptPlay","attempts","Promise","resolve","prev","includes","updateInterval","setInterval","prefs","data","getAudios","loadAudioPreferences","loadPreferences","tempIntervalId","intervalId","undefined","last_played_at","play_count","handleTimeUpdate","duration","handleProgressClick","e","bounds","currentTarget","getBoundingClientRect","x","clientX","left","width","percentage","existingEndTime","currentTimer","timerEndTime","newTimeLeft","length","nextAudioId","nextAudio","slice","togglePlay","_preferences$audio$id","handleUpload","event","_event$target$files","file","target","files","fileExt","split","pop","fileName","random","filePath","uploadData","uploadError","storage","from","upload","publicUrl","getPublicUrl","newAudio","addAudio","title","url","value","startRepeatTimer","minutes","seconds","stopRepeatTimer","newTimers","handleDelete","deleteAudio","formatTime","mins","secs","toString","padStart","formatTimeLeft","ceil","remainingSeconds","getNextAudioInfo","nextScheduledAudio","shortestTime","Infinity","handleUpdateTitle","newTitle","updateAudio","map","ConfirmDialog","onConfirm","onEdit","onCancel","buttonPosition","className","onClick","children","style","top","y","transform","opacity","transition","_jsxFileName","lineNumber","columnNumber","SetTimerDialog","audioTitle","inputValue","onInputChange","type","min","onChange","placeholder","onKeyDown","key","parseInt","autoFocus","disabled","handleShowTimerDialog","rect","height","handleShowConfirmDialog","document","createElement","innerHTML","head","appendChild","remove","ref","src","onTimeUpdate","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","nextInfo","accept","div","initial","layout","ease","onBlur","trim","onDoubleClick","_c","$RefreshReg$"],"sources":["C:/Users/genil/Desktop/Dev Sistema academia/src/components/AudioPlayer.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { audioService, AudioData } from '../lib/supabase';\nimport { supabase } from '../lib/supabase';\nimport '../styles/animations.css';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface AudioTimer {\n  interval: number;\n  timeLeft: number;\n  intervalId: NodeJS.Timeout;\n  endTime: string;\n}\n\ninterface AudioPlayerProps {\n  onEnded: () => void;\n  isPlaying: boolean;\n  setIsPlaying: (playing: boolean) => void;\n}\n\nconst AudioPlayer: React.FC<AudioPlayerProps> = ({ onEnded, isPlaying, setIsPlaying }) => {\n  const [audios, setAudios] = useState<AudioData[]>([]);\n  const [currentAudio, setCurrentAudio] = useState<AudioData | null>(null);\n  const [progress, setProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const [audioTimers, setAudioTimers] = useState<Record<string, AudioTimer>>({});\n  const timersRef = useRef<Record<string, NodeJS.Timeout>>({});\n  const [timerAudioId, setTimerAudioId] = useState<string | null>(null);\n  const [pendingAudioId, setPendingAudioId] = useState<string | null>(null);\n  const [pendingAudios, setPendingAudios] = useState<string[]>([]);\n  const playAttemptRef = useRef<NodeJS.Timeout | null>(null);\n  const [editingAudioId, setEditingAudioId] = useState<string | null>(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [showConfirmDialog, setShowConfirmDialog] = useState<string | null>(null);\n  const [showTimerDialog, setShowTimerDialog] = useState<string | null>(null);\n  const [popupPosition, setPopupPosition] = useState<{ x: number; y: number } | null>(null);\n  const [confirmPosition, setConfirmPosition] = useState<{ x: number; y: number } | null>(null);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [timerInputValue, setTimerInputValue] = useState('');\n  const [preferences, setPreferences] = useState<Record<string, {\n    auto_repeat: boolean;\n    repeat_interval: number;\n    last_played_at?: string;\n    play_count: number;\n  }>>({});\n  const [playAttempts, setPlayAttempts] = useState(0);\n  const MAX_PLAY_ATTEMPTS = 3;\n\n  useEffect(() => {\n    loadAudios();\n  }, []);\n\n  useEffect(() => {\n    const playAudio = async () => {\n      if (!audioRef.current) return;\n\n      try {\n        console.log('Tentando reproduzir áudio...');\n        await audioRef.current.play();\n        console.log('Áudio iniciado com sucesso');\n        window.dispatchEvent(new Event('audioPlay'));\n      } catch (error: unknown) {\n        console.error('Erro ao reproduzir áudio:', error);\n        if (error instanceof Error && error.name === 'AbortError') {\n          // Limpa qualquer tentativa pendente\n          if (playAttemptRef.current) {\n            clearTimeout(playAttemptRef.current);\n          }\n          \n          // Tenta novamente após um delay\n          playAttemptRef.current = setTimeout(async () => {\n            try {\n              console.log('Tentando reproduzir novamente...');\n              await audioRef.current?.play();\n              console.log('Áudio iniciado na segunda tentativa');\n              window.dispatchEvent(new Event('audioPlay'));\n            } catch (retryError) {\n              console.error('Erro na segunda tentativa:', retryError);\n              setIsPlaying(false);\n            }\n          }, 500);\n        } else {\n          setIsPlaying(false);\n        }\n      }\n    };\n\n    if (audioRef.current) {\n      if (isPlaying) {\n        // Limpa qualquer tentativa pendente antes de iniciar uma nova\n        if (playAttemptRef.current) {\n          clearTimeout(playAttemptRef.current);\n          playAttemptRef.current = null;\n        }\n        \n        // Adiciona um pequeno delay antes de tentar reproduzir\n        playAttemptRef.current = setTimeout(() => {\n          playAudio();\n        }, 100);\n      } else {\n        // Limpa qualquer tentativa pendente\n        if (playAttemptRef.current) {\n          clearTimeout(playAttemptRef.current);\n          playAttemptRef.current = null;\n        }\n        audioRef.current.pause();\n        window.dispatchEvent(new Event('audioStop'));\n      }\n    }\n\n    // Cleanup\n    return () => {\n      if (playAttemptRef.current) {\n        clearTimeout(playAttemptRef.current);\n        playAttemptRef.current = null;\n      }\n    };\n  }, [isPlaying]);\n\n  useEffect(() => {\n    return () => {\n      Object.values(timersRef.current).forEach(timer => {\n        clearInterval(timer);\n      });\n    };\n  }, []);\n\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.onended = () => {\n        console.log('Áudio terminou (evento nativo)');\n        handleAudioEnd();\n      };\n\n      audioRef.current.onloadeddata = () => {\n        if (isPlaying) {\n          audioRef.current?.play().catch(error => {\n            console.error('Erro ao reproduzir áudio após carregamento:', error);\n            setIsPlaying(false);\n          });\n        }\n      };\n    }\n  }, [audioRef.current]);\n\n  useEffect(() => {\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      const currentTime = Date.now();\n      const endTime = new Date(timer.endTime).getTime();\n      const timeLeft = Math.max(0, Math.floor((endTime - currentTime) / 1000));\n\n      if (timeLeft === 0) {\n        console.log('Timer zerou, iniciando novo ciclo e reprodução');\n        \n        // Calcula o novo tempo de término para o próximo ciclo\n        const newEndTime = new Date(Date.now() + timer.interval * 1000).toISOString();\n        \n        // Atualiza as preferências no banco antes de iniciar o novo ciclo\n        audioService.updatePreferences(audioId, {\n          auto_repeat: true,\n          repeat_interval: Math.floor(timer.interval / 60),\n          timer_end_at: newEndTime\n        }).catch(error => {\n          console.error('Erro ao atualizar preferências do timer:', error);\n        });\n\n        // Inicia um novo ciclo\n        startNewTimerCycle(audioId, timer.interval);\n\n        // Encontra e reproduz o áudio\n        const audio = audios.find(a => a.id === audioId);\n        if (audio) {\n          if (!isPlaying || (currentAudio?.id === audioId)) {\n            const attemptPlay = async (attempts = 0): Promise<void> => {\n              try {\n                setCurrentAudio(audio);\n                if (audioRef.current) {\n                  audioRef.current.currentTime = 0;\n                  await audioRef.current.play();\n                  setIsPlaying(true);\n                  setPlayAttempts(0);\n                  console.log('Áudio iniciado com sucesso');\n                }\n              } catch (error) {\n                console.error(`Erro ao reproduzir áudio (tentativa ${attempts + 1}):`, error);\n                \n                if (error instanceof Error && error.name === 'AbortError' && attempts < MAX_PLAY_ATTEMPTS) {\n                  console.log(`Tentando novamente em 500ms (tentativa ${attempts + 1})`);\n                  setPlayAttempts(attempts + 1);\n                  \n                  await new Promise(resolve => setTimeout(resolve, 500));\n                  return attemptPlay(attempts + 1);\n                }\n                \n                setPendingAudios(prev => \n                  prev.includes(audioId) ? prev : [...prev, audioId]\n                );\n              }\n            };\n\n            attemptPlay();\n          } else {\n            setPendingAudios(prev => {\n              if (prev.includes(audioId)) return prev;\n              return [...prev, audioId];\n            });\n          }\n        }\n      }\n    });\n  }, [audioTimers, audios, isPlaying, currentAudio]);\n\n  useEffect(() => {\n    const updateInterval = setInterval(() => {\n      audios.forEach(audio => {\n        const prefs = preferences[audio.id];\n        if (prefs?.auto_repeat && audioTimers[audio.id]) {\n          const timer = audioTimers[audio.id];\n          const currentTime = Date.now();\n          const endTime = new Date(timer.endTime).getTime();\n          const timeLeft = Math.max(0, Math.floor((endTime - currentTime) / 1000));\n\n          if (timeLeft !== timer.timeLeft) {\n            setAudioTimers(prev => ({\n              ...prev,\n              [audio.id]: {\n                ...timer,\n                timeLeft\n              }\n            }));\n          }\n        }\n      });\n    }, 1000);\n\n    return () => clearInterval(updateInterval);\n  }, [audios, preferences, audioTimers]);\n\n  const loadAudios = async () => {\n    try {\n      const data = await audioService.getAudios();\n      setAudios(data);\n      \n      // Carrega as preferências para cada áudio\n      data.forEach(audio => {\n        loadAudioPreferences(audio.id);\n      });\n    } catch (error) {\n      console.error('Erro ao carregar áudios:', error);\n    }\n  };\n\n  const loadAudioPreferences = async (audioId: string) => {\n    try {\n      const prefs = await audioService.loadPreferences(audioId);\n      \n      if (prefs.auto_repeat && prefs.timer_end_at) {\n        const endTime = new Date(prefs.timer_end_at).getTime();\n        const now = Date.now();\n        const timeLeft = Math.max(0, Math.floor((endTime - now) / 1000));\n        \n        if (timeLeft > 0) {\n          const interval = prefs.repeat_interval * 60;\n          \n          // Cria um timer temporário que será substituído pelo startNewTimerCycle\n          const tempIntervalId = setInterval(() => {}, 1000);\n          \n          // Atualiza o timer com o tempo restante real\n          setAudioTimers(prev => ({\n            ...prev,\n            [audioId]: {\n              interval,\n              timeLeft,\n              intervalId: tempIntervalId,\n              endTime: prefs.timer_end_at\n            }\n          }));\n          \n          // Inicia o ciclo do timer\n          startNewTimerCycle(audioId, interval, prefs.timer_end_at);\n          \n          // Limpa o timer temporário\n          clearInterval(tempIntervalId);\n          \n          console.log(`Restaurando timer para ${audioId} com ${timeLeft}s restantes de ${interval}s totais`);\n        } else {\n          await audioService.updatePreferences(audioId, {\n            auto_repeat: false,\n            timer_end_at: undefined,\n            repeat_interval: 0\n          });\n        }\n      }\n\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          auto_repeat: prefs.auto_repeat || false,\n          repeat_interval: prefs.repeat_interval || 0,\n          last_played_at: prefs.last_played_at,\n          play_count: prefs.play_count || 0\n        }\n      }));\n    } catch (error) {\n      console.error('Erro ao carregar preferências:', error);\n    }\n  };\n\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const progress = (audioRef.current.currentTime / audioRef.current.duration) * 100;\n      setProgress(progress);\n    }\n  };\n\n  const handleProgressClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (audioRef.current) {\n      const bounds = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - bounds.left;\n      const width = bounds.width;\n      const percentage = x / width;\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\n    }\n  };\n\n  const startNewTimerCycle = (audioId: string, interval: number, existingEndTime?: string) => {\n    const endTime = existingEndTime || new Date(Date.now() + interval * 1000).toISOString();\n    \n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n    }\n\n    const intervalId = setInterval(() => {\n      setAudioTimers(prev => {\n        const currentTimer = prev[audioId];\n        if (!currentTimer) return prev;\n\n        const currentTime = Date.now();\n        const timerEndTime = new Date(currentTimer.endTime).getTime();\n        const newTimeLeft = Math.max(0, Math.floor((timerEndTime - currentTime) / 1000));\n\n        if (newTimeLeft === 0) {\n          return prev;\n        }\n\n        return {\n          ...prev,\n          [audioId]: {\n            ...currentTimer,\n            timeLeft: newTimeLeft\n          }\n        };\n      });\n    }, 1000);\n\n    setAudioTimers(prev => ({\n      ...prev,\n      [audioId]: {\n        interval,\n        timeLeft: existingEndTime ? \n          Math.max(0, Math.floor((new Date(existingEndTime).getTime() - Date.now()) / 1000)) : \n          interval,\n        intervalId,\n        endTime\n      }\n    }));\n\n    timersRef.current[audioId] = intervalId;\n  };\n\n  const handleAudioEnd = async () => {\n    console.log('Áudio terminou, verificando status...');\n    \n    if (playAttemptRef.current) {\n      clearTimeout(playAttemptRef.current);\n      playAttemptRef.current = null;\n    }\n\n    if (audioRef.current) {\n      audioRef.current.currentTime = 0;\n    }\n    setProgress(0);\n\n    // Processa a fila de pendentes\n    if (pendingAudios.length > 0) {\n      const nextAudioId = pendingAudios[0];\n      const nextAudio = audios.find(a => a.id === nextAudioId);\n      setPendingAudios(prev => prev.slice(1));\n\n      if (nextAudio) {\n        const attemptPlay = async (attempts = 0): Promise<void> => {\n          try {\n            await new Promise(resolve => setTimeout(resolve, 500));\n            setCurrentAudio(nextAudio);\n            if (audioRef.current) {\n              await audioRef.current.play();\n              setIsPlaying(true);\n              setPlayAttempts(0);\n            }\n          } catch (error) {\n            console.error(`Erro ao reproduzir próximo áudio (tentativa ${attempts + 1}):`, error);\n            \n            if (error instanceof Error && error.name === 'AbortError' && attempts < MAX_PLAY_ATTEMPTS) {\n              await new Promise(resolve => setTimeout(resolve, 500));\n              return attemptPlay(attempts + 1);\n            }\n            \n            setIsPlaying(false);\n            onEnded();\n          }\n        };\n\n        attemptPlay();\n      }\n    } else {\n      setIsPlaying(false);\n      onEnded();\n    }\n\n    window.dispatchEvent(new Event('audioStop'));\n  };\n\n  const togglePlay = async (audio: AudioData) => {\n    if (currentAudio?.id === audio.id) {\n      setIsPlaying(!isPlaying);\n    } else {\n      console.log('Mudando para novo áudio manualmente');\n      setCurrentAudio(audio);\n      if (audioRef.current) {\n        audioRef.current.currentTime = 0;\n      }\n      setIsPlaying(true);\n      // Não vamos mais limpar a fila de pendentes ao tocar manualmente\n      // setPendingAudios([]);\n    }\n\n    if (!isPlaying) {\n      try {\n        await audioService.updatePreferences(audio.id, {\n          last_played_at: new Date().toISOString(),\n          play_count: (preferences[audio.id]?.play_count || 0) + 1\n        });\n      } catch (error) {\n        console.error('Erro ao atualizar estatísticas de reprodução:', error);\n      }\n    }\n  };\n\n  const handleUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    setIsUploading(true);\n    try {\n      console.log('Iniciando upload do arquivo:', file.name);\n      \n      // Upload do arquivo\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${Math.random()}.${fileExt}`;\n      const filePath = `audios/${fileName}`;\n\n      console.log('Tentando fazer upload para:', filePath);\n\n      const { data: uploadData, error: uploadError } = await supabase.storage\n        .from('media')\n        .upload(filePath, file);\n\n      if (uploadError) {\n        console.error('Erro no upload:', uploadError);\n        throw uploadError;\n      }\n\n      console.log('Upload bem sucedido:', uploadData);\n\n      // Obtém a URL pública\n      const { data: { publicUrl } } = supabase.storage\n        .from('media')\n        .getPublicUrl(filePath);\n\n      console.log('URL pública gerada:', publicUrl);\n\n      // Adiciona ao banco de dados\n      const newAudio = await audioService.addAudio({\n        title: file.name,\n        url: publicUrl,\n        auto_repeat: false,\n        repeat_interval: 0,\n        play_count: 0\n      });\n\n      console.log('Áudio adicionado ao banco:', newAudio);\n\n      // Recarrega todos os áudios\n      await loadAudios();\n      \n      // Seleciona o novo áudio\n      setCurrentAudio(newAudio);\n      \n      // Limpa o input\n      event.target.value = '';\n\n    } catch (error) {\n      console.error('Erro detalhado no upload:', error);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const startRepeatTimer = async (audioId: string, minutes: number) => {\n    setTimerAudioId(audioId);\n    const seconds = minutes * 60;\n    \n    // Inicia o novo ciclo do timer\n    startNewTimerCycle(audioId, seconds);\n\n    // Calcula o tempo de término\n    const endTime = new Date(Date.now() + seconds * 1000).toISOString();\n\n    // Salva as preferências no banco\n    try {\n      const prefs = {\n        auto_repeat: true,\n        repeat_interval: minutes,\n        timer_end_at: endTime\n      };\n      \n      await audioService.updatePreferences(audioId, prefs);\n      \n      // Atualiza também as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          ...prev[audioId],\n          auto_repeat: true,\n          repeat_interval: minutes\n        }\n      }));\n      \n      console.log(`Timer salvo para ${audioId} com intervalo de ${minutes}min`);\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n\n  const stopRepeatTimer = async (audioId: string) => {\n    // Não para o timer se o áudio estiver tocando\n    if (currentAudio?.id === audioId && isPlaying) {\n      return;\n    }\n\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n      delete timersRef.current[audioId];\n    }\n\n    setAudioTimers(prev => {\n      const newTimers = { ...prev };\n      delete newTimers[audioId];\n      return newTimers;\n    });\n\n    try {\n      const prefs = {\n        auto_repeat: false,\n        repeat_interval: 0,\n        timer_end_at: undefined\n      };\n      \n      await audioService.updatePreferences(audioId, prefs);\n      \n      // Atualiza também as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          ...prev[audioId],\n          auto_repeat: false,\n          repeat_interval: 0\n        }\n      }));\n      \n      console.log(`Timer removido para ${audioId}`);\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n\n  const handleDelete = async (audioId: string) => {\n    try {\n      await audioService.deleteAudio(audioId);\n      if (currentAudio?.id === audioId) {\n        setCurrentAudio(null);\n        setIsPlaying(false);\n      }\n      await loadAudios();\n    } catch (error) {\n      console.error('Erro ao deletar áudio:', error);\n    }\n  };\n\n  const formatTime = (seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Adicione esta função auxiliar para formatar o tempo do timer\n  const formatTimeLeft = (seconds: number): string => {\n    if (seconds < 60) {\n      return `${Math.ceil(seconds)}s`;\n    }\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.ceil(seconds % 60);\n    return `${minutes}min ${remainingSeconds}s`;\n  };\n\n  // Modifique a função getNextAudioInfo para verificar os timers ativos\n  const getNextAudioInfo = () => {\n    // Primeiro, verifica se há algum áudio pendente na fila\n    if (pendingAudios.length > 0) {\n      const nextAudioId = pendingAudios[0];\n      const nextAudio = audios.find(a => a.id === nextAudioId);\n      const timer = audioTimers[nextAudioId];\n      \n      return { nextAudio, timer };\n    }\n\n    // Se não há áudios pendentes, procura o próximo áudio agendado\n    let nextScheduledAudio = null;\n    let shortestTime = Infinity;\n\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      if (timer.timeLeft < shortestTime) {\n        const audio = audios.find(a => a.id === audioId);\n        if (audio) {\n          nextScheduledAudio = {\n            nextAudio: audio,\n            timer: timer\n          };\n          shortestTime = timer.timeLeft;\n        }\n      }\n    });\n\n    return nextScheduledAudio;\n  };\n\n  const handleUpdateTitle = async (audioId: string, newTitle: string) => {\n    try {\n      await audioService.updateAudio(audioId, { title: newTitle });\n      // Atualiza o estado local dos áudios\n      setAudios(prev => prev.map(audio => \n        audio.id === audioId ? { ...audio, title: newTitle } : audio\n      ));\n      // Se o áudio sendo editado é o atual, atualiza também o currentAudio\n      if (currentAudio?.id === audioId) {\n        setCurrentAudio(prev => prev ? { ...prev, title: newTitle } : null);\n      }\n      setEditingAudioId(null);\n    } catch (error) {\n      console.error('Erro ao atualizar título:', error);\n    }\n  };\n\n  const ConfirmDialog = ({ \n    audioId, \n    onConfirm,\n    onEdit,\n    onCancel,\n    buttonPosition\n  }: { \n    audioId: string;\n    onConfirm: () => void;\n    onEdit: () => void;\n    onCancel: () => void;\n    buttonPosition: { x: number; y: number } | null;\n  }) => (\n    <div className=\"fixed inset-0 z-50\" onClick={(e) => {\n      if (e.target === e.currentTarget) onCancel();\n    }}>\n      <div \n        className=\"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\"\n        style={{\n          top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n          left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n          transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n          opacity: isAnimating ? 0 : 1,\n          transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n        }}\n      >\n        <h3 className=\"text-[#e1aa1e] font-medium text-sm mb-2\">Gerenciar Repetiçã</h3>\n        <p className=\"text-gray-300 text-xs mb-4\">\n          Escolha uma das opções para editar a repetição automática:\n        </p>\n        <div className=\"flex justify-end gap-2\">\n          <button\n            onClick={onCancel}\n            className=\"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\"\n          >\n            Cancelar\n          </button>\n          <button\n            onClick={onEdit}\n            className=\"px-3 py-1.5 rounded bg-[#e1aa1e]/20 text-xs text-[#e1aa1e] hover:bg-[#e1aa1e]/30 transition-colors\"\n          >\n            Editar\n          </button>\n          <button\n            onClick={onConfirm}\n            className=\"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors\"\n          >\n            Desativar\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  const SetTimerDialog = ({ \n    audioId, \n    audioTitle,\n    onConfirm, \n    onCancel,\n    buttonPosition,\n    inputValue,\n    onInputChange\n  }: { \n    audioId: string;\n    audioTitle: string;\n    onConfirm: (minutes: number) => void;\n    onCancel: () => void;\n    buttonPosition: { x: number; y: number } | null;\n    inputValue: string;\n    onInputChange: (value: string) => void;\n  }) => {\n    return (\n      <div className=\"fixed inset-0 z-50\" onClick={(e) => {\n        if (e.target === e.currentTarget) onCancel();\n      }}>\n        <div \n          className=\"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\"\n          style={{\n            top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n            left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n            transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n            opacity: isAnimating ? 0 : 1,\n            transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n          }}\n        >\n          <h3 className=\"text-[#e1aa1e] font-medium text-sm mb-2\">Repetir Áudio</h3>\n          <p className=\"text-gray-300 text-xs mb-3 truncate\">\n            {audioTitle}\n          </p>\n          \n          <div className=\"relative mb-4\">\n            <input\n              type=\"number\"\n              min=\"1\"\n              value={inputValue}\n              onChange={(e) => onInputChange(e.target.value)}\n              placeholder=\"00\"\n              className=\"w-full px-3 py-2 bg-[#1e1e1e] border border-[#404040] rounded text-gray-200 text-center focus:border-[#e1aa1e] focus:outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none pr-12\"\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  const value = parseInt(inputValue);\n                  if (value > 0) onConfirm(value);\n                } else if (e.key === 'Escape') {\n                  onCancel();\n                }\n              }}\n              autoFocus\n            />\n            <span className=\"absolute right-3 top-1/2 -translate-y-1/2 text-xs text-gray-400\">\n              minutos\n            </span>\n          </div>\n\n          <div className=\"flex justify-end gap-2\">\n            <button\n              onClick={onCancel}\n              className=\"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\"\n            >\n              Cancelar\n            </button>\n            <button\n              onClick={() => {\n                const value = parseInt(inputValue);\n                if (value > 0) onConfirm(value);\n              }}\n              disabled={!inputValue || parseInt(inputValue) <= 0}\n              className=\"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              Ativar\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const handleShowTimerDialog = (e: React.MouseEvent, audioId: string) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setPopupPosition({ \n      x: rect.left + rect.width/2, \n      y: rect.top + rect.height/2 \n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowTimerDialog(audioId);\n    }, 10);\n  };\n\n  const handleShowConfirmDialog = (e: React.MouseEvent, audioId: string) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setConfirmPosition({ \n      x: rect.left + rect.width/2, \n      y: rect.top + rect.height/2 \n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowConfirmDialog(audioId);\n    }, 10);\n  };\n\n  // Adicione este useEffect para gerenciar a seleção de texto\n  useEffect(() => {\n    const style = document.createElement('style');\n    style.innerHTML = `\n      .dragging * {\n        user-select: none !important;\n        -webkit-user-select: none !important;\n        cursor: grabbing !important;\n      }\n    `;\n    document.head.appendChild(style);\n    return () => style.remove();\n  }, []);\n\n  return (\n    <div className=\"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\">\n      {/* Player Central */}\n      <div className=\"mb-3 bg-[#2d2d2d] rounded-lg p-4 border border-[#404040]\">\n        {/* Título do Áudio Centralizado */}\n        <div className=\"mb-4 text-center\">\n          <h3 className=\"text-[#e1aa1e] font-medium\">\n            {currentAudio?.title || 'Selecione um áudio'}\n          </h3>\n        </div>\n\n        <audio\n          ref={audioRef}\n          src={currentAudio?.url}\n          onTimeUpdate={handleTimeUpdate}\n          onEnded={handleAudioEnd}\n          className=\"hidden\"\n        />\n\n        {/* Barra de Progresso */}\n        <div\n          className=\"h-1 bg-[#404040] rounded-full cursor-pointer mb-4\"\n          onClick={handleProgressClick}\n        >\n          <div\n            className=\"h-full bg-[#e1aa1e] rounded-full\"\n            style={{ width: `${progress}%` }}\n          />\n        </div>\n\n        {/* Tempo */}\n        <div className=\"flex justify-between text-xs text-gray-400 mb-3\">\n          <span>{formatTime(audioRef.current?.currentTime || 0)}</span>\n          <span>{formatTime(audioRef.current?.duration || 0)}</span>\n        </div>\n\n        {/* Layout em duas linhas */}\n        <div className=\"space-y-4\">\n          {/* Controle de Reprodução Centralizado */}\n        <div className=\"flex justify-center\">\n          <button\n            onClick={() => currentAudio && togglePlay(currentAudio)}\n            className=\"p-2 hover:bg-[#404040] rounded-full transition-colors\"\n            disabled={!currentAudio}\n          >\n            <svg\n              className=\"w-8 h-8 text-[#e1aa1e]\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              {isPlaying ? (\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                />\n              ) : (\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                />\n              )}\n            </svg>\n          </button>\n          </div>\n\n          {/* Próxima Reprodução - Alinhado à direita */}\n          {(() => {\n            const nextInfo = getNextAudioInfo();\n            if (!nextInfo?.nextAudio) return null;\n\n            return (\n              <div className=\"flex justify-end\">\n                <div className=\"text-right bg-[#1e1e1e] px-3 py-1 rounded\">\n                  <div className=\"text-xs text-gray-400\">\n                    Próximo: {nextInfo.nextAudio.title}\n                  </div>\n                  {nextInfo.timer && (\n                    <div className=\"text-xs text-[#e1aa1e]\">\n                      Em {formatTimeLeft(nextInfo.timer.timeLeft)}\n                    </div>\n                  )}\n                </div>\n              </div>\n            );\n          })()}\n        </div>\n      </div>\n\n      {/* Painel de Controle */}\n      <div className=\"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\">\n        <div className=\"flex items-center gap-2\">\n        <span className=\"text-sm text-gray-400 px-2\">Lista de Áudios</span>\n        </div>\n\n        {/* Botão de Upload */}\n        <div className=\"flex items-center\">\n        <label className=\"bg-[#e1aa1e] hover:bg-[#e1aa1e]/80 text-gray-900 px-3 py-1.5 rounded cursor-pointer transition-colors text-sm\">\n          {isUploading ? 'Enviando...' : 'Anexar Áudio'}\n          <input\n            type=\"file\"\n            className=\"hidden\"\n            accept=\"audio/*\"\n            onChange={handleUpload}\n            disabled={isUploading}\n          />\n        </label>\n        </div>\n      </div>\n\n      {/* Lista de Áudios */}\n      <div className=\"space-y-2 max-h-[400px] overflow-y-auto\">\n        <div className=\"text-xs text-gray-400 italic mb-2 px-2\">\n          Clique no ícone de edição ou dê um duplo clique no nome para renomear\n        </div>\n\n        {audios.map((audio) => (\n          <motion.div\n            key={audio.id}\n            initial={false}\n            className=\"flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors min-w-0 bg-[#1e1e1e] mb-2\"\n            layout\n            transition={{\n              layout: {\n                duration: 0.3,\n                ease: [0.25, 1, 0.5, 1]\n              }\n            }}\n          >\n            <button\n              onClick={() => togglePlay(audio)}\n              className=\"p-1 hover:bg-[#404040] rounded-full transition-colors\"\n            >\n              <svg\n                className=\"w-6 h-6 text-[#e1aa1e]\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                {isPlaying && currentAudio?.id === audio.id ? (\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                ) : (\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                )}\n              </svg>\n            </button>\n\n            {editingAudioId === audio.id ? (\n                    <input\n                type=\"text\"\n                value={editingTitle}\n                onChange={(e) => setEditingTitle(e.target.value)}\n                onBlur={() => {\n                  if (editingTitle.trim() && editingTitle !== audio.title) {\n                    handleUpdateTitle(audio.id, editingTitle);\n                  } else {\n                    setEditingAudioId(null);\n                  }\n                }}\n                      onKeyDown={(e) => {\n                        if (e.key === 'Enter') {\n                    if (editingTitle.trim() && editingTitle !== audio.title) {\n                      handleUpdateTitle(audio.id, editingTitle);\n                    } else {\n                      setEditingAudioId(null);\n                    }\n                  } else if (e.key === 'Escape') {\n                    setEditingAudioId(null);\n                  }\n                }}\n                className=\"flex-1 bg-[#1e1e1e] text-gray-200 px-2 py-1 rounded border border-[#404040] focus:border-[#e1aa1e] focus:outline-none\"\n                      autoFocus\n              />\n            ) : (\n              <div className=\"flex-1 flex items-center group\">\n                <div className=\"flex-1 flex items-center\">\n                <span \n                    className=\"truncate cursor-pointer hover:text-[#e1aa1e]\"\n                  onDoubleClick={() => {\n                    setEditingAudioId(audio.id);\n                    setEditingTitle(audio.title);\n                  }}\n                >\n                  {audio.title}\n                </span>\n                <button\n                  onClick={() => {\n                    setEditingAudioId(audio.id);\n                    setEditingTitle(audio.title);\n                  }}\n                    className=\"p-1 rounded-full hover:bg-[#404040] opacity-0 group-hover:opacity-100 transition-all ml-1\"\n                  title=\"Editar nome\"\n                >\n                  <svg\n                      className=\"w-4 h-4 text-[#e1aa1e]\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                    />\n                  </svg>\n                </button>\n                </div>\n              </div>\n            )}\n            \n            <div className=\"flex items-center gap-2 shrink-0\">\n                {audioTimers[audio.id] ? (\n                    <button\n                    onClick={(e) => {\n                      handleShowConfirmDialog(e, audio.id);\n                    }}\n                    className=\"flex items-center gap-1.5 px-2 py-1 rounded bg-[#e1aa1e]/10 text-[#e1aa1e] hover:bg-[#e1aa1e]/20 transition-colors\"\n                    title=\"Clique para desativar a repetição\"\n                  >\n                    <svg\n                      className=\"w-4 h-4\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                      />\n                    </svg>\n                    <span className=\"text-sm\">\n                      {formatTimeLeft(audioTimers[audio.id].timeLeft)}\n                    </span>\n                    </button>\n                ) : (\n                    <button\n                    onClick={(e) => {\n                      handleShowTimerDialog(e, audio.id);\n                    }}\n                    className=\"p-1.5 hover:bg-[#404040] rounded transition-colors text-gray-400 hover:text-[#e1aa1e]\"\n                    title=\"Ativar repetição automática\"\n                    >\n                      <svg\n                      className=\"w-4 h-4\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                        />\n                      </svg>\n                    </button>\n                )}\n\n              <button\n                onClick={() => handleDelete(audio.id)}\n                className=\"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\"\n              >\n                <svg\n                  className=\"w-5 h-5\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                  />\n                </svg>\n              </button>\n            </div>\n          </motion.div>\n        ))}\n      </div>\n\n      {showTimerDialog && (\n        <SetTimerDialog\n          audioId={showTimerDialog}\n          audioTitle={audios.find(a => a.id === showTimerDialog)?.title || ''}\n          onConfirm={(minutes) => {\n            startRepeatTimer(showTimerDialog, minutes);\n            setShowTimerDialog(null);\n            setPopupPosition(null);\n            setTimerInputValue('');\n          }}\n          onCancel={() => {\n            setShowTimerDialog(null);\n            setPopupPosition(null);\n            setTimerInputValue('');\n          }}\n          buttonPosition={popupPosition}\n          inputValue={timerInputValue}\n          onInputChange={setTimerInputValue}\n        />\n      )}\n\n      {showConfirmDialog && (\n        <ConfirmDialog\n          audioId={showConfirmDialog}\n          onConfirm={() => {\n            stopRepeatTimer(showConfirmDialog);\n            setShowConfirmDialog(null);\n            setConfirmPosition(null);\n          }}\n          onEdit={() => {\n            setShowConfirmDialog(null);\n            setConfirmPosition(null);\n            // Abre o diálogo de timer com a posição atual\n            setPopupPosition(confirmPosition);\n            setShowTimerDialog(showConfirmDialog);\n          }}\n          onCancel={() => {\n            setShowConfirmDialog(null);\n            setConfirmPosition(null);\n          }}\n          buttonPosition={confirmPosition}\n        />\n      )}\n    </div>\n    \n  );\n};\n\nexport default AudioPlayer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}