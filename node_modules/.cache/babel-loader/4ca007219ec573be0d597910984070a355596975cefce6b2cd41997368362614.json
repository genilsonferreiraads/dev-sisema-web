{"ast":null,"code":"import { supabase } from './supabase';\nexport const authService = {\n  async signIn(email, password) {\n    const {\n      data: authData,\n      error: authError\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (authError) throw authError;\n    if (authData.user) {\n      const {\n        data: profile\n      } = await supabase.from('profiles').select('*').eq('id', authData.user.id).single();\n      return profile;\n    }\n    return null;\n  },\n  async signOut() {\n    const {\n      error\n    } = await supabase.auth.signOut();\n    if (error) throw error;\n  },\n  async getCurrentUser() {\n    const {\n      data: {\n        user\n      }\n    } = await supabase.auth.getUser();\n    if (user) {\n      const {\n        data: profile\n      } = await supabase.from('profiles').select('*').eq('id', user.id).single();\n      return profile;\n    }\n    return null;\n  }\n};","map":{"version":3,"names":["supabase","authService","signIn","email","password","data","authData","error","authError","auth","signInWithPassword","user","profile","from","select","eq","id","single","signOut","getCurrentUser","getUser"],"sources":["C:/Users/genil/Desktop/Dev Sistema academia/src/lib/auth.ts"],"sourcesContent":["import { supabase } from './supabase';\r\nimport { UserProfile } from '../types/auth';\r\n\r\nexport const authService = {\r\n  async signIn(email: string, password: string) {\r\n    const { data: authData, error: authError } = await supabase.auth.signInWithPassword({\r\n      email,\r\n      password,\r\n    });\r\n\r\n    if (authError) throw authError;\r\n\r\n    if (authData.user) {\r\n      const { data: profile } = await supabase\r\n        .from('profiles')\r\n        .select('*')\r\n        .eq('id', authData.user.id)\r\n        .single();\r\n\r\n      return profile as UserProfile;\r\n    }\r\n\r\n    return null;\r\n  },\r\n\r\n  async signOut() {\r\n    const { error } = await supabase.auth.signOut();\r\n    if (error) throw error;\r\n  },\r\n\r\n  async getCurrentUser() {\r\n    const { data: { user } } = await supabase.auth.getUser();\r\n    \r\n    if (user) {\r\n      const { data: profile } = await supabase\r\n        .from('profiles')\r\n        .select('*')\r\n        .eq('id', user.id)\r\n        .single();\r\n\r\n      return profile as UserProfile;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}; "],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AAGrC,OAAO,MAAMC,WAAW,GAAG;EACzB,MAAMC,MAAMA,CAACC,KAAa,EAAEC,QAAgB,EAAE;IAC5C,MAAM;MAAEC,IAAI,EAAEC,QAAQ;MAAEC,KAAK,EAAEC;IAAU,CAAC,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAACC,kBAAkB,CAAC;MAClFP,KAAK;MACLC;IACF,CAAC,CAAC;IAEF,IAAII,SAAS,EAAE,MAAMA,SAAS;IAE9B,IAAIF,QAAQ,CAACK,IAAI,EAAE;MACjB,MAAM;QAAEN,IAAI,EAAEO;MAAQ,CAAC,GAAG,MAAMZ,QAAQ,CACrCa,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,IAAI,EAAET,QAAQ,CAACK,IAAI,CAACK,EAAE,CAAC,CAC1BC,MAAM,CAAC,CAAC;MAEX,OAAOL,OAAO;IAChB;IAEA,OAAO,IAAI;EACb,CAAC;EAED,MAAMM,OAAOA,CAAA,EAAG;IACd,MAAM;MAAEX;IAAM,CAAC,GAAG,MAAMP,QAAQ,CAACS,IAAI,CAACS,OAAO,CAAC,CAAC;IAC/C,IAAIX,KAAK,EAAE,MAAMA,KAAK;EACxB,CAAC;EAED,MAAMY,cAAcA,CAAA,EAAG;IACrB,MAAM;MAAEd,IAAI,EAAE;QAAEM;MAAK;IAAE,CAAC,GAAG,MAAMX,QAAQ,CAACS,IAAI,CAACW,OAAO,CAAC,CAAC;IAExD,IAAIT,IAAI,EAAE;MACR,MAAM;QAAEN,IAAI,EAAEO;MAAQ,CAAC,GAAG,MAAMZ,QAAQ,CACrCa,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,IAAI,EAAEJ,IAAI,CAACK,EAAE,CAAC,CACjBC,MAAM,CAAC,CAAC;MAEX,OAAOL,OAAO;IAChB;IAEA,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}