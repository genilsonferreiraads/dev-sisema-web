{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genil\\\\Desktop\\\\em desemvolvimento Sistema academia\\\\src\\\\components\\\\VideoPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { videoService } from '../lib/supabase';\nimport VideoSidebar from './VideoSidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VideoPlayer = ({\n  videoId,\n  onEnded,\n  autoplay = false,\n  isPlaying = false,\n  setIsPlaying = () => {},\n  shouldAutoplay = false\n}) => {\n  _s();\n  const opts = {\n    height: '100%',\n    width: '100%',\n    playerVars: {\n      autoplay: autoplay ? 1 : 0,\n      controls: 1,\n      rel: 0\n    }\n  };\n  const [videos, setVideos] = useState([]);\n  const [newVideoUrl, setNewVideoUrl] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [player, setPlayer] = useState(null);\n  const [isPlayerReady, setIsPlayerReady] = useState(false);\n  const [localIsPlaying, setLocalIsPlaying] = useState(isPlaying);\n  const [isInitializing, setIsInitializing] = useState(false);\n  const [lastPlayedVideo, setLastPlayedVideo] = useState(null);\n  const [isVideoLoading, setIsVideoLoading] = useState(false);\n  useEffect(() => {\n    setLocalIsPlaying(isPlaying);\n  }, [isPlaying]);\n  const updatePlayingState = state => {\n    setLocalIsPlaying(state);\n    setIsPlaying(state);\n  };\n  useEffect(() => {\n    loadVideos();\n  }, []);\n  const loadYouTubeAPI = () => {\n    return new Promise(resolve => {\n      var _firstScriptTag$paren;\n      const existingScript = document.querySelector('script[src=\"https://www.youtube.com/iframe_api\"]');\n      if (existingScript) {\n        if (window.YT && window.YT.Player) {\n          resolve();\n          return;\n        }\n      }\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n      tag.async = true;\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      (_firstScriptTag$paren = firstScriptTag.parentNode) === null || _firstScriptTag$paren === void 0 ? void 0 : _firstScriptTag$paren.insertBefore(tag, firstScriptTag);\n      window.onYouTubeIframeAPIReady = () => {\n        resolve();\n      };\n    });\n  };\n  const initializePlayer = async (videoId, shouldAutoplay = false) => {\n    if (isInitializing) return null;\n    setIsInitializing(true);\n    try {\n      var _YT;\n      await new Promise((resolve, reject) => {\n        const timeoutId = setTimeout(() => {\n          reject(new Error('Timeout ao carregar API do YouTube'));\n        }, 15000);\n        const checkYT = () => {\n          if (window.YT && window.YT.Player) {\n            clearTimeout(timeoutId);\n            resolve();\n          } else {\n            setTimeout(checkYT, 100);\n          }\n        };\n        loadYouTubeAPI().then(checkYT).catch(reject);\n      });\n      if (!((_YT = window.YT) !== null && _YT !== void 0 && _YT.Player)) {\n        throw new Error('API do YouTube não está disponível');\n      }\n\n      // Limpa o player existente\n      if (player) {\n        try {\n          player.destroy();\n        } catch (e) {\n          console.error('Erro ao destruir player existente:', e);\n        }\n        setPlayer(null);\n        setIsPlayerReady(false);\n      }\n      const playerContainer = document.getElementById('youtube-player');\n      if (!playerContainer) {\n        throw new Error('Container do player não encontrado');\n      }\n\n      // Limpa o container\n      while (playerContainer.firstChild) {\n        playerContainer.removeChild(playerContainer.firstChild);\n      }\n      const currentVideoId = videoId || extractVideoId((selectedVideo === null || selectedVideo === void 0 ? void 0 : selectedVideo.url) || '');\n      if (!currentVideoId) {\n        throw new Error('VideoId não encontrado');\n      }\n\n      // Cria o novo player\n      const newPlayer = new window.YT.Player('youtube-player', {\n        videoId: currentVideoId,\n        height: '100%',\n        width: '100%',\n        events: {\n          onReady: event => {\n            handlePlayerReady(event, shouldAutoplay);\n          },\n          onStateChange: handleStateChange,\n          onError: error => {\n            console.error('Erro do player:', error);\n            setError('Erro ao carregar vídeo. Por favor, tente novamente.');\n          }\n        },\n        playerVars: {\n          enablejsapi: 1,\n          origin: window.location.origin,\n          widget_referrer: window.location.origin,\n          playsinline: 1,\n          controls: 1,\n          rel: 0,\n          modestbranding: 1,\n          autoplay: shouldAutoplay ? 1 : 0\n        }\n      });\n      setPlayer(newPlayer);\n      return newPlayer;\n    } catch (error) {\n      console.error('Erro ao inicializar player:', error);\n      setError('Não foi possível inicializar o player. Por favor, tente novamente.');\n      return null;\n    } finally {\n      setIsInitializing(false);\n    }\n  };\n  useEffect(() => {\n    let isSubscribed = true;\n    let initTimeout;\n    const initVideo = async () => {\n      if (!selectedVideo) return;\n      const videoId = extractVideoId(selectedVideo.url);\n      if (!videoId) return;\n      try {\n        // Evita múltiplas tentativas simultâneas\n        if (isInitializing || !isSubscribed) return;\n        await handleVideoSelect(selectedVideo, false);\n      } catch (error) {\n        if (isSubscribed) {\n          console.error('Erro ao inicializar vídeo:', error);\n        }\n      }\n    };\n\n    // Adiciona um pequeno delay para evitar múltiplas chamadas\n    initTimeout = setTimeout(initVideo, 100);\n    return () => {\n      isSubscribed = false;\n      clearTimeout(initTimeout);\n      if (player) {\n        try {\n          player.destroy();\n        } catch (error) {\n          console.error('Erro ao destruir player:', error);\n        }\n        setPlayer(null);\n        setIsPlayerReady(false);\n      }\n    };\n  }, [selectedVideo]);\n  const loadVideos = async () => {\n    try {\n      const data = await videoService.getRecentVideos();\n      setVideos(data);\n      if (!selectedVideo) {\n        const videoToLoad = lastPlayedVideo || data[0];\n        if (videoToLoad) {\n          setSelectedVideo(videoToLoad);\n        }\n      }\n    } catch (error) {\n      console.error('Erro ao carregar vídeos:', error);\n    }\n  };\n\n  // Função para converter URL do YouTube em formato embed\n  const getEmbedUrl = url => {\n    console.log('URL original:', url);\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        var _url$split$, _url$split$2;\n        const videoId = url.includes('youtube.com') ? (_url$split$ = url.split('v=')[1]) === null || _url$split$ === void 0 ? void 0 : _url$split$.split('&')[0] : (_url$split$2 = url.split('youtu.be/')[1]) === null || _url$split$2 === void 0 ? void 0 : _url$split$2.split('?')[0];\n        const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      if (url.includes('vimeo.com')) {\n        var _url$split$3;\n        const videoId = (_url$split$3 = url.split('vimeo.com/')[1]) === null || _url$split$3 === void 0 ? void 0 : _url$split$3.split('?')[0];\n        const embedUrl = `https://player.vimeo.com/video/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      return url;\n    } catch (error) {\n      console.error('Erro ao processar URL:', error);\n      return url;\n    }\n  };\n\n  // Função para extrair título do vídeo do YouTube\n  const getVideoTitle = async url => {\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        var _url$split$4, _url$split$5, _data$items$, _data$items$$snippet;\n        const videoId = url.includes('youtube.com') ? (_url$split$4 = url.split('v=')[1]) === null || _url$split$4 === void 0 ? void 0 : _url$split$4.split('&')[0] : (_url$split$5 = url.split('youtu.be/')[1]) === null || _url$split$5 === void 0 ? void 0 : _url$split$5.split('?')[0];\n        const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=AIzaSyAyTc_jYQSVM_3kg95t8ai3CWckZGG0v4c&part=snippet`);\n        const data = await response.json();\n        if (data.error) {\n          console.error('Erro da API do YouTube:', data.error);\n          return 'Vídeo do YouTube';\n        }\n        return ((_data$items$ = data.items[0]) === null || _data$items$ === void 0 ? void 0 : (_data$items$$snippet = _data$items$.snippet) === null || _data$items$$snippet === void 0 ? void 0 : _data$items$$snippet.title) || 'Vídeo do YouTube';\n      }\n      if (url.includes('vimeo.com')) {\n        var _url$split$6, _data$;\n        const videoId = (_url$split$6 = url.split('vimeo.com/')[1]) === null || _url$split$6 === void 0 ? void 0 : _url$split$6.split('?')[0];\n        const response = await fetch(`https://vimeo.com/api/v2/video/${videoId}.json`);\n        const data = await response.json();\n        return ((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.title) || 'Vídeo do Vimeo';\n      }\n      return 'Vídeo';\n    } catch (error) {\n      console.error('Erro ao obter título do vídeo:', error);\n      return 'Vídeo';\n    }\n  };\n  const handleAddVideo = async e => {\n    if (e) e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    if (!newVideoUrl.trim()) {\n      setError('Por favor, insira uma URL válida');\n      setIsLoading(false);\n      return;\n    }\n    try {\n      const embedUrl = getEmbedUrl(newVideoUrl);\n      const videoTitle = await getVideoTitle(newVideoUrl);\n      const newVideo = await videoService.addVideo(embedUrl, videoTitle);\n      setVideos(prev => [newVideo, ...prev]);\n      setNewVideoUrl('');\n      setSelectedVideo(newVideo);\n    } catch (error) {\n      console.error('Erro detalhado:', error);\n      setError(error.message || error.error_description || 'Erro ao adicionar vídeo. Verifique se a URL é válida.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDelete = async videoId => {\n    try {\n      await videoService.deleteVideo(videoId);\n      setVideos(prev => prev.filter(video => video.id !== videoId));\n    } catch (error) {\n      console.error('Erro ao deletar vídeo:', error);\n    }\n  };\n  const handleVideoSelect = async (video, shouldAutoplay = false) => {\n    try {\n      if (isInitializing || isVideoLoading) return;\n      setIsVideoLoading(true);\n      const videoId = extractVideoId(video.url);\n      if (!videoId) {\n        throw new Error('VideoId não encontrado');\n      }\n\n      // Salva o vídeo no localStorage\n      localStorage.setItem('lastPlayedVideo', JSON.stringify(video));\n      setLastPlayedVideo(video);\n\n      // Não dispara evento se shouldAutoplay for false\n      if (shouldAutoplay) {\n        window.dispatchEvent(new Event('videoStarting'));\n      }\n\n      // Se não houver player ou ele não estiver pronto, inicializa\n      if (!player || !isPlayerReady) {\n        const newPlayer = await initializePlayer(videoId, shouldAutoplay);\n        if (!newPlayer) {\n          throw new Error('Falha ao inicializar player');\n        }\n        return;\n      }\n\n      // Se o player existe e está pronto\n      await new Promise((resolve, reject) => {\n        const timeoutId = setTimeout(() => {\n          reject(new Error('Timeout ao carregar vídeo'));\n        }, 15000); // Aumentado para 15 segundos\n\n        const handleStateChange = event => {\n          if (event.data !== -1) {\n            clearTimeout(timeoutId);\n            player.removeEventListener('onStateChange', handleStateChange);\n            if (shouldAutoplay) {\n              player.playVideo();\n              updatePlayingState(true);\n            } else {\n              player.pauseVideo();\n              updatePlayingState(false);\n            }\n            resolve();\n          }\n        };\n        try {\n          player.addEventListener('onStateChange', handleStateChange);\n          if (shouldAutoplay) {\n            player.loadVideoById({\n              videoId: videoId,\n              startSeconds: 0,\n              suggestedQuality: 'large'\n            });\n          } else {\n            player.cueVideoById({\n              videoId: videoId,\n              startSeconds: 0,\n              suggestedQuality: 'large'\n            });\n          }\n        } catch (e) {\n          clearTimeout(timeoutId);\n          reject(e);\n        }\n      });\n    } catch (error) {\n      console.error('Erro em handleVideoSelect:', error);\n      setError('Não foi possível reproduzir o vídeo. Por favor, tente novamente.');\n\n      // Limpa o player em caso de erro\n      if (player) {\n        try {\n          player.destroy();\n        } catch (e) {\n          console.error('Erro ao destruir player:', e);\n        }\n        setPlayer(null);\n        setIsPlayerReady(false);\n      }\n    } finally {\n      setIsVideoLoading(false);\n    }\n  };\n  const handlePlayerReady = (event, shouldAutoplay = false) => {\n    try {\n      const newPlayer = event.target;\n      setPlayer(newPlayer);\n      setIsPlayerReady(true);\n      if (shouldAutoplay) {\n        newPlayer.playVideo();\n        updatePlayingState(true);\n      } else {\n        newPlayer.pauseVideo();\n        updatePlayingState(false);\n      }\n    } catch (error) {\n      console.error('Erro em handlePlayerReady:', error);\n    }\n  };\n  const handleStateChange = event => {\n    try {\n      if (event.data === 0) {\n        // vídeo terminou\n        updatePlayingState(false);\n        window.dispatchEvent(new Event('externalMediaStop'));\n        onEnded === null || onEnded === void 0 ? void 0 : onEnded();\n      } else if (event.data === 1) {\n        // vídeo começou a tocar\n        // Não dispara evento se o vídeo está sendo carregado inicialmente\n        if (!isInitializing) {\n          updatePlayingState(true);\n          window.dispatchEvent(new Event('externalMediaPlay'));\n        }\n      } else if (event.data === 2) {\n        // vídeo foi pausado\n        updatePlayingState(false);\n        window.dispatchEvent(new Event('externalMediaStop'));\n      } else if (event.data === -1) {\n        // vídeo não iniciado\n        updatePlayingState(false);\n      } else if (event.data === 3) {// vídeo bufferizando\n        // Mantém o estado atual\n      }\n    } catch (error) {\n      console.error('Erro no handleStateChange:', error);\n    }\n  };\n\n  // Função para extrair videoId do YouTube\n  const extractVideoId = (url = '') => {\n    try {\n      if (!url) return '';\n      let videoId = '';\n      if (url.includes('youtube.com/embed/')) {\n        var _url$split$7;\n        videoId = (_url$split$7 = url.split('embed/')[1]) === null || _url$split$7 === void 0 ? void 0 : _url$split$7.split('?')[0];\n      } else if (url.includes('youtube.com/watch')) {\n        var _url$split$8;\n        videoId = (_url$split$8 = url.split('v=')[1]) === null || _url$split$8 === void 0 ? void 0 : _url$split$8.split('&')[0];\n      } else if (url.includes('youtu.be/')) {\n        var _url$split$9;\n        videoId = (_url$split$9 = url.split('youtu.be/')[1]) === null || _url$split$9 === void 0 ? void 0 : _url$split$9.split('?')[0];\n      }\n      console.log('Extraído videoId:', videoId, 'da URL:', url);\n      return videoId;\n    } catch (error) {\n      console.error('Erro ao extrair videoId:', error);\n      return '';\n    }\n  };\n\n  // Adicione esta função para controlar o fade do volume do iframe\n  const fadeIframeVolume = (start, end, duration) => {\n    if (!player || !isPlayerReady) return undefined;\n    try {\n      // Verifica se o player ainda está válido\n      if (typeof player.getPlayerState !== 'function') {\n        return undefined;\n      }\n      const steps = 20;\n      const stepValue = (end - start) / steps;\n      const stepDuration = duration / steps;\n      let currentStep = 0;\n      const interval = setInterval(() => {\n        try {\n          if (!player || typeof player.getPlayerState !== 'function') {\n            clearInterval(interval);\n            return;\n          }\n          currentStep++;\n          const newVolume = start + stepValue * currentStep;\n          const volume = Math.min(Math.max(newVolume, 0), 1) * 100;\n          if (player && typeof player.setVolume === 'function') {\n            player.setVolume(volume);\n          }\n          if (currentStep >= steps) {\n            clearInterval(interval);\n          }\n        } catch (error) {\n          console.error('Erro durante fade:', error);\n          clearInterval(interval);\n        }\n      }, stepDuration);\n      return interval;\n    } catch (error) {\n      console.error('Erro ao iniciar fade:', error);\n      return undefined;\n    }\n  };\n\n  // Modifique o useEffect que escuta eventos de áudio\n  useEffect(() => {\n    let fadeInterval = null;\n    const handleAudioPlay = () => {\n      try {\n        if (isPlayerReady && player) {\n          if (fadeInterval) {\n            clearInterval(fadeInterval);\n          }\n          const newInterval = fadeIframeVolume(1, 0.10, 500);\n          if (newInterval) {\n            fadeInterval = newInterval;\n          }\n        }\n      } catch (error) {\n        console.error('Erro no handleAudioPlay:', error);\n      }\n    };\n    const handleAudioStop = () => {\n      try {\n        if (isPlayerReady && player) {\n          if (fadeInterval) {\n            clearInterval(fadeInterval);\n          }\n          const newInterval = fadeIframeVolume(0.10, 1, 500);\n          if (newInterval) {\n            fadeInterval = newInterval;\n          }\n        }\n      } catch (error) {\n        console.error('Erro no handleAudioStop:', error);\n      }\n    };\n    window.addEventListener('audioPlay', handleAudioPlay);\n    window.addEventListener('audioStop', handleAudioStop);\n    return () => {\n      window.removeEventListener('audioPlay', handleAudioPlay);\n      window.removeEventListener('audioStop', handleAudioStop);\n      if (fadeInterval) {\n        clearInterval(fadeInterval);\n      }\n    };\n  }, [isPlayerReady, player]);\n\n  // Adicione este useEffect para lidar com erros de rede\n  useEffect(() => {\n    const handleOnline = () => {\n      if (selectedVideo) {\n        initializePlayer(extractVideoId(selectedVideo.url), true);\n      }\n    };\n    window.addEventListener('online', handleOnline);\n    return () => window.removeEventListener('online', handleOnline);\n  }, [selectedVideo]);\n\n  // Adicione este useEffect para controlar play/pause\n  useEffect(() => {\n    if (player && isPlayerReady) {\n      try {\n        if (isPlaying) {\n          player.playVideo();\n        } else {\n          player.pauseVideo();\n        }\n      } catch (error) {\n        console.error('Erro ao controlar play/pause:', error);\n      }\n    }\n  }, [isPlaying, player, isPlayerReady]);\n\n  // Adicione este useEffect para persistir o último vídeo\n  useEffect(() => {\n    // Carrega o último vídeo do localStorage ao montar o componente\n    const savedVideo = localStorage.getItem('lastPlayedVideo');\n    if (savedVideo) {\n      try {\n        const video = JSON.parse(savedVideo);\n        setLastPlayedVideo(video);\n        setSelectedVideo(video);\n      } catch (error) {\n        console.error('Erro ao carregar último vídeo:', error);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddVideo,\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          value: newVideoUrl,\n          onChange: e => setNewVideoUrl(e.target.value),\n          placeholder: \"Cole a URL do YouTube ou Vimeo aqui\",\n          className: \"w-full bg-[#2d2d2d] border border-[#404040] text-gray-200 rounded px-3 py-2 focus:border-[#e1aa1e] focus:outline-none\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-400 text-sm\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleAddVideo(),\n        className: `flex-1 ${isLoading ? 'bg-[#e1aa1e]/50 cursor-not-allowed' : 'bg-[#e1aa1e] hover:bg-[#e1aa1e]/80'} text-gray-900 px-3 py-1.5 rounded transition-colors flex items-center justify-center gap-2`,\n        disabled: isLoading,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-4 h-4\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M12 4v16m8-8H4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this), isLoading ? 'Adicionando...' : 'Buscar Vídeo']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setIsSidebarOpen(true),\n        className: \"flex-1 bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-3 py-1.5 rounded flex items-center justify-center gap-2 transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-4 h-4\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M4 6h16M4 12h16M4 18h16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }, this), \"\\xDAltimos V\\xEDdeos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-lg overflow-hidden border border-[#404040]\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative pt-[56.25%]\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"youtube-player\",\n            className: \"absolute top-0 left-0 w-full h-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 9\n      }, this), (isInitializing || isVideoLoading) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-[#e1aa1e] animate-pulse\",\n          children: \"Carregando v\\xEDdeo...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoSidebar, {\n      isOpen: isSidebarOpen,\n      onClose: () => setIsSidebarOpen(false),\n      videos: videos,\n      onVideoSelect: handleVideoSelect,\n      setIsPlaying: setIsPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 624,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"HLdMU2u9l7p2qIN6PrxAOoHQHxQ=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","videoService","VideoSidebar","jsxDEV","_jsxDEV","VideoPlayer","videoId","onEnded","autoplay","isPlaying","setIsPlaying","shouldAutoplay","_s","opts","height","width","playerVars","controls","rel","videos","setVideos","newVideoUrl","setNewVideoUrl","error","setError","isLoading","setIsLoading","isSidebarOpen","setIsSidebarOpen","selectedVideo","setSelectedVideo","player","setPlayer","isPlayerReady","setIsPlayerReady","localIsPlaying","setLocalIsPlaying","isInitializing","setIsInitializing","lastPlayedVideo","setLastPlayedVideo","isVideoLoading","setIsVideoLoading","updatePlayingState","state","loadVideos","loadYouTubeAPI","Promise","resolve","_firstScriptTag$paren","existingScript","document","querySelector","window","YT","Player","tag","createElement","src","async","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","initializePlayer","_YT","reject","timeoutId","setTimeout","Error","checkYT","clearTimeout","then","catch","destroy","e","console","playerContainer","getElementById","firstChild","removeChild","currentVideoId","extractVideoId","url","newPlayer","events","onReady","event","handlePlayerReady","onStateChange","handleStateChange","onError","enablejsapi","origin","location","widget_referrer","playsinline","modestbranding","isSubscribed","initTimeout","initVideo","handleVideoSelect","data","getRecentVideos","videoToLoad","getEmbedUrl","log","includes","_url$split$","_url$split$2","split","embedUrl","_url$split$3","getVideoTitle","_url$split$4","_url$split$5","_data$items$","_data$items$$snippet","response","fetch","json","items","snippet","title","_url$split$6","_data$","handleAddVideo","preventDefault","trim","videoTitle","newVideo","addVideo","prev","message","error_description","handleDelete","deleteVideo","filter","video","id","localStorage","setItem","JSON","stringify","dispatchEvent","Event","removeEventListener","playVideo","pauseVideo","addEventListener","loadVideoById","startSeconds","suggestedQuality","cueVideoById","target","_url$split$7","_url$split$8","_url$split$9","fadeIframeVolume","start","end","duration","undefined","getPlayerState","steps","stepValue","stepDuration","currentStep","interval","setInterval","clearInterval","newVolume","volume","Math","min","max","setVolume","fadeInterval","handleAudioPlay","newInterval","handleAudioStop","handleOnline","savedVideo","getItem","parse","className","children","onSubmit","type","value","onChange","placeholder","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","isOpen","onClose","onVideoSelect","_c","$RefreshReg$"],"sources":["C:/Users/genil/Desktop/em desemvolvimento Sistema academia/src/components/VideoPlayer.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { videoService, VideoData } from '../lib/supabase';\nimport VideoSidebar from './VideoSidebar';\n\ninterface VideoPlayerProps {\n  videoId: string;\n  onEnded?: () => void;\n  autoplay?: boolean;\n  isPlaying?: boolean;\n  setIsPlaying?: (playing: boolean) => void;\n  shouldAutoplay?: boolean;\n}\n\nexport const VideoPlayer: React.FC<VideoPlayerProps> = ({ \n  videoId, \n  onEnded,\n  autoplay = false,\n  isPlaying = false,\n  setIsPlaying = () => {},\n  shouldAutoplay = false\n}) => {\n  const opts = {\n    height: '100%',\n    width: '100%',\n    playerVars: {\n      autoplay: autoplay ? 1 : 0,\n      controls: 1,\n      rel: 0,\n    },\n  };\n\n  const [videos, setVideos] = useState<VideoData[]>([]);\n  const [newVideoUrl, setNewVideoUrl] = useState('');\n  const [error, setError] = useState<string>('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [selectedVideo, setSelectedVideo] = useState<VideoData | null>(null);\n  const [player, setPlayer] = useState<any>(null);\n  const [isPlayerReady, setIsPlayerReady] = useState(false);\n  const [localIsPlaying, setLocalIsPlaying] = useState(isPlaying);\n  const [isInitializing, setIsInitializing] = useState(false);\n  const [lastPlayedVideo, setLastPlayedVideo] = useState<VideoData | null>(null);\n  const [isVideoLoading, setIsVideoLoading] = useState(false);\n\n  useEffect(() => {\n    setLocalIsPlaying(isPlaying);\n  }, [isPlaying]);\n\n  const updatePlayingState = (state: boolean) => {\n    setLocalIsPlaying(state);\n    setIsPlaying(state);\n  };\n\n  useEffect(() => {\n    loadVideos();\n  }, []);\n\n  const loadYouTubeAPI = () => {\n    return new Promise<void>((resolve) => {\n      const existingScript = document.querySelector('script[src=\"https://www.youtube.com/iframe_api\"]');\n      if (existingScript) {\n        if ((window as any).YT && (window as any).YT.Player) {\n          resolve();\n          return;\n        }\n      }\n\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n      tag.async = true;\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode?.insertBefore(tag, firstScriptTag);\n\n      (window as any).onYouTubeIframeAPIReady = () => {\n        resolve();\n      };\n    });\n  };\n\n  const initializePlayer = async (videoId?: string, shouldAutoplay: boolean = false) => {\n    if (isInitializing) return null;\n    setIsInitializing(true);\n\n    try {\n      await new Promise<void>((resolve, reject) => {\n        const timeoutId = setTimeout(() => {\n          reject(new Error('Timeout ao carregar API do YouTube'));\n        }, 15000);\n\n        const checkYT = () => {\n          if ((window as any).YT && (window as any).YT.Player) {\n            clearTimeout(timeoutId);\n            resolve();\n          } else {\n            setTimeout(checkYT, 100);\n          }\n        };\n\n        loadYouTubeAPI().then(checkYT).catch(reject);\n      });\n\n      if (!(window as any).YT?.Player) {\n        throw new Error('API do YouTube não está disponível');\n      }\n\n      // Limpa o player existente\n      if (player) {\n        try {\n          player.destroy();\n        } catch (e) {\n          console.error('Erro ao destruir player existente:', e);\n        }\n        setPlayer(null);\n        setIsPlayerReady(false);\n      }\n\n      const playerContainer = document.getElementById('youtube-player');\n      if (!playerContainer) {\n        throw new Error('Container do player não encontrado');\n      }\n\n      // Limpa o container\n      while (playerContainer.firstChild) {\n        playerContainer.removeChild(playerContainer.firstChild);\n      }\n\n      const currentVideoId = videoId || extractVideoId(selectedVideo?.url || '');\n      if (!currentVideoId) {\n        throw new Error('VideoId não encontrado');\n      }\n\n      // Cria o novo player\n      const newPlayer = new (window as any).YT.Player('youtube-player', {\n        videoId: currentVideoId,\n        height: '100%',\n        width: '100%',\n        events: {\n          onReady: (event: any) => {\n            handlePlayerReady(event, shouldAutoplay);\n          },\n          onStateChange: handleStateChange,\n          onError: (error: any) => {\n            console.error('Erro do player:', error);\n            setError('Erro ao carregar vídeo. Por favor, tente novamente.');\n          }\n        },\n        playerVars: {\n          enablejsapi: 1,\n          origin: window.location.origin,\n          widget_referrer: window.location.origin,\n          playsinline: 1,\n          controls: 1,\n          rel: 0,\n          modestbranding: 1,\n          autoplay: shouldAutoplay ? 1 : 0\n        }\n      });\n\n      setPlayer(newPlayer);\n      return newPlayer;\n\n    } catch (error) {\n      console.error('Erro ao inicializar player:', error);\n      setError('Não foi possível inicializar o player. Por favor, tente novamente.');\n      return null;\n    } finally {\n      setIsInitializing(false);\n    }\n  };\n\n  useEffect(() => {\n    let isSubscribed = true;\n    let initTimeout: NodeJS.Timeout;\n\n    const initVideo = async () => {\n      if (!selectedVideo) return;\n      \n      const videoId = extractVideoId(selectedVideo.url);\n      if (!videoId) return;\n\n      try {\n        // Evita múltiplas tentativas simultâneas\n        if (isInitializing || !isSubscribed) return;\n        \n        await handleVideoSelect(selectedVideo, false);\n      } catch (error) {\n        if (isSubscribed) {\n          console.error('Erro ao inicializar vídeo:', error);\n        }\n      }\n    };\n\n    // Adiciona um pequeno delay para evitar múltiplas chamadas\n    initTimeout = setTimeout(initVideo, 100);\n\n    return () => {\n      isSubscribed = false;\n      clearTimeout(initTimeout);\n      \n      if (player) {\n        try {\n          player.destroy();\n        } catch (error) {\n          console.error('Erro ao destruir player:', error);\n        }\n        setPlayer(null);\n        setIsPlayerReady(false);\n      }\n    };\n  }, [selectedVideo]);\n\n  const loadVideos = async () => {\n    try {\n      const data = await videoService.getRecentVideos();\n      setVideos(data);\n\n      if (!selectedVideo) {\n        const videoToLoad = lastPlayedVideo || data[0];\n        if (videoToLoad) {\n          setSelectedVideo(videoToLoad);\n        }\n      }\n    } catch (error) {\n      console.error('Erro ao carregar vídeos:', error);\n    }\n  };\n\n  // Função para converter URL do YouTube em formato embed\n  const getEmbedUrl = (url: string) => {\n    console.log('URL original:', url);\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        const videoId = url.includes('youtube.com') \n          ? url.split('v=')[1]?.split('&')[0]\n          : url.split('youtu.be/')[1]?.split('?')[0];\n        \n        const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      if (url.includes('vimeo.com')) {\n        const videoId = url.split('vimeo.com/')[1]?.split('?')[0];\n        const embedUrl = `https://player.vimeo.com/video/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      return url;\n    } catch (error) {\n      console.error('Erro ao processar URL:', error);\n      return url;\n    }\n  };\n\n  // Função para extrair título do vídeo do YouTube\n  const getVideoTitle = async (url: string): Promise<string> => {\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        const videoId = url.includes('youtube.com')\n          ? url.split('v=')[1]?.split('&')[0]\n          : url.split('youtu.be/')[1]?.split('?')[0];\n        \n        const response = await fetch(\n          `https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=AIzaSyAyTc_jYQSVM_3kg95t8ai3CWckZGG0v4c&part=snippet`\n        );\n        const data = await response.json();\n        \n        if (data.error) {\n          console.error('Erro da API do YouTube:', data.error);\n          return 'Vídeo do YouTube';\n        }\n\n        return data.items[0]?.snippet?.title || 'Vídeo do YouTube';\n      }\n      \n      if (url.includes('vimeo.com')) {\n        const videoId = url.split('vimeo.com/')[1]?.split('?')[0];\n        const response = await fetch(`https://vimeo.com/api/v2/video/${videoId}.json`);\n        const data = await response.json();\n        return data[0]?.title || 'Vídeo do Vimeo';\n      }\n      \n      return 'Vídeo';\n    } catch (error) {\n      console.error('Erro ao obter título do vídeo:', error);\n      return 'Vídeo';\n    }\n  };\n\n  const handleAddVideo = async (e?: React.FormEvent) => {\n    if (e) e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    \n    if (!newVideoUrl.trim()) {\n      setError('Por favor, insira uma URL válida');\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      const embedUrl = getEmbedUrl(newVideoUrl);\n      const videoTitle = await getVideoTitle(newVideoUrl);\n      \n      const newVideo = await videoService.addVideo(embedUrl, videoTitle);\n      setVideos(prev => [newVideo, ...prev]);\n      setNewVideoUrl('');\n      setSelectedVideo(newVideo);\n    } catch (error: any) {\n      console.error('Erro detalhado:', error);\n      setError(\n        error.message || \n        error.error_description || \n        'Erro ao adicionar vídeo. Verifique se a URL é válida.'\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDelete = async (videoId: string) => {\n    try {\n      await videoService.deleteVideo(videoId);\n      setVideos(prev => prev.filter(video => video.id !== videoId));\n    } catch (error) {\n      console.error('Erro ao deletar vídeo:', error);\n    }\n  };\n\n  const handleVideoSelect = async (video: VideoData, shouldAutoplay: boolean = false) => {\n    try {\n      if (isInitializing || isVideoLoading) return;\n      \n      setIsVideoLoading(true);\n      \n      const videoId = extractVideoId(video.url);\n      if (!videoId) {\n        throw new Error('VideoId não encontrado');\n      }\n\n      // Salva o vídeo no localStorage\n      localStorage.setItem('lastPlayedVideo', JSON.stringify(video));\n      setLastPlayedVideo(video);\n\n      // Não dispara evento se shouldAutoplay for false\n      if (shouldAutoplay) {\n        window.dispatchEvent(new Event('videoStarting'));\n      }\n\n      // Se não houver player ou ele não estiver pronto, inicializa\n      if (!player || !isPlayerReady) {\n        const newPlayer = await initializePlayer(videoId, shouldAutoplay);\n        if (!newPlayer) {\n          throw new Error('Falha ao inicializar player');\n        }\n        return;\n      }\n\n      // Se o player existe e está pronto\n      await new Promise<void>((resolve, reject) => {\n        const timeoutId = setTimeout(() => {\n          reject(new Error('Timeout ao carregar vídeo'));\n        }, 15000); // Aumentado para 15 segundos\n\n        const handleStateChange = (event: any) => {\n          if (event.data !== -1) {\n            clearTimeout(timeoutId);\n            player.removeEventListener('onStateChange', handleStateChange);\n            \n            if (shouldAutoplay) {\n              player.playVideo();\n              updatePlayingState(true);\n            } else {\n              player.pauseVideo();\n              updatePlayingState(false);\n            }\n            resolve();\n          }\n        };\n\n        try {\n          player.addEventListener('onStateChange', handleStateChange);\n\n          if (shouldAutoplay) {\n            player.loadVideoById({\n              videoId: videoId,\n              startSeconds: 0,\n              suggestedQuality: 'large'\n            });\n          } else {\n            player.cueVideoById({\n              videoId: videoId,\n              startSeconds: 0,\n              suggestedQuality: 'large'\n            });\n          }\n        } catch (e) {\n          clearTimeout(timeoutId);\n          reject(e);\n        }\n      });\n\n    } catch (error) {\n      console.error('Erro em handleVideoSelect:', error);\n      setError('Não foi possível reproduzir o vídeo. Por favor, tente novamente.');\n      \n      // Limpa o player em caso de erro\n      if (player) {\n        try {\n          player.destroy();\n        } catch (e) {\n          console.error('Erro ao destruir player:', e);\n        }\n        setPlayer(null);\n        setIsPlayerReady(false);\n      }\n    } finally {\n      setIsVideoLoading(false);\n    }\n  };\n\n  const handlePlayerReady = (event: any, shouldAutoplay: boolean = false) => {\n    try {\n      const newPlayer = event.target;\n      setPlayer(newPlayer);\n      setIsPlayerReady(true);\n      \n      if (shouldAutoplay) {\n        newPlayer.playVideo();\n        updatePlayingState(true);\n      } else {\n        newPlayer.pauseVideo();\n        updatePlayingState(false);\n      }\n    } catch (error) {\n      console.error('Erro em handlePlayerReady:', error);\n    }\n  };\n\n  const handleStateChange = (event: any) => {\n    try {\n      if (event.data === 0) { // vídeo terminou\n        updatePlayingState(false);\n        window.dispatchEvent(new Event('externalMediaStop'));\n        onEnded?.();\n      } else if (event.data === 1) { // vídeo começou a tocar\n        // Não dispara evento se o vídeo está sendo carregado inicialmente\n        if (!isInitializing) {\n          updatePlayingState(true);\n          window.dispatchEvent(new Event('externalMediaPlay'));\n        }\n      } else if (event.data === 2) { // vídeo foi pausado\n        updatePlayingState(false);\n        window.dispatchEvent(new Event('externalMediaStop'));\n      } else if (event.data === -1) { // vídeo não iniciado\n        updatePlayingState(false);\n      } else if (event.data === 3) { // vídeo bufferizando\n        // Mantém o estado atual\n      }\n    } catch (error) {\n      console.error('Erro no handleStateChange:', error);\n    }\n  };\n\n  // Função para extrair videoId do YouTube\n  const extractVideoId = (url: string = '') => {\n    try {\n      if (!url) return '';\n      \n      let videoId = '';\n      \n      if (url.includes('youtube.com/embed/')) {\n        videoId = url.split('embed/')[1]?.split('?')[0];\n      } else if (url.includes('youtube.com/watch')) {\n        videoId = url.split('v=')[1]?.split('&')[0];\n      } else if (url.includes('youtu.be/')) {\n        videoId = url.split('youtu.be/')[1]?.split('?')[0];\n      }\n\n      console.log('Extraído videoId:', videoId, 'da URL:', url);\n      return videoId;\n    } catch (error) {\n      console.error('Erro ao extrair videoId:', error);\n      return '';\n    }\n  };\n\n  // Adicione esta função para controlar o fade do volume do iframe\n  const fadeIframeVolume = (start: number, end: number, duration: number): NodeJS.Timeout | undefined => {\n    if (!player || !isPlayerReady) return undefined;\n\n    try {\n      // Verifica se o player ainda está válido\n      if (typeof player.getPlayerState !== 'function') {\n        return undefined;\n      }\n\n      const steps = 20;\n      const stepValue = (end - start) / steps;\n      const stepDuration = duration / steps;\n      let currentStep = 0;\n\n      const interval = setInterval(() => {\n        try {\n          if (!player || typeof player.getPlayerState !== 'function') {\n            clearInterval(interval);\n            return;\n          }\n\n          currentStep++;\n          const newVolume = start + (stepValue * currentStep);\n          const volume = Math.min(Math.max(newVolume, 0), 1) * 100;\n          \n          if (player && typeof player.setVolume === 'function') {\n            player.setVolume(volume);\n          }\n\n          if (currentStep >= steps) {\n            clearInterval(interval);\n          }\n        } catch (error) {\n          console.error('Erro durante fade:', error);\n          clearInterval(interval);\n        }\n      }, stepDuration);\n\n      return interval;\n    } catch (error) {\n      console.error('Erro ao iniciar fade:', error);\n      return undefined;\n    }\n  };\n\n  // Modifique o useEffect que escuta eventos de áudio\n  useEffect(() => {\n    let fadeInterval: NodeJS.Timeout | null = null;\n\n    const handleAudioPlay = () => {\n      try {\n        if (isPlayerReady && player) {\n          if (fadeInterval) {\n            clearInterval(fadeInterval);\n          }\n          const newInterval = fadeIframeVolume(1, 0.10, 500);\n          if (newInterval) {\n            fadeInterval = newInterval;\n          }\n        }\n      } catch (error) {\n        console.error('Erro no handleAudioPlay:', error);\n      }\n    };\n\n    const handleAudioStop = () => {\n      try {\n        if (isPlayerReady && player) {\n          if (fadeInterval) {\n            clearInterval(fadeInterval);\n          }\n          const newInterval = fadeIframeVolume(0.10, 1, 500);\n          if (newInterval) {\n            fadeInterval = newInterval;\n          }\n        }\n      } catch (error) {\n        console.error('Erro no handleAudioStop:', error);\n      }\n    };\n\n    window.addEventListener('audioPlay', handleAudioPlay);\n    window.addEventListener('audioStop', handleAudioStop);\n\n    return () => {\n      window.removeEventListener('audioPlay', handleAudioPlay);\n      window.removeEventListener('audioStop', handleAudioStop);\n      if (fadeInterval) {\n        clearInterval(fadeInterval);\n      }\n    };\n  }, [isPlayerReady, player]);\n\n  // Adicione este useEffect para lidar com erros de rede\n  useEffect(() => {\n    const handleOnline = () => {\n      if (selectedVideo) {\n        initializePlayer(extractVideoId(selectedVideo.url), true);\n      }\n    };\n\n    window.addEventListener('online', handleOnline);\n    return () => window.removeEventListener('online', handleOnline);\n  }, [selectedVideo]);\n\n  // Adicione este useEffect para controlar play/pause\n  useEffect(() => {\n    if (player && isPlayerReady) {\n      try {\n        if (isPlaying) {\n          player.playVideo();\n        } else {\n          player.pauseVideo();\n        }\n      } catch (error) {\n        console.error('Erro ao controlar play/pause:', error);\n      }\n    }\n  }, [isPlaying, player, isPlayerReady]);\n\n  // Adicione este useEffect para persistir o último vídeo\n  useEffect(() => {\n    // Carrega o último vídeo do localStorage ao montar o componente\n    const savedVideo = localStorage.getItem('lastPlayedVideo');\n    if (savedVideo) {\n      try {\n        const video = JSON.parse(savedVideo);\n        setLastPlayedVideo(video);\n        setSelectedVideo(video);\n      } catch (error) {\n        console.error('Erro ao carregar último vídeo:', error);\n      }\n    }\n  }, []);\n\n  return (\n    <div className=\"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\">\n      {/* Formulário de busca */}\n      <form onSubmit={handleAddVideo} className=\"mb-3\">\n        <div className=\"flex flex-col gap-2\">\n          <input\n            type=\"url\"\n            value={newVideoUrl}\n            onChange={(e) => setNewVideoUrl(e.target.value)}\n            placeholder=\"Cole a URL do YouTube ou Vimeo aqui\"\n            className=\"w-full bg-[#2d2d2d] border border-[#404040] text-gray-200 rounded px-3 py-2 focus:border-[#e1aa1e] focus:outline-none\"\n            disabled={isLoading}\n          />\n          {error && <p className=\"text-red-400 text-sm\">{error}</p>}\n        </div>\n      </form>\n\n      {/* Botões de ação */}\n      <div className=\"flex gap-2 mb-3\">\n        <button\n          type=\"button\"\n          onClick={() => handleAddVideo()}\n          className={`flex-1 ${\n            isLoading \n              ? 'bg-[#e1aa1e]/50 cursor-not-allowed' \n              : 'bg-[#e1aa1e] hover:bg-[#e1aa1e]/80'\n          } text-gray-900 px-3 py-1.5 rounded transition-colors flex items-center justify-center gap-2`}\n          disabled={isLoading}\n        >\n          <svg\n            className=\"w-4 h-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M12 4v16m8-8H4\"\n            />\n          </svg>\n          {isLoading ? 'Adicionando...' : 'Buscar Vídeo'}\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsSidebarOpen(true)}\n          className=\"flex-1 bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-3 py-1.5 rounded flex items-center justify-center gap-2 transition-colors\"\n        >\n          <svg\n            className=\"w-4 h-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M4 6h16M4 12h16M4 18h16\"\n            />\n          </svg>\n          Últimos Vídeos\n        </button>\n      </div>\n\n      {/* Área do vídeo */}\n      <div className=\"relative\">\n        <div className=\"rounded-lg overflow-hidden border border-[#404040]\">\n          <div className=\"relative pt-[56.25%]\">\n            <div\n              id=\"youtube-player\"\n              className=\"absolute top-0 left-0 w-full h-full\"\n            />\n          </div>\n        </div>\n\n        {/* Overlay de carregamento */}\n        {(isInitializing || isVideoLoading) && (\n          <div className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\n            <div className=\"text-[#e1aa1e] animate-pulse\">Carregando vídeo...</div>\n          </div>\n        )}\n      </div>\n\n      {/* Menu lateral */}\n      <VideoSidebar\n        isOpen={isSidebarOpen}\n        onClose={() => setIsSidebarOpen(false)}\n        videos={videos}\n        onVideoSelect={handleVideoSelect}\n        setIsPlaying={setIsPlaying}\n      />\n    </div>\n  );\n};\n\nexport default VideoPlayer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}