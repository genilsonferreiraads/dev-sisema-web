{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genil\\\\Desktop\\\\Dev Sistema academia\\\\src\\\\components\\\\AudioPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { audioService } from '../lib/supabase';\nimport { supabase } from '../lib/supabase';\nimport '../styles/animations.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  onEnded,\n  isPlaying,\n  setIsPlaying\n}) => {\n  _s();\n  var _audioRef$current7, _audioRef$current8, _audios$find;\n  const [audios, setAudios] = useState([]);\n  const [currentAudio, setCurrentAudio] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const audioRef = useRef(null);\n  const [audioTimers, setAudioTimers] = useState({});\n  const timersRef = useRef({});\n  const [timerAudioId, setTimerAudioId] = useState(null);\n  const [pendingAudioId, setPendingAudioId] = useState(null);\n  const [pendingAudios, setPendingAudios] = useState([]);\n  const playAttemptRef = useRef(null);\n  const [editingAudioId, setEditingAudioId] = useState(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [showConfirmDialog, setShowConfirmDialog] = useState(null);\n  const [showTimerDialog, setShowTimerDialog] = useState(null);\n  const [popupPosition, setPopupPosition] = useState(null);\n  const [confirmPosition, setConfirmPosition] = useState(null);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [timerInputValue, setTimerInputValue] = useState('');\n  const [preferences, setPreferences] = useState({});\n  const [playAttempts, setPlayAttempts] = useState(0);\n  const MAX_PLAY_ATTEMPTS = 3;\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(null);\n  const [deletePosition, setDeletePosition] = useState(null);\n  const canvasRef = useRef(null);\n  const animationRef = useRef();\n  const audioContextRef = useRef();\n  const analyserRef = useRef();\n  useEffect(() => {\n    loadAudios();\n    setupAudioContext();\n    return () => {\n      var _audioContextRef$curr;\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n      (_audioContextRef$curr = audioContextRef.current) === null || _audioContextRef$curr === void 0 ? void 0 : _audioContextRef$curr.close();\n    };\n  }, []);\n  const setupAudioContext = () => {\n    audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n    analyserRef.current = audioContextRef.current.createAnalyser();\n    analyserRef.current.fftSize = 256;\n  };\n  const connectAudioSource = () => {\n    if (!audioRef.current || !audioContextRef.current || !analyserRef.current) return;\n    const source = audioContextRef.current.createMediaElementSource(audioRef.current);\n    source.connect(analyserRef.current);\n    analyserRef.current.connect(audioContextRef.current.destination);\n  };\n  const animate = () => {\n    if (!canvasRef.current || !analyserRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const bufferLength = analyserRef.current.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const draw = () => {\n      animationRef.current = requestAnimationFrame(draw);\n      analyserRef.current.getByteFrequencyData(dataArray);\n\n      // Limpa o canvas\n      ctx.fillStyle = '#1e1e1e';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Configurações das ondas\n      const sliceWidth = canvas.width / bufferLength;\n      const centerY = canvas.height / 2;\n      const amplitude = canvas.height / 4;\n\n      // Desenha múltiplas ondas\n      for (let wave = 0; wave < 3; wave++) {\n        ctx.beginPath();\n        ctx.moveTo(0, centerY);\n\n        // Primeira metade da onda (subindo)\n        for (let i = 0; i < bufferLength; i++) {\n          const x = i * sliceWidth;\n          const v = dataArray[i] / 128.0;\n          const y = centerY - v * amplitude * (1 - wave * 0.3);\n          if (i === 0) {\n            ctx.moveTo(x, y);\n          } else {\n            ctx.lineTo(x, y);\n          }\n        }\n\n        // Segunda metade da onda (descendo) - espelhada\n        for (let i = bufferLength - 1; i >= 0; i--) {\n          const x = i * sliceWidth;\n          const v = dataArray[i] / 128.0;\n          const y = centerY + v * amplitude * (1 - wave * 0.3);\n          ctx.lineTo(x, y);\n        }\n        ctx.closePath();\n\n        // Gradiente para cada onda\n        const alpha = isPlaying ? 0.5 - wave * 0.15 : 0.1;\n        const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\n        gradient.addColorStop(0, `rgba(225, 170, 30, ${alpha * 0.1})`);\n        gradient.addColorStop(0.5, `rgba(225, 170, 30, ${alpha})`);\n        gradient.addColorStop(1, `rgba(225, 170, 30, ${alpha * 0.1})`);\n        ctx.fillStyle = gradient;\n        ctx.fill();\n\n        // Contorno da onda\n        ctx.strokeStyle = `rgba(225, 170, 30, ${alpha * 2})`;\n        ctx.lineWidth = 2;\n        ctx.stroke();\n      }\n\n      // Adiciona partículas quando o áudio está tocando\n      if (isPlaying) {\n        const particleCount = 20;\n        for (let i = 0; i < particleCount; i++) {\n          const x = Math.random() * canvas.width;\n          const y = centerY + (Math.random() - 0.5) * canvas.height;\n          const radius = Math.random() * 2;\n          const alpha = Math.random() * 0.5;\n          ctx.beginPath();\n          ctx.arc(x, y, radius, 0, Math.PI * 2);\n          ctx.fillStyle = `rgba(225, 170, 30, ${alpha})`;\n          ctx.fill();\n        }\n      }\n\n      // Linha central suave\n      const lineGradient = ctx.createLinearGradient(0, centerY - 2, 0, centerY + 2);\n      lineGradient.addColorStop(0, 'rgba(225, 170, 30, 0)');\n      lineGradient.addColorStop(0.5, `rgba(225, 170, 30, ${isPlaying ? 0.3 : 0.1})`);\n      lineGradient.addColorStop(1, 'rgba(225, 170, 30, 0)');\n      ctx.fillStyle = lineGradient;\n      ctx.fillRect(0, centerY - 1, canvas.width, 2);\n    };\n    draw();\n  };\n  useEffect(() => {\n    if (isPlaying) {\n      var _audioRef$current;\n      (_audioRef$current = audioRef.current) === null || _audioRef$current === void 0 ? void 0 : _audioRef$current.play();\n      animate();\n    } else {\n      var _audioRef$current2;\n      (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.pause();\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    }\n  }, [isPlaying]);\n  useEffect(() => {\n    const playAudio = async () => {\n      if (!audioRef.current) return;\n      try {\n        console.log('Tentando reproduzir áudio...');\n        await audioRef.current.play();\n        console.log('Áudio iniciado com sucesso');\n        window.dispatchEvent(new Event('audioPlay'));\n      } catch (error) {\n        console.error('Erro ao reproduzir áudio:', error);\n        if (error instanceof Error && error.name === 'AbortError') {\n          // Limpa qualquer tentativa pendente\n          if (playAttemptRef.current) {\n            clearTimeout(playAttemptRef.current);\n          }\n\n          // Tenta novamente após um delay\n          playAttemptRef.current = setTimeout(async () => {\n            try {\n              var _audioRef$current3;\n              console.log('Tentando reproduzir novamente...');\n              await ((_audioRef$current3 = audioRef.current) === null || _audioRef$current3 === void 0 ? void 0 : _audioRef$current3.play());\n              console.log('Áudio iniciado na segunda tentativa');\n              window.dispatchEvent(new Event('audioPlay'));\n            } catch (retryError) {\n              console.error('Erro na segunda tentativa:', retryError);\n              setIsPlaying(false);\n            }\n          }, 500);\n        } else {\n          setIsPlaying(false);\n        }\n      }\n    };\n    if (audioRef.current) {\n      if (isPlaying) {\n        // Limpa qualquer tentativa pendente antes de iniciar uma nova\n        if (playAttemptRef.current) {\n          clearTimeout(playAttemptRef.current);\n          playAttemptRef.current = null;\n        }\n\n        // Adiciona um pequeno delay antes de tentar reproduzir\n        playAttemptRef.current = setTimeout(() => {\n          playAudio();\n        }, 100);\n      } else {\n        // Limpa qualquer tentativa pendente\n        if (playAttemptRef.current) {\n          clearTimeout(playAttemptRef.current);\n          playAttemptRef.current = null;\n        }\n        audioRef.current.pause();\n        window.dispatchEvent(new Event('audioStop'));\n      }\n    }\n\n    // Cleanup\n    return () => {\n      if (playAttemptRef.current) {\n        clearTimeout(playAttemptRef.current);\n        playAttemptRef.current = null;\n      }\n    };\n  }, [isPlaying]);\n  useEffect(() => {\n    return () => {\n      Object.values(timersRef.current).forEach(timer => {\n        clearInterval(timer);\n      });\n    };\n  }, []);\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.onended = () => {\n        console.log('Áudio terminou (evento nativo)');\n        handleAudioEnd();\n      };\n      audioRef.current.onloadeddata = () => {\n        if (isPlaying) {\n          var _audioRef$current4;\n          (_audioRef$current4 = audioRef.current) === null || _audioRef$current4 === void 0 ? void 0 : _audioRef$current4.play().catch(error => {\n            console.error('Erro ao reproduzir áudio após carregamento:', error);\n            setIsPlaying(false);\n          });\n        }\n      };\n    }\n  }, [audioRef.current]);\n  useEffect(() => {\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      const currentTime = Date.now();\n      const endTime = new Date(timer.endTime).getTime();\n      const timeLeft = Math.max(0, Math.floor((endTime - currentTime) / 1000));\n      if (timeLeft === 0) {\n        console.log('Timer zerou, iniciando novo ciclo e reprodução');\n\n        // Calcula o novo tempo de término para o próximo ciclo\n        const newEndTime = new Date(Date.now() + timer.interval * 1000).toISOString();\n\n        // Atualiza as preferências no banco antes de iniciar o novo ciclo\n        audioService.updatePreferences(audioId, {\n          auto_repeat: true,\n          repeat_interval: Math.floor(timer.interval / 60),\n          timer_end_at: newEndTime\n        }).catch(error => {\n          console.error('Erro ao atualizar preferências do timer:', error);\n        });\n\n        // Inicia um novo ciclo\n        startNewTimerCycle(audioId, timer.interval);\n\n        // Encontra e reproduz o áudio\n        const audio = audios.find(a => a.id === audioId);\n        if (audio) {\n          if (!isPlaying || (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId) {\n            const attemptPlay = async (attempts = 0) => {\n              try {\n                setCurrentAudio(audio);\n                if (audioRef.current) {\n                  audioRef.current.currentTime = 0;\n                  await audioRef.current.play();\n                  setIsPlaying(true);\n                  setPlayAttempts(0);\n                  console.log('Áudio iniciado com sucesso');\n                }\n              } catch (error) {\n                console.error(`Erro ao reproduzir áudio (tentativa ${attempts + 1}):`, error);\n                if (error instanceof Error && error.name === 'AbortError' && attempts < MAX_PLAY_ATTEMPTS) {\n                  console.log(`Tentando novamente em 500ms (tentativa ${attempts + 1})`);\n                  setPlayAttempts(attempts + 1);\n                  await new Promise(resolve => setTimeout(resolve, 500));\n                  return attemptPlay(attempts + 1);\n                }\n                setPendingAudios(prev => prev.includes(audioId) ? prev : [...prev, audioId]);\n              }\n            };\n            attemptPlay();\n          } else {\n            setPendingAudios(prev => {\n              if (prev.includes(audioId)) return prev;\n              return [...prev, audioId];\n            });\n          }\n        }\n      }\n    });\n  }, [audioTimers, audios, isPlaying, currentAudio]);\n  useEffect(() => {\n    const updateInterval = setInterval(() => {\n      audios.forEach(audio => {\n        const prefs = preferences[audio.id];\n        if (prefs !== null && prefs !== void 0 && prefs.auto_repeat && audioTimers[audio.id]) {\n          const timer = audioTimers[audio.id];\n          const currentTime = Date.now();\n          const endTime = new Date(timer.endTime).getTime();\n          const timeLeft = Math.max(0, Math.floor((endTime - currentTime) / 1000));\n          if (timeLeft !== timer.timeLeft) {\n            setAudioTimers(prev => ({\n              ...prev,\n              [audio.id]: {\n                ...timer,\n                timeLeft\n              }\n            }));\n          }\n        }\n      });\n    }, 1000);\n    return () => clearInterval(updateInterval);\n  }, [audios, preferences, audioTimers]);\n  const loadAudios = async () => {\n    try {\n      const data = await audioService.getAudios();\n      setAudios(data);\n\n      // Carrega as preferências para cada áudio\n      data.forEach(audio => {\n        loadAudioPreferences(audio.id);\n      });\n    } catch (error) {\n      console.error('Erro ao carregar áudios:', error);\n    }\n  };\n  const loadAudioPreferences = async audioId => {\n    try {\n      const prefs = await audioService.loadPreferences(audioId);\n      if (prefs.auto_repeat && prefs.timer_end_at) {\n        const endTime = new Date(prefs.timer_end_at).getTime();\n        const now = Date.now();\n        const timeLeft = Math.max(0, Math.floor((endTime - now) / 1000));\n        if (timeLeft > 0) {\n          const interval = prefs.repeat_interval * 60;\n\n          // Cria um timer temporário que será substituído pelo startNewTimerCycle\n          const tempIntervalId = setInterval(() => {}, 1000);\n\n          // Atualiza o timer com o tempo restante real\n          setAudioTimers(prev => ({\n            ...prev,\n            [audioId]: {\n              interval,\n              timeLeft,\n              intervalId: tempIntervalId,\n              endTime: prefs.timer_end_at\n            }\n          }));\n\n          // Inicia o ciclo do timer\n          startNewTimerCycle(audioId, interval, prefs.timer_end_at);\n\n          // Limpa o timer temporário\n          clearInterval(tempIntervalId);\n          console.log(`Restaurando timer para ${audioId} com ${timeLeft}s restantes de ${interval}s totais`);\n        } else {\n          await audioService.updatePreferences(audioId, {\n            auto_repeat: false,\n            timer_end_at: undefined,\n            repeat_interval: 0\n          });\n        }\n      }\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          auto_repeat: prefs.auto_repeat || false,\n          repeat_interval: prefs.repeat_interval || 0,\n          last_played_at: prefs.last_played_at,\n          play_count: prefs.play_count || 0\n        }\n      }));\n    } catch (error) {\n      console.error('Erro ao carregar preferências:', error);\n    }\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const progress = audioRef.current.currentTime / audioRef.current.duration * 100;\n      setProgress(progress);\n    }\n  };\n  const handleProgressClick = e => {\n    if (audioRef.current) {\n      const bounds = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - bounds.left;\n      const width = bounds.width;\n      const percentage = x / width;\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\n    }\n  };\n  const startNewTimerCycle = (audioId, interval, existingEndTime) => {\n    const endTime = existingEndTime || new Date(Date.now() + interval * 1000).toISOString();\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n    }\n    const intervalId = setInterval(() => {\n      setAudioTimers(prev => {\n        const currentTimer = prev[audioId];\n        if (!currentTimer) return prev;\n        const currentTime = Date.now();\n        const timerEndTime = new Date(currentTimer.endTime).getTime();\n        const newTimeLeft = Math.max(0, Math.floor((timerEndTime - currentTime) / 1000));\n        if (newTimeLeft === 0) {\n          return prev;\n        }\n        return {\n          ...prev,\n          [audioId]: {\n            ...currentTimer,\n            timeLeft: newTimeLeft\n          }\n        };\n      });\n    }, 1000);\n    setAudioTimers(prev => ({\n      ...prev,\n      [audioId]: {\n        interval,\n        timeLeft: existingEndTime ? Math.max(0, Math.floor((new Date(existingEndTime).getTime() - Date.now()) / 1000)) : interval,\n        intervalId,\n        endTime\n      }\n    }));\n    timersRef.current[audioId] = intervalId;\n  };\n  const handleAudioEnd = async () => {\n    console.log('Áudio terminou, verificando status...');\n    if (playAttemptRef.current) {\n      clearTimeout(playAttemptRef.current);\n      playAttemptRef.current = null;\n    }\n    if (audioRef.current) {\n      audioRef.current.currentTime = 0;\n    }\n    setProgress(0);\n\n    // Processa a fila de pendentes\n    if (pendingAudios.length > 0) {\n      const nextAudioId = pendingAudios[0];\n      const nextAudio = audios.find(a => a.id === nextAudioId);\n      setPendingAudios(prev => prev.slice(1));\n      if (nextAudio) {\n        const attemptPlay = async (attempts = 0) => {\n          try {\n            await new Promise(resolve => setTimeout(resolve, 500));\n            setCurrentAudio(nextAudio);\n            if (audioRef.current) {\n              await audioRef.current.play();\n              setIsPlaying(true);\n              setPlayAttempts(0);\n            }\n          } catch (error) {\n            console.error(`Erro ao reproduzir próximo áudio (tentativa ${attempts + 1}):`, error);\n            if (error instanceof Error && error.name === 'AbortError' && attempts < MAX_PLAY_ATTEMPTS) {\n              await new Promise(resolve => setTimeout(resolve, 500));\n              return attemptPlay(attempts + 1);\n            }\n            setIsPlaying(false);\n            onEnded();\n          }\n        };\n        attemptPlay();\n      }\n    } else {\n      setIsPlaying(false);\n      onEnded();\n    }\n    window.dispatchEvent(new Event('audioStop'));\n  };\n  const togglePlay = async audio => {\n    try {\n      // Se está tentando tocar um áudio diferente do atual\n      if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) !== audio.id) {\n        // Para o áudio atual se estiver tocando\n        if (isPlaying) {\n          setIsPlaying(false);\n        }\n\n        // Atualiza o áudio atual\n        setCurrentAudio(audio);\n\n        // Pequeno delay para garantir que o áudio foi carregado\n        setTimeout(() => {\n          if (audioRef.current) {\n            audioRef.current.currentTime = 0;\n            audioRef.current.play().then(() => {\n              setIsPlaying(true);\n              setPlayAttempts(0);\n            }).catch(error => {\n              console.error('Erro ao reproduzir áudio:', error);\n              setIsPlaying(false);\n            });\n          }\n        }, 100);\n      } else {\n        // Se é o mesmo áudio, apenas alterna play/pause\n        if (isPlaying) {\n          var _audioRef$current5;\n          (_audioRef$current5 = audioRef.current) === null || _audioRef$current5 === void 0 ? void 0 : _audioRef$current5.pause();\n          setIsPlaying(false);\n        } else {\n          var _audioRef$current6;\n          (_audioRef$current6 = audioRef.current) === null || _audioRef$current6 === void 0 ? void 0 : _audioRef$current6.play().then(() => {\n            setIsPlaying(true);\n            setPlayAttempts(0);\n          }).catch(error => {\n            console.error('Erro ao reproduzir áudio:', error);\n            setIsPlaying(false);\n          });\n        }\n      }\n    } catch (error) {\n      console.error('Erro ao alternar reprodução:', error);\n      setIsPlaying(false);\n    }\n  };\n  const handleUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    setIsUploading(true);\n    try {\n      console.log('Iniciando upload do arquivo:', file.name);\n\n      // Upload do arquivo\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${Math.random()}.${fileExt}`;\n      const filePath = `audios/${fileName}`;\n      console.log('Tentando fazer upload para:', filePath);\n      const {\n        data: uploadData,\n        error: uploadError\n      } = await supabase.storage.from('media').upload(filePath, file);\n      if (uploadError) {\n        console.error('Erro no upload:', uploadError);\n        throw uploadError;\n      }\n      console.log('Upload bem sucedido:', uploadData);\n\n      // Obtém a URL pública\n      const {\n        data: {\n          publicUrl\n        }\n      } = supabase.storage.from('media').getPublicUrl(filePath);\n      console.log('URL pública gerada:', publicUrl);\n\n      // Adiciona ao banco de dados\n      const newAudio = await audioService.addAudio({\n        title: file.name,\n        url: publicUrl,\n        auto_repeat: false,\n        repeat_interval: 0,\n        play_count: 0\n      });\n      console.log('Áudio adicionado ao banco:', newAudio);\n\n      // Recarrega todos os áudios\n      await loadAudios();\n\n      // Seleciona o novo áudio\n      setCurrentAudio(newAudio);\n\n      // Limpa o input\n      event.target.value = '';\n    } catch (error) {\n      console.error('Erro detalhado no upload:', error);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const startRepeatTimer = async (audioId, minutes) => {\n    setTimerAudioId(audioId);\n    const seconds = minutes * 60;\n\n    // Inicia o novo ciclo do timer\n    startNewTimerCycle(audioId, seconds);\n\n    // Calcula o tempo de término\n    const endTime = new Date(Date.now() + seconds * 1000).toISOString();\n\n    // Salva as preferências no banco\n    try {\n      const prefs = {\n        auto_repeat: true,\n        repeat_interval: minutes,\n        timer_end_at: endTime\n      };\n      await audioService.updatePreferences(audioId, prefs);\n\n      // Atualiza também as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          ...prev[audioId],\n          auto_repeat: true,\n          repeat_interval: minutes\n        }\n      }));\n      console.log(`Timer salvo para ${audioId} com intervalo de ${minutes}min`);\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n  const stopRepeatTimer = async audioId => {\n    // Não para o timer se o áudio estiver tocando\n    if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId && isPlaying) {\n      return;\n    }\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n      delete timersRef.current[audioId];\n    }\n    setAudioTimers(prev => {\n      const newTimers = {\n        ...prev\n      };\n      delete newTimers[audioId];\n      return newTimers;\n    });\n    try {\n      const prefs = {\n        auto_repeat: false,\n        repeat_interval: 0,\n        timer_end_at: undefined\n      };\n      await audioService.updatePreferences(audioId, prefs);\n\n      // Atualiza também as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          ...prev[audioId],\n          auto_repeat: false,\n          repeat_interval: 0\n        }\n      }));\n      console.log(`Timer removido para ${audioId}`);\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n  const handleDelete = async audioId => {\n    try {\n      var _fileUrl$split$;\n      const audioToDelete = audios.find(a => a.id === audioId);\n      if (!audioToDelete) return;\n      const fileUrl = audioToDelete.url;\n      const fileName = (_fileUrl$split$ = fileUrl.split('/audios/')[1]) === null || _fileUrl$split$ === void 0 ? void 0 : _fileUrl$split$.split('?')[0];\n      if (fileName) {\n        console.log('Tentando remover arquivo:', fileName);\n        try {\n          // Primeira tentativa de remoção\n          const {\n            error: storageError\n          } = await supabase.storage.from('media').remove([`audios/${fileName}`]);\n          if (storageError) {\n            console.error('Erro ao remover arquivo:', storageError);\n\n            // Se falhar, espera um momento e tenta novamente\n            await new Promise(resolve => setTimeout(resolve, 1000));\n\n            // Segunda tentativa\n            await supabase.storage.from('media').remove([`audios/${fileName}`]);\n          }\n\n          // Verifica se o arquivo ainda existe\n          const {\n            data: files\n          } = await supabase.storage.from('media').list('audios', {\n            search: fileName\n          });\n          console.log('Verificação após remoção:', files);\n        } catch (storageError) {\n          console.error('Erro ao acessar storage:', storageError);\n        }\n      }\n\n      // Remove o registro do banco de dados\n      await audioService.deleteAudio(audioId);\n\n      // Atualiza estados locais\n      if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId) {\n        setCurrentAudio(null);\n        setIsPlaying(false);\n      }\n      if (audioTimers[audioId]) {\n        await stopRepeatTimer(audioId);\n      }\n      setPreferences(prev => {\n        const newPrefs = {\n          ...prev\n        };\n        delete newPrefs[audioId];\n        return newPrefs;\n      });\n\n      // Força uma atualização da lista de arquivos no storage\n      const {\n        data: updatedFiles\n      } = await supabase.storage.from('media').list('audios');\n      console.log('Lista atualizada de arquivos:', updatedFiles);\n\n      // Recarrega a lista de áudios\n      await loadAudios();\n      console.log('Áudio removido com sucesso:', audioId);\n    } catch (error) {\n      console.error('Erro ao deletar áudio:', error);\n      try {\n        await loadAudios();\n      } catch (e) {\n        console.error('Erro ao recarregar áudios após falha:', e);\n      }\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Adicione esta função auxiliar para formatar o tempo do timer\n  const formatTimeLeft = seconds => {\n    if (seconds < 60) {\n      return `${Math.ceil(seconds)}s`;\n    }\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.ceil(seconds % 60);\n    return `${minutes}min ${remainingSeconds}s`;\n  };\n\n  // Modifique a função getNextAudioInfo para verificar os timers ativos\n  const getNextAudioInfo = () => {\n    // Primeiro, verifica se há algum áudio pendente na fila\n    if (pendingAudios.length > 0) {\n      const nextAudioId = pendingAudios[0];\n      const nextAudio = audios.find(a => a.id === nextAudioId);\n      const timer = audioTimers[nextAudioId];\n      return {\n        nextAudio,\n        timer\n      };\n    }\n\n    // Se não há áudios pendentes, procura o próximo áudio agendado\n    let nextScheduledAudio = null;\n    let shortestTime = Infinity;\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      if (timer.timeLeft < shortestTime) {\n        const audio = audios.find(a => a.id === audioId);\n        if (audio) {\n          nextScheduledAudio = {\n            nextAudio: audio,\n            timer: timer\n          };\n          shortestTime = timer.timeLeft;\n        }\n      }\n    });\n    return nextScheduledAudio;\n  };\n  const handleUpdateTitle = async (audioId, newTitle) => {\n    try {\n      await audioService.updateAudio(audioId, {\n        title: newTitle\n      });\n      // Atualiza o estado local dos áudios\n      setAudios(prev => prev.map(audio => audio.id === audioId ? {\n        ...audio,\n        title: newTitle\n      } : audio));\n      // Se o áudio sendo editado é o atual, atualiza também o currentAudio\n      if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId) {\n        setCurrentAudio(prev => prev ? {\n          ...prev,\n          title: newTitle\n        } : null);\n      }\n      setEditingAudioId(null);\n    } catch (error) {\n      console.error('Erro ao atualizar título:', error);\n    }\n  };\n  const ConfirmDialog = ({\n    audioId,\n    onConfirm,\n    onEdit,\n    onCancel,\n    buttonPosition\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50\",\n    onClick: e => {\n      if (e.target === e.currentTarget) onCancel();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\",\n      style: {\n        top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n        left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n        transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n        opacity: isAnimating ? 0 : 1,\n        transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-[#e1aa1e] font-medium text-sm mb-2\",\n        children: \"Gerenciar Repeti\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300 text-xs mb-4\",\n        children: \"Escolha uma das op\\xE7\\xF5es para editar a repeti\\xE7\\xE3o autom\\xE1tica:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onCancel,\n          className: \"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onEdit,\n          className: \"px-3 py-1.5 rounded bg-[#e1aa1e]/20 text-xs text-[#e1aa1e] hover:bg-[#e1aa1e]/30 transition-colors\",\n          children: \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onConfirm,\n          className: \"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors\",\n          children: \"Desativar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 923,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 906,\n    columnNumber: 5\n  }, this);\n  const SetTimerDialog = ({\n    audioId,\n    audioTitle,\n    onConfirm,\n    onCancel,\n    buttonPosition,\n    inputValue,\n    onInputChange\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-50\",\n      onClick: e => {\n        if (e.target === e.currentTarget) onCancel();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\",\n        style: {\n          top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n          left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n          transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n          opacity: isAnimating ? 0 : 1,\n          transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-[#e1aa1e] font-medium text-sm mb-2\",\n          children: \"Repetir \\xC1udio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300 text-xs mb-3 truncate\",\n          children: audioTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            value: inputValue,\n            onChange: e => onInputChange(e.target.value),\n            placeholder: \"00\",\n            className: \"w-full px-3 py-2 bg-[#1e1e1e] border border-[#404040] rounded text-gray-200 text-center focus:border-[#e1aa1e] focus:outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none pr-12\",\n            onKeyDown: e => {\n              if (e.key === 'Enter') {\n                const value = parseInt(inputValue);\n                if (value > 0) onConfirm(value);\n              } else if (e.key === 'Escape') {\n                onCancel();\n              }\n            },\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 984,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"absolute right-3 top-1/2 -translate-y-1/2 text-xs text-gray-400\",\n            children: \"minutos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1001,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 983,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onCancel,\n            className: \"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\",\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1007,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const value = parseInt(inputValue);\n              if (value > 0) onConfirm(value);\n            },\n            disabled: !inputValue || parseInt(inputValue) <= 0,\n            className: \"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",\n            children: \"Ativar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1013,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 968,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 965,\n      columnNumber: 7\n    }, this);\n  };\n  const handleShowTimerDialog = (e, audioId) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setPopupPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2\n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowTimerDialog(audioId);\n    }, 10);\n  };\n  const handleShowConfirmDialog = (e, audioId) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setConfirmPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2\n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowConfirmDialog(audioId);\n    }, 10);\n  };\n\n  // Adicione este useEffect para gerenciar a seleção de texto\n  useEffect(() => {\n    const style = document.createElement('style');\n    style.innerHTML = `\n      .dragging * {\n        user-select: none !important;\n        -webkit-user-select: none !important;\n        cursor: grabbing !important;\n      }\n    `;\n    document.head.appendChild(style);\n    return () => style.remove();\n  }, []);\n  const DeleteConfirmDialog = ({\n    audioId,\n    onConfirm,\n    onCancel,\n    buttonPosition\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50\",\n    onClick: e => {\n      if (e.target === e.currentTarget) onCancel();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\",\n      style: {\n        top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n        left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n        transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n        opacity: isAnimating ? 0 : 1,\n        transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-red-500 font-medium text-sm mb-2\",\n        children: \"Confirmar Exclus\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1093,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300 text-xs mb-4\",\n        children: \"Tem certeza que deseja excluir este \\xE1udio?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1094,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onCancel,\n          className: \"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1098,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onConfirm,\n          className: \"px-3 py-1.5 rounded bg-red-500 text-xs text-white hover:bg-red-600 transition-colors\",\n          children: \"Excluir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1097,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1083,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1080,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 bg-[#2d2d2d] rounded-lg border border-[#404040] overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 border-b border-[#404040]\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-[#e1aa1e] font-medium text-center\",\n          children: (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.title) || 'Selecione um áudio'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative h-32\",\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"absolute inset-0 w-full h-full\",\n          width: 1000,\n          height: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsPlaying(!isPlaying),\n            className: `p-4 rounded-full bg-[#e1aa1e]/90 hover:bg-[#e1aa1e] transition-all transform \n                hover:scale-105 active:scale-95 ${isPlaying ? 'animate-pulse' : ''}`,\n            disabled: !currentAudio,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-8 h-8 text-gray-900\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: isPlaying ? /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2.5,\n                d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1150,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2.5,\n                d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1157,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-[#1e1e1e]/50\",\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          ref: audioRef,\n          src: currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.url,\n          onTimeUpdate: handleTimeUpdate,\n          onEnded: handleAudioEnd,\n          onPlay: () => {\n            var _analyserRef$current;\n            if (!((_analyserRef$current = analyserRef.current) !== null && _analyserRef$current !== void 0 && _analyserRef$current.context.state)) {\n              connectAudioSource();\n            }\n            window.dispatchEvent(new Event('audioPlay'));\n          },\n          onPause: () => window.dispatchEvent(new Event('audioStop')),\n          className: \"hidden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-1 bg-[#404040] rounded-full cursor-pointer mb-2\",\n          onClick: handleProgressClick,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-full bg-[#e1aa1e] rounded-full\",\n            style: {\n              width: `${progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between text-xs text-gray-400 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatTime(((_audioRef$current7 = audioRef.current) === null || _audioRef$current7 === void 0 ? void 0 : _audioRef$current7.currentTime) || 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatTime(((_audioRef$current8 = audioRef.current) === null || _audioRef$current8 === void 0 ? void 0 : _audioRef$current8.duration) || 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1198,\n          columnNumber: 11\n        }, this), (() => {\n          const nextInfo = getNextAudioInfo();\n          if (!(nextInfo !== null && nextInfo !== void 0 && nextInfo.nextAudio)) return null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-right bg-[#2d2d2d] px-3 py-1 rounded border border-[#404040]/50\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-400\",\n                children: [\"Pr\\xF3ximo: \", nextInfo.nextAudio.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1211,\n                columnNumber: 19\n              }, this), nextInfo.timer && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-[#e1aa1e]\",\n                children: [\"Em \", formatTimeLeft(nextInfo.timer.timeLeft)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1215,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1210,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1209,\n            columnNumber: 15\n          }, this);\n        })()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-400 px-2\",\n          children: \"Lista de \\xC1udios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"bg-[#e1aa1e] hover:bg-[#e1aa1e]/80 text-gray-900 px-3 py-1.5 rounded cursor-pointer transition-colors text-sm\",\n          children: [isUploading ? 'Enviando...' : 'Anexar Áudio', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"hidden\",\n            accept: \"audio/*\",\n            onChange: handleUpload,\n            disabled: isUploading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2 max-h-[400px] overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-400 italic mb-2 px-2\",\n        children: \"Clique no \\xEDcone de edi\\xE7\\xE3o ou d\\xEA um duplo clique no nome para renomear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1249,\n        columnNumber: 9\n      }, this), audios.map(audio => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors min-w-0 bg-[#1e1e1e] mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => togglePlay(audio),\n          className: \"p-1 hover:bg-[#404040] rounded-full transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-6 h-6 text-[#e1aa1e]\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: isPlaying && (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id ? /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1269,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1276,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1262,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1258,\n          columnNumber: 13\n        }, this), editingAudioId === audio.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editingTitle,\n          onChange: e => setEditingTitle(e.target.value),\n          onBlur: () => {\n            if (editingTitle.trim() && editingTitle !== audio.title) {\n              handleUpdateTitle(audio.id, editingTitle);\n            } else {\n              setEditingAudioId(null);\n            }\n          },\n          onKeyDown: e => {\n            if (e.key === 'Enter') {\n              if (editingTitle.trim() && editingTitle !== audio.title) {\n                handleUpdateTitle(audio.id, editingTitle);\n              } else {\n                setEditingAudioId(null);\n              }\n            } else if (e.key === 'Escape') {\n              setEditingAudioId(null);\n            }\n          },\n          className: \"flex-1 bg-[#1e1e1e] text-gray-200 px-2 py-1 rounded border border-[#404040] focus:border-[#e1aa1e] focus:outline-none\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1287,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 flex items-center group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"truncate cursor-pointer hover:text-[#e1aa1e]\",\n              onDoubleClick: () => {\n                setEditingAudioId(audio.id);\n                setEditingTitle(audio.title);\n              },\n              children: audio.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setEditingAudioId(audio.id);\n                setEditingTitle(audio.title);\n              },\n              className: \"p-1 rounded-full hover:bg-[#404040] opacity-0 group-hover:opacity-100 transition-all ml-1\",\n              title: \"Editar nome\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-4 h-4 text-[#e1aa1e]\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1338,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1332,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1324,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1314,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1313,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 shrink-0\",\n          children: [audioTimers[audio.id] ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              handleShowConfirmDialog(e, audio.id);\n            },\n            className: \"flex items-center gap-1.5 px-2 py-1 rounded bg-[#e1aa1e]/10 text-[#e1aa1e] hover:bg-[#e1aa1e]/20 transition-colors\",\n            title: \"Clique para desativar a repeti\\xE7\\xE3o\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-4 h-4\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1365,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1359,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: formatTimeLeft(audioTimers[audio.id].timeLeft)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1372,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1352,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              handleShowTimerDialog(e, audio.id);\n            },\n            className: \"p-1.5 hover:bg-[#404040] rounded transition-colors text-gray-400 hover:text-[#e1aa1e]\",\n            title: \"Ativar repeti\\xE7\\xE3o autom\\xE1tica\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-4 h-4\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1390,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1384,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1377,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              setDeletePosition({\n                x: e.currentTarget.getBoundingClientRect().x,\n                y: e.currentTarget.getBoundingClientRect().y + 30\n              });\n              setShowDeleteConfirm(audio.id);\n            },\n            className: \"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\",\n            title: \"Excluir \\xE1udio\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-5 h-5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1414,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1408,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1400,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1350,\n          columnNumber: 13\n        }, this)]\n      }, audio.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1254,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1248,\n      columnNumber: 7\n    }, this), showTimerDialog && /*#__PURE__*/_jsxDEV(SetTimerDialog, {\n      audioId: showTimerDialog,\n      audioTitle: ((_audios$find = audios.find(a => a.id === showTimerDialog)) === null || _audios$find === void 0 ? void 0 : _audios$find.title) || '',\n      onConfirm: minutes => {\n        startRepeatTimer(showTimerDialog, minutes);\n        setShowTimerDialog(null);\n        setPopupPosition(null);\n        setTimerInputValue('');\n      },\n      onCancel: () => {\n        setShowTimerDialog(null);\n        setPopupPosition(null);\n        setTimerInputValue('');\n      },\n      buttonPosition: popupPosition,\n      inputValue: timerInputValue,\n      onInputChange: setTimerInputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1428,\n      columnNumber: 9\n    }, this), showConfirmDialog && /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      audioId: showConfirmDialog,\n      onConfirm: () => {\n        stopRepeatTimer(showConfirmDialog);\n        setShowConfirmDialog(null);\n        setConfirmPosition(null);\n      },\n      onEdit: () => {\n        setShowConfirmDialog(null);\n        setConfirmPosition(null);\n        // Abre o diálogo de timer com a posição atual\n        setPopupPosition(confirmPosition);\n        setShowTimerDialog(showConfirmDialog);\n      },\n      onCancel: () => {\n        setShowConfirmDialog(null);\n        setConfirmPosition(null);\n      },\n      buttonPosition: confirmPosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1449,\n      columnNumber: 9\n    }, this), showDeleteConfirm && /*#__PURE__*/_jsxDEV(DeleteConfirmDialog, {\n      audioId: showDeleteConfirm,\n      onConfirm: () => {\n        handleDelete(showDeleteConfirm);\n        setShowDeleteConfirm(null);\n        setDeletePosition(null);\n      },\n      onCancel: () => {\n        setShowDeleteConfirm(null);\n        setDeletePosition(null);\n      },\n      buttonPosition: deletePosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1472,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1116,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"m5M8pBNgjaXD2yBukXoLA2HbvFA=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","audioService","supabase","jsxDEV","_jsxDEV","AudioPlayer","onEnded","isPlaying","setIsPlaying","_s","_audioRef$current7","_audioRef$current8","_audios$find","audios","setAudios","currentAudio","setCurrentAudio","progress","setProgress","isUploading","setIsUploading","audioRef","audioTimers","setAudioTimers","timersRef","timerAudioId","setTimerAudioId","pendingAudioId","setPendingAudioId","pendingAudios","setPendingAudios","playAttemptRef","editingAudioId","setEditingAudioId","editingTitle","setEditingTitle","showConfirmDialog","setShowConfirmDialog","showTimerDialog","setShowTimerDialog","popupPosition","setPopupPosition","confirmPosition","setConfirmPosition","isAnimating","setIsAnimating","timerInputValue","setTimerInputValue","preferences","setPreferences","playAttempts","setPlayAttempts","MAX_PLAY_ATTEMPTS","showDeleteConfirm","setShowDeleteConfirm","deletePosition","setDeletePosition","canvasRef","animationRef","audioContextRef","analyserRef","loadAudios","setupAudioContext","_audioContextRef$curr","current","cancelAnimationFrame","close","window","AudioContext","webkitAudioContext","createAnalyser","fftSize","connectAudioSource","source","createMediaElementSource","connect","destination","animate","canvas","ctx","getContext","bufferLength","frequencyBinCount","dataArray","Uint8Array","draw","requestAnimationFrame","getByteFrequencyData","fillStyle","fillRect","width","height","sliceWidth","centerY","amplitude","wave","beginPath","moveTo","i","x","v","y","lineTo","closePath","alpha","gradient","createLinearGradient","addColorStop","fill","strokeStyle","lineWidth","stroke","particleCount","Math","random","radius","arc","PI","lineGradient","_audioRef$current","play","_audioRef$current2","pause","playAudio","console","log","dispatchEvent","Event","error","Error","name","clearTimeout","setTimeout","_audioRef$current3","retryError","Object","values","forEach","timer","clearInterval","onended","handleAudioEnd","onloadeddata","_audioRef$current4","catch","entries","audioId","currentTime","Date","now","endTime","getTime","timeLeft","max","floor","newEndTime","interval","toISOString","updatePreferences","auto_repeat","repeat_interval","timer_end_at","startNewTimerCycle","audio","find","a","id","attemptPlay","attempts","Promise","resolve","prev","includes","updateInterval","setInterval","prefs","data","getAudios","loadAudioPreferences","loadPreferences","tempIntervalId","intervalId","undefined","last_played_at","play_count","handleTimeUpdate","duration","handleProgressClick","e","bounds","currentTarget","getBoundingClientRect","clientX","left","percentage","existingEndTime","currentTimer","timerEndTime","newTimeLeft","length","nextAudioId","nextAudio","slice","togglePlay","then","_audioRef$current5","_audioRef$current6","handleUpload","event","_event$target$files","file","target","files","fileExt","split","pop","fileName","filePath","uploadData","uploadError","storage","from","upload","publicUrl","getPublicUrl","newAudio","addAudio","title","url","value","startRepeatTimer","minutes","seconds","stopRepeatTimer","newTimers","handleDelete","_fileUrl$split$","audioToDelete","fileUrl","storageError","remove","list","search","deleteAudio","newPrefs","updatedFiles","formatTime","mins","secs","toString","padStart","formatTimeLeft","ceil","remainingSeconds","getNextAudioInfo","nextScheduledAudio","shortestTime","Infinity","handleUpdateTitle","newTitle","updateAudio","map","ConfirmDialog","onConfirm","onEdit","onCancel","buttonPosition","className","onClick","children","style","top","transform","opacity","transition","_jsxFileName","lineNumber","columnNumber","SetTimerDialog","audioTitle","inputValue","onInputChange","type","min","onChange","placeholder","onKeyDown","key","parseInt","autoFocus","disabled","handleShowTimerDialog","rect","handleShowConfirmDialog","document","createElement","innerHTML","head","appendChild","DeleteConfirmDialog","ref","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","src","onTimeUpdate","onPlay","_analyserRef$current","context","state","onPause","nextInfo","accept","onBlur","trim","onDoubleClick","_c","$RefreshReg$"],"sources":["C:/Users/genil/Desktop/Dev Sistema academia/src/components/AudioPlayer.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { audioService, AudioData } from '../lib/supabase';\nimport { supabase } from '../lib/supabase';\nimport '../styles/animations.css';\n\ninterface AudioTimer {\n  interval: number;\n  timeLeft: number;\n  intervalId: NodeJS.Timeout;\n  endTime: string;\n}\n\ninterface AudioPlayerProps {\n  onEnded: () => void;\n  isPlaying: boolean;\n  setIsPlaying: (playing: boolean) => void;\n}\n\nconst AudioPlayer: React.FC<AudioPlayerProps> = ({ onEnded, isPlaying, setIsPlaying }) => {\n  const [audios, setAudios] = useState<AudioData[]>([]);\n  const [currentAudio, setCurrentAudio] = useState<AudioData | null>(null);\n  const [progress, setProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const [audioTimers, setAudioTimers] = useState<Record<string, AudioTimer>>({});\n  const timersRef = useRef<Record<string, NodeJS.Timeout>>({});\n  const [timerAudioId, setTimerAudioId] = useState<string | null>(null);\n  const [pendingAudioId, setPendingAudioId] = useState<string | null>(null);\n  const [pendingAudios, setPendingAudios] = useState<string[]>([]);\n  const playAttemptRef = useRef<NodeJS.Timeout | null>(null);\n  const [editingAudioId, setEditingAudioId] = useState<string | null>(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [showConfirmDialog, setShowConfirmDialog] = useState<string | null>(null);\n  const [showTimerDialog, setShowTimerDialog] = useState<string | null>(null);\n  const [popupPosition, setPopupPosition] = useState<{ x: number; y: number } | null>(null);\n  const [confirmPosition, setConfirmPosition] = useState<{ x: number; y: number } | null>(null);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [timerInputValue, setTimerInputValue] = useState('');\n  const [preferences, setPreferences] = useState<Record<string, {\n    auto_repeat: boolean;\n    repeat_interval: number;\n    last_played_at?: string;\n    play_count: number;\n  }>>({});\n  const [playAttempts, setPlayAttempts] = useState(0);\n  const MAX_PLAY_ATTEMPTS = 3;\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState<string | null>(null);\n  const [deletePosition, setDeletePosition] = useState<{ x: number; y: number } | null>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const animationRef = useRef<number>();\n  const audioContextRef = useRef<AudioContext>();\n  const analyserRef = useRef<AnalyserNode>();\n\n  useEffect(() => {\n    loadAudios();\n    setupAudioContext();\n\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n      audioContextRef.current?.close();\n    };\n  }, []);\n\n  const setupAudioContext = () => {\n    audioContextRef.current = new (window.AudioContext || (window as any).webkitAudioContext)();\n    analyserRef.current = audioContextRef.current.createAnalyser();\n    analyserRef.current.fftSize = 256;\n  };\n\n  const connectAudioSource = () => {\n    if (!audioRef.current || !audioContextRef.current || !analyserRef.current) return;\n\n    const source = audioContextRef.current.createMediaElementSource(audioRef.current);\n    source.connect(analyserRef.current);\n    analyserRef.current.connect(audioContextRef.current.destination);\n  };\n\n  const animate = () => {\n    if (!canvasRef.current || !analyserRef.current) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const bufferLength = analyserRef.current.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n\n    const draw = () => {\n      animationRef.current = requestAnimationFrame(draw);\n      analyserRef.current!.getByteFrequencyData(dataArray);\n\n      // Limpa o canvas\n      ctx.fillStyle = '#1e1e1e';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Configurações das ondas\n      const sliceWidth = canvas.width / bufferLength;\n      const centerY = canvas.height / 2;\n      const amplitude = canvas.height / 4;\n\n      // Desenha múltiplas ondas\n      for (let wave = 0; wave < 3; wave++) {\n        ctx.beginPath();\n        ctx.moveTo(0, centerY);\n\n        // Primeira metade da onda (subindo)\n        for (let i = 0; i < bufferLength; i++) {\n          const x = i * sliceWidth;\n          const v = dataArray[i] / 128.0;\n          const y = centerY - v * amplitude * (1 - wave * 0.3);\n\n          if (i === 0) {\n            ctx.moveTo(x, y);\n          } else {\n            ctx.lineTo(x, y);\n          }\n        }\n\n        // Segunda metade da onda (descendo) - espelhada\n        for (let i = bufferLength - 1; i >= 0; i--) {\n          const x = i * sliceWidth;\n          const v = dataArray[i] / 128.0;\n          const y = centerY + v * amplitude * (1 - wave * 0.3);\n\n          ctx.lineTo(x, y);\n        }\n\n        ctx.closePath();\n\n        // Gradiente para cada onda\n        const alpha = isPlaying ? (0.5 - wave * 0.15) : 0.1;\n        const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\n        gradient.addColorStop(0, `rgba(225, 170, 30, ${alpha * 0.1})`);\n        gradient.addColorStop(0.5, `rgba(225, 170, 30, ${alpha})`);\n        gradient.addColorStop(1, `rgba(225, 170, 30, ${alpha * 0.1})`);\n\n        ctx.fillStyle = gradient;\n        ctx.fill();\n\n        // Contorno da onda\n        ctx.strokeStyle = `rgba(225, 170, 30, ${alpha * 2})`;\n        ctx.lineWidth = 2;\n        ctx.stroke();\n      }\n\n      // Adiciona partículas quando o áudio está tocando\n      if (isPlaying) {\n        const particleCount = 20;\n        for (let i = 0; i < particleCount; i++) {\n          const x = Math.random() * canvas.width;\n          const y = centerY + (Math.random() - 0.5) * canvas.height;\n          const radius = Math.random() * 2;\n          const alpha = Math.random() * 0.5;\n\n          ctx.beginPath();\n          ctx.arc(x, y, radius, 0, Math.PI * 2);\n          ctx.fillStyle = `rgba(225, 170, 30, ${alpha})`;\n          ctx.fill();\n        }\n      }\n\n      // Linha central suave\n      const lineGradient = ctx.createLinearGradient(0, centerY - 2, 0, centerY + 2);\n      lineGradient.addColorStop(0, 'rgba(225, 170, 30, 0)');\n      lineGradient.addColorStop(0.5, `rgba(225, 170, 30, ${isPlaying ? 0.3 : 0.1})`);\n      lineGradient.addColorStop(1, 'rgba(225, 170, 30, 0)');\n      \n      ctx.fillStyle = lineGradient;\n      ctx.fillRect(0, centerY - 1, canvas.width, 2);\n    };\n\n    draw();\n  };\n\n  useEffect(() => {\n    if (isPlaying) {\n      audioRef.current?.play();\n      animate();\n    } else {\n      audioRef.current?.pause();\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    }\n  }, [isPlaying]);\n\n  useEffect(() => {\n    const playAudio = async () => {\n      if (!audioRef.current) return;\n\n      try {\n        console.log('Tentando reproduzir áudio...');\n        await audioRef.current.play();\n        console.log('Áudio iniciado com sucesso');\n        window.dispatchEvent(new Event('audioPlay'));\n      } catch (error: unknown) {\n        console.error('Erro ao reproduzir áudio:', error);\n        if (error instanceof Error && error.name === 'AbortError') {\n          // Limpa qualquer tentativa pendente\n          if (playAttemptRef.current) {\n            clearTimeout(playAttemptRef.current);\n          }\n          \n          // Tenta novamente após um delay\n          playAttemptRef.current = setTimeout(async () => {\n            try {\n              console.log('Tentando reproduzir novamente...');\n              await audioRef.current?.play();\n              console.log('Áudio iniciado na segunda tentativa');\n              window.dispatchEvent(new Event('audioPlay'));\n            } catch (retryError) {\n              console.error('Erro na segunda tentativa:', retryError);\n              setIsPlaying(false);\n            }\n          }, 500);\n        } else {\n          setIsPlaying(false);\n        }\n      }\n    };\n\n    if (audioRef.current) {\n      if (isPlaying) {\n        // Limpa qualquer tentativa pendente antes de iniciar uma nova\n        if (playAttemptRef.current) {\n          clearTimeout(playAttemptRef.current);\n          playAttemptRef.current = null;\n        }\n        \n        // Adiciona um pequeno delay antes de tentar reproduzir\n        playAttemptRef.current = setTimeout(() => {\n          playAudio();\n        }, 100);\n      } else {\n        // Limpa qualquer tentativa pendente\n        if (playAttemptRef.current) {\n          clearTimeout(playAttemptRef.current);\n          playAttemptRef.current = null;\n        }\n        audioRef.current.pause();\n        window.dispatchEvent(new Event('audioStop'));\n      }\n    }\n\n    // Cleanup\n    return () => {\n      if (playAttemptRef.current) {\n        clearTimeout(playAttemptRef.current);\n        playAttemptRef.current = null;\n      }\n    };\n  }, [isPlaying]);\n\n  useEffect(() => {\n    return () => {\n      Object.values(timersRef.current).forEach(timer => {\n        clearInterval(timer);\n      });\n    };\n  }, []);\n\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.onended = () => {\n        console.log('Áudio terminou (evento nativo)');\n        handleAudioEnd();\n      };\n\n      audioRef.current.onloadeddata = () => {\n        if (isPlaying) {\n          audioRef.current?.play().catch(error => {\n            console.error('Erro ao reproduzir áudio após carregamento:', error);\n            setIsPlaying(false);\n          });\n        }\n      };\n    }\n  }, [audioRef.current]);\n\n  useEffect(() => {\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      const currentTime = Date.now();\n      const endTime = new Date(timer.endTime).getTime();\n      const timeLeft = Math.max(0, Math.floor((endTime - currentTime) / 1000));\n\n      if (timeLeft === 0) {\n        console.log('Timer zerou, iniciando novo ciclo e reprodução');\n        \n        // Calcula o novo tempo de término para o próximo ciclo\n        const newEndTime = new Date(Date.now() + timer.interval * 1000).toISOString();\n        \n        // Atualiza as preferências no banco antes de iniciar o novo ciclo\n        audioService.updatePreferences(audioId, {\n          auto_repeat: true,\n          repeat_interval: Math.floor(timer.interval / 60),\n          timer_end_at: newEndTime\n        }).catch(error => {\n          console.error('Erro ao atualizar preferências do timer:', error);\n        });\n\n        // Inicia um novo ciclo\n        startNewTimerCycle(audioId, timer.interval);\n\n        // Encontra e reproduz o áudio\n        const audio = audios.find(a => a.id === audioId);\n        if (audio) {\n          if (!isPlaying || (currentAudio?.id === audioId)) {\n            const attemptPlay = async (attempts = 0): Promise<void> => {\n              try {\n                setCurrentAudio(audio);\n                if (audioRef.current) {\n                  audioRef.current.currentTime = 0;\n                  await audioRef.current.play();\n                  setIsPlaying(true);\n                  setPlayAttempts(0);\n                  console.log('Áudio iniciado com sucesso');\n                }\n              } catch (error) {\n                console.error(`Erro ao reproduzir áudio (tentativa ${attempts + 1}):`, error);\n                \n                if (error instanceof Error && error.name === 'AbortError' && attempts < MAX_PLAY_ATTEMPTS) {\n                  console.log(`Tentando novamente em 500ms (tentativa ${attempts + 1})`);\n                  setPlayAttempts(attempts + 1);\n                  \n                  await new Promise(resolve => setTimeout(resolve, 500));\n                  return attemptPlay(attempts + 1);\n                }\n                \n                setPendingAudios(prev => \n                  prev.includes(audioId) ? prev : [...prev, audioId]\n                );\n              }\n            };\n\n            attemptPlay();\n          } else {\n            setPendingAudios(prev => {\n              if (prev.includes(audioId)) return prev;\n              return [...prev, audioId];\n            });\n          }\n        }\n      }\n    });\n  }, [audioTimers, audios, isPlaying, currentAudio]);\n\n  useEffect(() => {\n    const updateInterval = setInterval(() => {\n      audios.forEach(audio => {\n        const prefs = preferences[audio.id];\n        if (prefs?.auto_repeat && audioTimers[audio.id]) {\n          const timer = audioTimers[audio.id];\n          const currentTime = Date.now();\n          const endTime = new Date(timer.endTime).getTime();\n          const timeLeft = Math.max(0, Math.floor((endTime - currentTime) / 1000));\n\n          if (timeLeft !== timer.timeLeft) {\n            setAudioTimers(prev => ({\n              ...prev,\n              [audio.id]: {\n                ...timer,\n                timeLeft\n              }\n            }));\n          }\n        }\n      });\n    }, 1000);\n\n    return () => clearInterval(updateInterval);\n  }, [audios, preferences, audioTimers]);\n\n  const loadAudios = async () => {\n    try {\n      const data = await audioService.getAudios();\n      setAudios(data);\n      \n      // Carrega as preferências para cada áudio\n      data.forEach(audio => {\n        loadAudioPreferences(audio.id);\n      });\n    } catch (error) {\n      console.error('Erro ao carregar áudios:', error);\n    }\n  };\n\n  const loadAudioPreferences = async (audioId: string) => {\n    try {\n      const prefs = await audioService.loadPreferences(audioId);\n      \n      if (prefs.auto_repeat && prefs.timer_end_at) {\n        const endTime = new Date(prefs.timer_end_at).getTime();\n        const now = Date.now();\n        const timeLeft = Math.max(0, Math.floor((endTime - now) / 1000));\n        \n        if (timeLeft > 0) {\n          const interval = prefs.repeat_interval * 60;\n          \n          // Cria um timer temporário que será substituído pelo startNewTimerCycle\n          const tempIntervalId = setInterval(() => {}, 1000);\n          \n          // Atualiza o timer com o tempo restante real\n          setAudioTimers(prev => ({\n            ...prev,\n            [audioId]: {\n              interval,\n              timeLeft,\n              intervalId: tempIntervalId,\n              endTime: prefs.timer_end_at\n            }\n          }));\n          \n          // Inicia o ciclo do timer\n          startNewTimerCycle(audioId, interval, prefs.timer_end_at);\n          \n          // Limpa o timer temporário\n          clearInterval(tempIntervalId);\n          \n          console.log(`Restaurando timer para ${audioId} com ${timeLeft}s restantes de ${interval}s totais`);\n        } else {\n          await audioService.updatePreferences(audioId, {\n            auto_repeat: false,\n            timer_end_at: undefined,\n            repeat_interval: 0\n          });\n        }\n      }\n\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          auto_repeat: prefs.auto_repeat || false,\n          repeat_interval: prefs.repeat_interval || 0,\n          last_played_at: prefs.last_played_at,\n          play_count: prefs.play_count || 0\n        }\n      }));\n    } catch (error) {\n      console.error('Erro ao carregar preferências:', error);\n    }\n  };\n\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const progress = (audioRef.current.currentTime / audioRef.current.duration) * 100;\n      setProgress(progress);\n    }\n  };\n\n  const handleProgressClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (audioRef.current) {\n      const bounds = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - bounds.left;\n      const width = bounds.width;\n      const percentage = x / width;\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\n    }\n  };\n\n  const startNewTimerCycle = (audioId: string, interval: number, existingEndTime?: string) => {\n    const endTime = existingEndTime || new Date(Date.now() + interval * 1000).toISOString();\n    \n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n    }\n\n    const intervalId = setInterval(() => {\n      setAudioTimers(prev => {\n        const currentTimer = prev[audioId];\n        if (!currentTimer) return prev;\n\n        const currentTime = Date.now();\n        const timerEndTime = new Date(currentTimer.endTime).getTime();\n        const newTimeLeft = Math.max(0, Math.floor((timerEndTime - currentTime) / 1000));\n\n        if (newTimeLeft === 0) {\n          return prev;\n        }\n\n        return {\n          ...prev,\n          [audioId]: {\n            ...currentTimer,\n            timeLeft: newTimeLeft\n          }\n        };\n      });\n    }, 1000);\n\n    setAudioTimers(prev => ({\n      ...prev,\n      [audioId]: {\n        interval,\n        timeLeft: existingEndTime ? \n          Math.max(0, Math.floor((new Date(existingEndTime).getTime() - Date.now()) / 1000)) : \n          interval,\n        intervalId,\n        endTime\n      }\n    }));\n\n    timersRef.current[audioId] = intervalId;\n  };\n\n  const handleAudioEnd = async () => {\n    console.log('Áudio terminou, verificando status...');\n    \n    if (playAttemptRef.current) {\n      clearTimeout(playAttemptRef.current);\n      playAttemptRef.current = null;\n    }\n\n    if (audioRef.current) {\n      audioRef.current.currentTime = 0;\n    }\n    setProgress(0);\n\n    // Processa a fila de pendentes\n    if (pendingAudios.length > 0) {\n      const nextAudioId = pendingAudios[0];\n      const nextAudio = audios.find(a => a.id === nextAudioId);\n      setPendingAudios(prev => prev.slice(1));\n\n      if (nextAudio) {\n        const attemptPlay = async (attempts = 0): Promise<void> => {\n          try {\n            await new Promise(resolve => setTimeout(resolve, 500));\n            setCurrentAudio(nextAudio);\n            if (audioRef.current) {\n              await audioRef.current.play();\n              setIsPlaying(true);\n              setPlayAttempts(0);\n            }\n          } catch (error) {\n            console.error(`Erro ao reproduzir próximo áudio (tentativa ${attempts + 1}):`, error);\n            \n            if (error instanceof Error && error.name === 'AbortError' && attempts < MAX_PLAY_ATTEMPTS) {\n              await new Promise(resolve => setTimeout(resolve, 500));\n              return attemptPlay(attempts + 1);\n            }\n            \n            setIsPlaying(false);\n            onEnded();\n          }\n        };\n\n        attemptPlay();\n      }\n    } else {\n      setIsPlaying(false);\n      onEnded();\n    }\n\n    window.dispatchEvent(new Event('audioStop'));\n  };\n\n  const togglePlay = async (audio: AudioData) => {\n    try {\n      // Se está tentando tocar um áudio diferente do atual\n      if (currentAudio?.id !== audio.id) {\n        // Para o áudio atual se estiver tocando\n        if (isPlaying) {\n          setIsPlaying(false);\n        }\n        \n        // Atualiza o áudio atual\n        setCurrentAudio(audio);\n        \n        // Pequeno delay para garantir que o áudio foi carregado\n        setTimeout(() => {\n          if (audioRef.current) {\n            audioRef.current.currentTime = 0;\n            audioRef.current.play()\n              .then(() => {\n                setIsPlaying(true);\n                setPlayAttempts(0);\n              })\n              .catch(error => {\n                console.error('Erro ao reproduzir áudio:', error);\n                setIsPlaying(false);\n              });\n          }\n        }, 100);\n      } else {\n        // Se é o mesmo áudio, apenas alterna play/pause\n        if (isPlaying) {\n          audioRef.current?.pause();\n          setIsPlaying(false);\n        } else {\n          audioRef.current?.play()\n            .then(() => {\n              setIsPlaying(true);\n              setPlayAttempts(0);\n            })\n            .catch(error => {\n              console.error('Erro ao reproduzir áudio:', error);\n              setIsPlaying(false);\n            });\n        }\n      }\n    } catch (error) {\n      console.error('Erro ao alternar reprodução:', error);\n      setIsPlaying(false);\n    }\n  };\n\n  const handleUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    setIsUploading(true);\n    try {\n      console.log('Iniciando upload do arquivo:', file.name);\n      \n      // Upload do arquivo\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${Math.random()}.${fileExt}`;\n      const filePath = `audios/${fileName}`;\n\n      console.log('Tentando fazer upload para:', filePath);\n\n      const { data: uploadData, error: uploadError } = await supabase.storage\n        .from('media')\n        .upload(filePath, file);\n\n      if (uploadError) {\n        console.error('Erro no upload:', uploadError);\n        throw uploadError;\n      }\n\n      console.log('Upload bem sucedido:', uploadData);\n\n      // Obtém a URL pública\n      const { data: { publicUrl } } = supabase.storage\n        .from('media')\n        .getPublicUrl(filePath);\n\n      console.log('URL pública gerada:', publicUrl);\n\n      // Adiciona ao banco de dados\n      const newAudio = await audioService.addAudio({\n        title: file.name,\n        url: publicUrl,\n        auto_repeat: false,\n        repeat_interval: 0,\n        play_count: 0\n      });\n\n      console.log('Áudio adicionado ao banco:', newAudio);\n\n      // Recarrega todos os áudios\n      await loadAudios();\n      \n      // Seleciona o novo áudio\n      setCurrentAudio(newAudio);\n      \n      // Limpa o input\n      event.target.value = '';\n\n    } catch (error) {\n      console.error('Erro detalhado no upload:', error);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const startRepeatTimer = async (audioId: string, minutes: number) => {\n    setTimerAudioId(audioId);\n    const seconds = minutes * 60;\n    \n    // Inicia o novo ciclo do timer\n    startNewTimerCycle(audioId, seconds);\n\n    // Calcula o tempo de término\n    const endTime = new Date(Date.now() + seconds * 1000).toISOString();\n\n    // Salva as preferências no banco\n    try {\n      const prefs = {\n        auto_repeat: true,\n        repeat_interval: minutes,\n        timer_end_at: endTime\n      };\n      \n      await audioService.updatePreferences(audioId, prefs);\n      \n      // Atualiza também as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          ...prev[audioId],\n          auto_repeat: true,\n          repeat_interval: minutes\n        }\n      }));\n      \n      console.log(`Timer salvo para ${audioId} com intervalo de ${minutes}min`);\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n\n  const stopRepeatTimer = async (audioId: string) => {\n    // Não para o timer se o áudio estiver tocando\n    if (currentAudio?.id === audioId && isPlaying) {\n      return;\n    }\n\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n      delete timersRef.current[audioId];\n    }\n\n    setAudioTimers(prev => {\n      const newTimers = { ...prev };\n      delete newTimers[audioId];\n      return newTimers;\n    });\n\n    try {\n      const prefs = {\n        auto_repeat: false,\n        repeat_interval: 0,\n        timer_end_at: undefined\n      };\n      \n      await audioService.updatePreferences(audioId, prefs);\n      \n      // Atualiza também as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          ...prev[audioId],\n          auto_repeat: false,\n          repeat_interval: 0\n        }\n      }));\n      \n      console.log(`Timer removido para ${audioId}`);\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n\n  const handleDelete = async (audioId: string) => {\n    try {\n      const audioToDelete = audios.find(a => a.id === audioId);\n      if (!audioToDelete) return;\n\n      const fileUrl = audioToDelete.url;\n      const fileName = fileUrl.split('/audios/')[1]?.split('?')[0];\n\n      if (fileName) {\n        console.log('Tentando remover arquivo:', fileName);\n\n        try {\n          // Primeira tentativa de remoção\n          const { error: storageError } = await supabase.storage\n            .from('media')\n            .remove([`audios/${fileName}`]);\n\n          if (storageError) {\n            console.error('Erro ao remover arquivo:', storageError);\n            \n            // Se falhar, espera um momento e tenta novamente\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            \n            // Segunda tentativa\n            await supabase.storage\n              .from('media')\n              .remove([`audios/${fileName}`]);\n          }\n\n          // Verifica se o arquivo ainda existe\n          const { data: files } = await supabase.storage\n            .from('media')\n            .list('audios', {\n              search: fileName\n            });\n\n          console.log('Verificação após remoção:', files);\n        } catch (storageError) {\n          console.error('Erro ao acessar storage:', storageError);\n        }\n      }\n\n      // Remove o registro do banco de dados\n      await audioService.deleteAudio(audioId);\n\n      // Atualiza estados locais\n      if (currentAudio?.id === audioId) {\n        setCurrentAudio(null);\n        setIsPlaying(false);\n      }\n\n      if (audioTimers[audioId]) {\n        await stopRepeatTimer(audioId);\n      }\n\n      setPreferences(prev => {\n        const newPrefs = { ...prev };\n        delete newPrefs[audioId];\n        return newPrefs;\n      });\n\n      // Força uma atualização da lista de arquivos no storage\n      const { data: updatedFiles } = await supabase.storage\n        .from('media')\n        .list('audios');\n\n      console.log('Lista atualizada de arquivos:', updatedFiles);\n\n      // Recarrega a lista de áudios\n      await loadAudios();\n\n      console.log('Áudio removido com sucesso:', audioId);\n    } catch (error) {\n      console.error('Erro ao deletar áudio:', error);\n      try {\n        await loadAudios();\n      } catch (e) {\n        console.error('Erro ao recarregar áudios após falha:', e);\n      }\n    }\n  };\n\n  const formatTime = (seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Adicione esta função auxiliar para formatar o tempo do timer\n  const formatTimeLeft = (seconds: number): string => {\n    if (seconds < 60) {\n      return `${Math.ceil(seconds)}s`;\n    }\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.ceil(seconds % 60);\n    return `${minutes}min ${remainingSeconds}s`;\n  };\n\n  // Modifique a função getNextAudioInfo para verificar os timers ativos\n  const getNextAudioInfo = () => {\n    // Primeiro, verifica se há algum áudio pendente na fila\n    if (pendingAudios.length > 0) {\n      const nextAudioId = pendingAudios[0];\n      const nextAudio = audios.find(a => a.id === nextAudioId);\n      const timer = audioTimers[nextAudioId];\n      \n      return { nextAudio, timer };\n    }\n\n    // Se não há áudios pendentes, procura o próximo áudio agendado\n    let nextScheduledAudio = null;\n    let shortestTime = Infinity;\n\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      if (timer.timeLeft < shortestTime) {\n        const audio = audios.find(a => a.id === audioId);\n        if (audio) {\n          nextScheduledAudio = {\n            nextAudio: audio,\n            timer: timer\n          };\n          shortestTime = timer.timeLeft;\n        }\n      }\n    });\n\n    return nextScheduledAudio;\n  };\n\n  const handleUpdateTitle = async (audioId: string, newTitle: string) => {\n    try {\n      await audioService.updateAudio(audioId, { title: newTitle });\n      // Atualiza o estado local dos áudios\n      setAudios(prev => prev.map(audio => \n        audio.id === audioId ? { ...audio, title: newTitle } : audio\n      ));\n      // Se o áudio sendo editado é o atual, atualiza também o currentAudio\n      if (currentAudio?.id === audioId) {\n        setCurrentAudio(prev => prev ? { ...prev, title: newTitle } : null);\n      }\n      setEditingAudioId(null);\n    } catch (error) {\n      console.error('Erro ao atualizar título:', error);\n    }\n  };\n\n  const ConfirmDialog = ({ \n    audioId, \n    onConfirm,\n    onEdit,\n    onCancel,\n    buttonPosition\n  }: { \n    audioId: string;\n    onConfirm: () => void;\n    onEdit: () => void;\n    onCancel: () => void;\n    buttonPosition: { x: number; y: number } | null;\n  }) => (\n    <div className=\"fixed inset-0 z-50\" onClick={(e) => {\n      if (e.target === e.currentTarget) onCancel();\n    }}>\n      <div \n        className=\"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\"\n        style={{\n          top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n          left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n          transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n          opacity: isAnimating ? 0 : 1,\n          transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n        }}\n      >\n        <h3 className=\"text-[#e1aa1e] font-medium text-sm mb-2\">Gerenciar Repetição</h3>\n        <p className=\"text-gray-300 text-xs mb-4\">\n          Escolha uma das opções para editar a repetição automática:\n        </p>\n        <div className=\"flex justify-end gap-2\">\n          <button\n            onClick={onCancel}\n            className=\"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\"\n          >\n            Cancelar\n          </button>\n          <button\n            onClick={onEdit}\n            className=\"px-3 py-1.5 rounded bg-[#e1aa1e]/20 text-xs text-[#e1aa1e] hover:bg-[#e1aa1e]/30 transition-colors\"\n          >\n            Editar\n          </button>\n          <button\n            onClick={onConfirm}\n            className=\"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors\"\n          >\n            Desativar\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  const SetTimerDialog = ({ \n    audioId, \n    audioTitle,\n    onConfirm, \n    onCancel,\n    buttonPosition,\n    inputValue,\n    onInputChange\n  }: { \n    audioId: string;\n    audioTitle: string;\n    onConfirm: (minutes: number) => void;\n    onCancel: () => void;\n    buttonPosition: { x: number; y: number } | null;\n    inputValue: string;\n    onInputChange: (value: string) => void;\n  }) => {\n    return (\n      <div className=\"fixed inset-0 z-50\" onClick={(e) => {\n        if (e.target === e.currentTarget) onCancel();\n      }}>\n        <div \n          className=\"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\"\n          style={{\n            top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n            left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n            transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n            opacity: isAnimating ? 0 : 1,\n            transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n          }}\n        >\n          <h3 className=\"text-[#e1aa1e] font-medium text-sm mb-2\">Repetir Áudio</h3>\n          <p className=\"text-gray-300 text-xs mb-3 truncate\">\n            {audioTitle}\n          </p>\n          \n          <div className=\"relative mb-4\">\n            <input\n              type=\"number\"\n              min=\"1\"\n              value={inputValue}\n              onChange={(e) => onInputChange(e.target.value)}\n              placeholder=\"00\"\n              className=\"w-full px-3 py-2 bg-[#1e1e1e] border border-[#404040] rounded text-gray-200 text-center focus:border-[#e1aa1e] focus:outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none pr-12\"\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  const value = parseInt(inputValue);\n                  if (value > 0) onConfirm(value);\n                } else if (e.key === 'Escape') {\n                  onCancel();\n                }\n              }}\n              autoFocus\n            />\n            <span className=\"absolute right-3 top-1/2 -translate-y-1/2 text-xs text-gray-400\">\n              minutos\n            </span>\n          </div>\n\n          <div className=\"flex justify-end gap-2\">\n            <button\n              onClick={onCancel}\n              className=\"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\"\n            >\n              Cancelar\n            </button>\n            <button\n              onClick={() => {\n                const value = parseInt(inputValue);\n                if (value > 0) onConfirm(value);\n              }}\n              disabled={!inputValue || parseInt(inputValue) <= 0}\n              className=\"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              Ativar\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const handleShowTimerDialog = (e: React.MouseEvent, audioId: string) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setPopupPosition({ \n      x: rect.left + rect.width/2, \n      y: rect.top + rect.height/2 \n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowTimerDialog(audioId);\n    }, 10);\n  };\n\n  const handleShowConfirmDialog = (e: React.MouseEvent, audioId: string) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setConfirmPosition({ \n      x: rect.left + rect.width/2, \n      y: rect.top + rect.height/2 \n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowConfirmDialog(audioId);\n    }, 10);\n  };\n\n  // Adicione este useEffect para gerenciar a seleção de texto\n  useEffect(() => {\n    const style = document.createElement('style');\n    style.innerHTML = `\n      .dragging * {\n        user-select: none !important;\n        -webkit-user-select: none !important;\n        cursor: grabbing !important;\n      }\n    `;\n    document.head.appendChild(style);\n    return () => style.remove();\n  }, []);\n\n  const DeleteConfirmDialog = ({ \n    audioId, \n    onConfirm,\n    onCancel,\n    buttonPosition\n  }: { \n    audioId: string;\n    onConfirm: () => void;\n    onCancel: () => void;\n    buttonPosition: { x: number; y: number } | null;\n  }) => (\n    <div className=\"fixed inset-0 z-50\" onClick={(e) => {\n      if (e.target === e.currentTarget) onCancel();\n    }}>\n      <div \n        className=\"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\"\n        style={{\n          top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n          left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n          transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n          opacity: isAnimating ? 0 : 1,\n          transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n        }}\n      >\n        <h3 className=\"text-red-500 font-medium text-sm mb-2\">Confirmar Exclusão</h3>\n        <p className=\"text-gray-300 text-xs mb-4\">\n          Tem certeza que deseja excluir este áudio?\n        </p>\n        <div className=\"flex justify-end gap-2\">\n          <button\n            onClick={onCancel}\n            className=\"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\"\n          >\n            Cancelar\n          </button>\n          <button\n            onClick={onConfirm}\n            className=\"px-3 py-1.5 rounded bg-red-500 text-xs text-white hover:bg-red-600 transition-colors\"\n          >\n            Excluir\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-4\">\n      {/* Player Principal com Visualizador */}\n      <div className=\"mb-4 bg-[#2d2d2d] rounded-lg border border-[#404040] overflow-hidden\">\n        {/* Título do Áudio */}\n        <div className=\"p-3 border-b border-[#404040]\">\n          <h3 className=\"text-[#e1aa1e] font-medium text-center\">\n            {currentAudio?.title || 'Selecione um áudio'}\n          </h3>\n        </div>\n\n        {/* Área do Visualizador - Altura reduzida */}\n        <div className=\"relative h-32\">\n          <canvas\n            ref={canvasRef}\n            className=\"absolute inset-0 w-full h-full\"\n            width={1000}\n            height={200}\n          />\n          \n          {/* Botão de Play centralizado */}\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <button\n              onClick={() => setIsPlaying(!isPlaying)}\n              className={`p-4 rounded-full bg-[#e1aa1e]/90 hover:bg-[#e1aa1e] transition-all transform \n                hover:scale-105 active:scale-95 ${isPlaying ? 'animate-pulse' : ''}`}\n              disabled={!currentAudio}\n            >\n              <svg\n                className=\"w-8 h-8 text-gray-900\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                {isPlaying ? (\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2.5}\n                    d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                ) : (\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2.5}\n                    d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                )}\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        {/* Controles e Progresso */}\n        <div className=\"p-4 bg-[#1e1e1e]/50\">\n          <audio\n            ref={audioRef}\n            src={currentAudio?.url}\n            onTimeUpdate={handleTimeUpdate}\n            onEnded={handleAudioEnd}\n            onPlay={() => {\n              if (!analyserRef.current?.context.state) {\n                connectAudioSource();\n              }\n              window.dispatchEvent(new Event('audioPlay'));\n            }}\n            onPause={() => window.dispatchEvent(new Event('audioStop'))}\n            className=\"hidden\"\n          />\n\n          {/* Barra de Progresso */}\n          <div\n            className=\"h-1 bg-[#404040] rounded-full cursor-pointer mb-2\"\n            onClick={handleProgressClick}\n          >\n            <div\n              className=\"h-full bg-[#e1aa1e] rounded-full\"\n              style={{ width: `${progress}%` }}\n            />\n          </div>\n\n          {/* Tempo */}\n          <div className=\"flex justify-between text-xs text-gray-400 mb-3\">\n            <span>{formatTime(audioRef.current?.currentTime || 0)}</span>\n            <span>{formatTime(audioRef.current?.duration || 0)}</span>\n          </div>\n\n          {/* Próxima Reprodução */}\n          {(() => {\n            const nextInfo = getNextAudioInfo();\n            if (!nextInfo?.nextAudio) return null;\n\n            return (\n              <div className=\"flex justify-end\">\n                <div className=\"text-right bg-[#2d2d2d] px-3 py-1 rounded border border-[#404040]/50\">\n                  <div className=\"text-xs text-gray-400\">\n                    Próximo: {nextInfo.nextAudio.title}\n                  </div>\n                  {nextInfo.timer && (\n                    <div className=\"text-xs text-[#e1aa1e]\">\n                      Em {formatTimeLeft(nextInfo.timer.timeLeft)}\n                    </div>\n                  )}\n                </div>\n              </div>\n            );\n          })()}\n        </div>\n      </div>\n\n      {/* Cabeçalho da Lista */}\n      <div className=\"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\">\n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-sm text-gray-400 px-2\">Lista de Áudios</span>\n        </div>\n\n        {/* Botão de Upload */}\n        <div className=\"flex items-center\">\n          <label className=\"bg-[#e1aa1e] hover:bg-[#e1aa1e]/80 text-gray-900 px-3 py-1.5 rounded cursor-pointer transition-colors text-sm\">\n            {isUploading ? 'Enviando...' : 'Anexar Áudio'}\n            <input\n              type=\"file\"\n              className=\"hidden\"\n              accept=\"audio/*\"\n              onChange={handleUpload}\n              disabled={isUploading}\n            />\n          </label>\n        </div>\n      </div>\n\n      {/* Lista de Áudios */}\n      <div className=\"space-y-2 max-h-[400px] overflow-y-auto\">\n        <div className=\"text-xs text-gray-400 italic mb-2 px-2\">\n          Clique no ícone de edição ou dê um duplo clique no nome para renomear\n        </div>\n\n        {audios.map((audio) => (\n          <div\n            key={audio.id}\n            className=\"flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors min-w-0 bg-[#1e1e1e] mb-2\"\n          >\n            <button\n              onClick={() => togglePlay(audio)}\n              className=\"p-1 hover:bg-[#404040] rounded-full transition-colors\"\n            >\n              <svg\n                className=\"w-6 h-6 text-[#e1aa1e]\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                {isPlaying && currentAudio?.id === audio.id ? (\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                ) : (\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                )}\n              </svg>\n            </button>\n\n            {editingAudioId === audio.id ? (\n                    <input\n                type=\"text\"\n                value={editingTitle}\n                onChange={(e) => setEditingTitle(e.target.value)}\n                onBlur={() => {\n                  if (editingTitle.trim() && editingTitle !== audio.title) {\n                    handleUpdateTitle(audio.id, editingTitle);\n                  } else {\n                    setEditingAudioId(null);\n                  }\n                }}\n                      onKeyDown={(e) => {\n                        if (e.key === 'Enter') {\n                    if (editingTitle.trim() && editingTitle !== audio.title) {\n                      handleUpdateTitle(audio.id, editingTitle);\n                    } else {\n                      setEditingAudioId(null);\n                    }\n                  } else if (e.key === 'Escape') {\n                    setEditingAudioId(null);\n                  }\n                }}\n                className=\"flex-1 bg-[#1e1e1e] text-gray-200 px-2 py-1 rounded border border-[#404040] focus:border-[#e1aa1e] focus:outline-none\"\n                      autoFocus\n              />\n            ) : (\n              <div className=\"flex-1 flex items-center group\">\n                <div className=\"flex-1 flex items-center\">\n                <span \n                    className=\"truncate cursor-pointer hover:text-[#e1aa1e]\"\n                  onDoubleClick={() => {\n                    setEditingAudioId(audio.id);\n                    setEditingTitle(audio.title);\n                  }}\n                >\n                  {audio.title}\n                </span>\n                <button\n                  onClick={() => {\n                    setEditingAudioId(audio.id);\n                    setEditingTitle(audio.title);\n                  }}\n                    className=\"p-1 rounded-full hover:bg-[#404040] opacity-0 group-hover:opacity-100 transition-all ml-1\"\n                  title=\"Editar nome\"\n                >\n                  <svg\n                      className=\"w-4 h-4 text-[#e1aa1e]\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                    />\n                  </svg>\n                </button>\n                </div>\n              </div>\n            )}\n            \n            <div className=\"flex items-center gap-2 shrink-0\">\n                {audioTimers[audio.id] ? (\n                    <button\n                    onClick={(e) => {\n                      handleShowConfirmDialog(e, audio.id);\n                    }}\n                    className=\"flex items-center gap-1.5 px-2 py-1 rounded bg-[#e1aa1e]/10 text-[#e1aa1e] hover:bg-[#e1aa1e]/20 transition-colors\"\n                    title=\"Clique para desativar a repetição\"\n                  >\n                    <svg\n                      className=\"w-4 h-4\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                      />\n                    </svg>\n                    <span className=\"text-sm\">\n                      {formatTimeLeft(audioTimers[audio.id].timeLeft)}\n                    </span>\n                    </button>\n                ) : (\n                    <button\n                    onClick={(e) => {\n                      handleShowTimerDialog(e, audio.id);\n                    }}\n                    className=\"p-1.5 hover:bg-[#404040] rounded transition-colors text-gray-400 hover:text-[#e1aa1e]\"\n                    title=\"Ativar repetição automática\"\n                    >\n                      <svg\n                      className=\"w-4 h-4\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                        />\n                      </svg>\n                    </button>\n                )}\n\n              <button\n                onClick={(e) => {\n                  setDeletePosition({ x: e.currentTarget.getBoundingClientRect().x, y: e.currentTarget.getBoundingClientRect().y + 30 });\n                  setShowDeleteConfirm(audio.id);\n                }}\n                className=\"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\"\n                title=\"Excluir áudio\"\n              >\n                <svg\n                  className=\"w-5 h-5\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                  />\n                </svg>\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {showTimerDialog && (\n        <SetTimerDialog\n          audioId={showTimerDialog}\n          audioTitle={audios.find(a => a.id === showTimerDialog)?.title || ''}\n          onConfirm={(minutes) => {\n            startRepeatTimer(showTimerDialog, minutes);\n            setShowTimerDialog(null);\n            setPopupPosition(null);\n            setTimerInputValue('');\n          }}\n          onCancel={() => {\n            setShowTimerDialog(null);\n            setPopupPosition(null);\n            setTimerInputValue('');\n          }}\n          buttonPosition={popupPosition}\n          inputValue={timerInputValue}\n          onInputChange={setTimerInputValue}\n        />\n      )}\n\n      {showConfirmDialog && (\n        <ConfirmDialog\n          audioId={showConfirmDialog}\n          onConfirm={() => {\n            stopRepeatTimer(showConfirmDialog);\n            setShowConfirmDialog(null);\n            setConfirmPosition(null);\n          }}\n          onEdit={() => {\n            setShowConfirmDialog(null);\n            setConfirmPosition(null);\n            // Abre o diálogo de timer com a posição atual\n            setPopupPosition(confirmPosition);\n            setShowTimerDialog(showConfirmDialog);\n          }}\n          onCancel={() => {\n            setShowConfirmDialog(null);\n            setConfirmPosition(null);\n          }}\n          buttonPosition={confirmPosition}\n        />\n      )}\n\n      {showDeleteConfirm && (\n        <DeleteConfirmDialog\n          audioId={showDeleteConfirm}\n          onConfirm={() => {\n            handleDelete(showDeleteConfirm);\n            setShowDeleteConfirm(null);\n            setDeletePosition(null);\n          }}\n          onCancel={() => {\n            setShowDeleteConfirm(null);\n            setDeletePosition(null);\n          }}\n          buttonPosition={deletePosition}\n        />\n      )}\n    </div>\n    \n  );\n};\n\nexport default AudioPlayer; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,YAAY,QAAmB,iBAAiB;AACzD,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAelC,MAAMC,WAAuC,GAAGA,CAAC;EAAEC,OAAO;EAAEC,SAAS;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,kBAAA,EAAAC,kBAAA,EAAAC,YAAA;EACxF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAc,EAAE,CAAC;EACrD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAmB,IAAI,CAAC;EACxE,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMuB,QAAQ,GAAGrB,MAAM,CAAmB,IAAI,CAAC;EAC/C,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAA6B,CAAC,CAAC,CAAC;EAC9E,MAAM0B,SAAS,GAAGxB,MAAM,CAAiC,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG5B,QAAQ,CAAgB,IAAI,CAAC;EACrE,MAAM,CAAC6B,cAAc,EAAEC,iBAAiB,CAAC,GAAG9B,QAAQ,CAAgB,IAAI,CAAC;EACzE,MAAM,CAAC+B,aAAa,EAAEC,gBAAgB,CAAC,GAAGhC,QAAQ,CAAW,EAAE,CAAC;EAChE,MAAMiC,cAAc,GAAG/B,MAAM,CAAwB,IAAI,CAAC;EAC1D,MAAM,CAACgC,cAAc,EAAEC,iBAAiB,CAAC,GAAGnC,QAAQ,CAAgB,IAAI,CAAC;EACzE,MAAM,CAACoC,YAAY,EAAEC,eAAe,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACsC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvC,QAAQ,CAAgB,IAAI,CAAC;EAC/E,MAAM,CAACwC,eAAe,EAAEC,kBAAkB,CAAC,GAAGzC,QAAQ,CAAgB,IAAI,CAAC;EAC3E,MAAM,CAAC0C,aAAa,EAAEC,gBAAgB,CAAC,GAAG3C,QAAQ,CAAkC,IAAI,CAAC;EACzF,MAAM,CAAC4C,eAAe,EAAEC,kBAAkB,CAAC,GAAG7C,QAAQ,CAAkC,IAAI,CAAC;EAC7F,MAAM,CAAC8C,WAAW,EAAEC,cAAc,CAAC,GAAG/C,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgD,eAAe,EAAEC,kBAAkB,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACkD,WAAW,EAAEC,cAAc,CAAC,GAAGnD,QAAQ,CAK1C,CAAC,CAAC,CAAC;EACP,MAAM,CAACoD,YAAY,EAAEC,eAAe,CAAC,GAAGrD,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAMsD,iBAAiB,GAAG,CAAC;EAC3B,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGxD,QAAQ,CAAgB,IAAI,CAAC;EAC/E,MAAM,CAACyD,cAAc,EAAEC,iBAAiB,CAAC,GAAG1D,QAAQ,CAAkC,IAAI,CAAC;EAC3F,MAAM2D,SAAS,GAAGzD,MAAM,CAAoB,IAAI,CAAC;EACjD,MAAM0D,YAAY,GAAG1D,MAAM,CAAS,CAAC;EACrC,MAAM2D,eAAe,GAAG3D,MAAM,CAAe,CAAC;EAC9C,MAAM4D,WAAW,GAAG5D,MAAM,CAAe,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd8D,UAAU,CAAC,CAAC;IACZC,iBAAiB,CAAC,CAAC;IAEnB,OAAO,MAAM;MAAA,IAAAC,qBAAA;MACX,IAAIL,YAAY,CAACM,OAAO,EAAE;QACxBC,oBAAoB,CAACP,YAAY,CAACM,OAAO,CAAC;MAC5C;MACA,CAAAD,qBAAA,GAAAJ,eAAe,CAACK,OAAO,cAAAD,qBAAA,uBAAvBA,qBAAA,CAAyBG,KAAK,CAAC,CAAC;IAClC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMJ,iBAAiB,GAAGA,CAAA,KAAM;IAC9BH,eAAe,CAACK,OAAO,GAAG,KAAKG,MAAM,CAACC,YAAY,IAAKD,MAAM,CAASE,kBAAkB,EAAE,CAAC;IAC3FT,WAAW,CAACI,OAAO,GAAGL,eAAe,CAACK,OAAO,CAACM,cAAc,CAAC,CAAC;IAC9DV,WAAW,CAACI,OAAO,CAACO,OAAO,GAAG,GAAG;EACnC,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAI,CAACnD,QAAQ,CAAC2C,OAAO,IAAI,CAACL,eAAe,CAACK,OAAO,IAAI,CAACJ,WAAW,CAACI,OAAO,EAAE;IAE3E,MAAMS,MAAM,GAAGd,eAAe,CAACK,OAAO,CAACU,wBAAwB,CAACrD,QAAQ,CAAC2C,OAAO,CAAC;IACjFS,MAAM,CAACE,OAAO,CAACf,WAAW,CAACI,OAAO,CAAC;IACnCJ,WAAW,CAACI,OAAO,CAACW,OAAO,CAAChB,eAAe,CAACK,OAAO,CAACY,WAAW,CAAC;EAClE,CAAC;EAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAI,CAACpB,SAAS,CAACO,OAAO,IAAI,CAACJ,WAAW,CAACI,OAAO,EAAE;IAEhD,MAAMc,MAAM,GAAGrB,SAAS,CAACO,OAAO;IAChC,MAAMe,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;IACnC,IAAI,CAACD,GAAG,EAAE;IAEV,MAAME,YAAY,GAAGrB,WAAW,CAACI,OAAO,CAACkB,iBAAiB;IAC1D,MAAMC,SAAS,GAAG,IAAIC,UAAU,CAACH,YAAY,CAAC;IAE9C,MAAMI,IAAI,GAAGA,CAAA,KAAM;MACjB3B,YAAY,CAACM,OAAO,GAAGsB,qBAAqB,CAACD,IAAI,CAAC;MAClDzB,WAAW,CAACI,OAAO,CAAEuB,oBAAoB,CAACJ,SAAS,CAAC;;MAEpD;MACAJ,GAAG,CAACS,SAAS,GAAG,SAAS;MACzBT,GAAG,CAACU,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEX,MAAM,CAACY,KAAK,EAAEZ,MAAM,CAACa,MAAM,CAAC;;MAE/C;MACA,MAAMC,UAAU,GAAGd,MAAM,CAACY,KAAK,GAAGT,YAAY;MAC9C,MAAMY,OAAO,GAAGf,MAAM,CAACa,MAAM,GAAG,CAAC;MACjC,MAAMG,SAAS,GAAGhB,MAAM,CAACa,MAAM,GAAG,CAAC;;MAEnC;MACA,KAAK,IAAII,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG,CAAC,EAAEA,IAAI,EAAE,EAAE;QACnChB,GAAG,CAACiB,SAAS,CAAC,CAAC;QACfjB,GAAG,CAACkB,MAAM,CAAC,CAAC,EAAEJ,OAAO,CAAC;;QAEtB;QACA,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjB,YAAY,EAAEiB,CAAC,EAAE,EAAE;UACrC,MAAMC,CAAC,GAAGD,CAAC,GAAGN,UAAU;UACxB,MAAMQ,CAAC,GAAGjB,SAAS,CAACe,CAAC,CAAC,GAAG,KAAK;UAC9B,MAAMG,CAAC,GAAGR,OAAO,GAAGO,CAAC,GAAGN,SAAS,IAAI,CAAC,GAAGC,IAAI,GAAG,GAAG,CAAC;UAEpD,IAAIG,CAAC,KAAK,CAAC,EAAE;YACXnB,GAAG,CAACkB,MAAM,CAACE,CAAC,EAAEE,CAAC,CAAC;UAClB,CAAC,MAAM;YACLtB,GAAG,CAACuB,MAAM,CAACH,CAAC,EAAEE,CAAC,CAAC;UAClB;QACF;;QAEA;QACA,KAAK,IAAIH,CAAC,GAAGjB,YAAY,GAAG,CAAC,EAAEiB,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UAC1C,MAAMC,CAAC,GAAGD,CAAC,GAAGN,UAAU;UACxB,MAAMQ,CAAC,GAAGjB,SAAS,CAACe,CAAC,CAAC,GAAG,KAAK;UAC9B,MAAMG,CAAC,GAAGR,OAAO,GAAGO,CAAC,GAAGN,SAAS,IAAI,CAAC,GAAGC,IAAI,GAAG,GAAG,CAAC;UAEpDhB,GAAG,CAACuB,MAAM,CAACH,CAAC,EAAEE,CAAC,CAAC;QAClB;QAEAtB,GAAG,CAACwB,SAAS,CAAC,CAAC;;QAEf;QACA,MAAMC,KAAK,GAAGjG,SAAS,GAAI,GAAG,GAAGwF,IAAI,GAAG,IAAI,GAAI,GAAG;QACnD,MAAMU,QAAQ,GAAG1B,GAAG,CAAC2B,oBAAoB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE5B,MAAM,CAACa,MAAM,CAAC;QACjEc,QAAQ,CAACE,YAAY,CAAC,CAAC,EAAE,sBAAsBH,KAAK,GAAG,GAAG,GAAG,CAAC;QAC9DC,QAAQ,CAACE,YAAY,CAAC,GAAG,EAAE,sBAAsBH,KAAK,GAAG,CAAC;QAC1DC,QAAQ,CAACE,YAAY,CAAC,CAAC,EAAE,sBAAsBH,KAAK,GAAG,GAAG,GAAG,CAAC;QAE9DzB,GAAG,CAACS,SAAS,GAAGiB,QAAQ;QACxB1B,GAAG,CAAC6B,IAAI,CAAC,CAAC;;QAEV;QACA7B,GAAG,CAAC8B,WAAW,GAAG,sBAAsBL,KAAK,GAAG,CAAC,GAAG;QACpDzB,GAAG,CAAC+B,SAAS,GAAG,CAAC;QACjB/B,GAAG,CAACgC,MAAM,CAAC,CAAC;MACd;;MAEA;MACA,IAAIxG,SAAS,EAAE;QACb,MAAMyG,aAAa,GAAG,EAAE;QACxB,KAAK,IAAId,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGc,aAAa,EAAEd,CAAC,EAAE,EAAE;UACtC,MAAMC,CAAC,GAAGc,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGpC,MAAM,CAACY,KAAK;UACtC,MAAMW,CAAC,GAAGR,OAAO,GAAG,CAACoB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAIpC,MAAM,CAACa,MAAM;UACzD,MAAMwB,MAAM,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC;UAChC,MAAMV,KAAK,GAAGS,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;UAEjCnC,GAAG,CAACiB,SAAS,CAAC,CAAC;UACfjB,GAAG,CAACqC,GAAG,CAACjB,CAAC,EAAEE,CAAC,EAAEc,MAAM,EAAE,CAAC,EAAEF,IAAI,CAACI,EAAE,GAAG,CAAC,CAAC;UACrCtC,GAAG,CAACS,SAAS,GAAG,sBAAsBgB,KAAK,GAAG;UAC9CzB,GAAG,CAAC6B,IAAI,CAAC,CAAC;QACZ;MACF;;MAEA;MACA,MAAMU,YAAY,GAAGvC,GAAG,CAAC2B,oBAAoB,CAAC,CAAC,EAAEb,OAAO,GAAG,CAAC,EAAE,CAAC,EAAEA,OAAO,GAAG,CAAC,CAAC;MAC7EyB,YAAY,CAACX,YAAY,CAAC,CAAC,EAAE,uBAAuB,CAAC;MACrDW,YAAY,CAACX,YAAY,CAAC,GAAG,EAAE,sBAAsBpG,SAAS,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;MAC9E+G,YAAY,CAACX,YAAY,CAAC,CAAC,EAAE,uBAAuB,CAAC;MAErD5B,GAAG,CAACS,SAAS,GAAG8B,YAAY;MAC5BvC,GAAG,CAACU,QAAQ,CAAC,CAAC,EAAEI,OAAO,GAAG,CAAC,EAAEf,MAAM,CAACY,KAAK,EAAE,CAAC,CAAC;IAC/C,CAAC;IAEDL,IAAI,CAAC,CAAC;EACR,CAAC;EAEDtF,SAAS,CAAC,MAAM;IACd,IAAIQ,SAAS,EAAE;MAAA,IAAAgH,iBAAA;MACb,CAAAA,iBAAA,GAAAlG,QAAQ,CAAC2C,OAAO,cAAAuD,iBAAA,uBAAhBA,iBAAA,CAAkBC,IAAI,CAAC,CAAC;MACxB3C,OAAO,CAAC,CAAC;IACX,CAAC,MAAM;MAAA,IAAA4C,kBAAA;MACL,CAAAA,kBAAA,GAAApG,QAAQ,CAAC2C,OAAO,cAAAyD,kBAAA,uBAAhBA,kBAAA,CAAkBC,KAAK,CAAC,CAAC;MACzB,IAAIhE,YAAY,CAACM,OAAO,EAAE;QACxBC,oBAAoB,CAACP,YAAY,CAACM,OAAO,CAAC;MAC5C;IACF;EACF,CAAC,EAAE,CAACzD,SAAS,CAAC,CAAC;EAEfR,SAAS,CAAC,MAAM;IACd,MAAM4H,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI,CAACtG,QAAQ,CAAC2C,OAAO,EAAE;MAEvB,IAAI;QACF4D,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;QAC3C,MAAMxG,QAAQ,CAAC2C,OAAO,CAACwD,IAAI,CAAC,CAAC;QAC7BI,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;QACzC1D,MAAM,CAAC2D,aAAa,CAAC,IAAIC,KAAK,CAAC,WAAW,CAAC,CAAC;MAC9C,CAAC,CAAC,OAAOC,KAAc,EAAE;QACvBJ,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjD,IAAIA,KAAK,YAAYC,KAAK,IAAID,KAAK,CAACE,IAAI,KAAK,YAAY,EAAE;UACzD;UACA,IAAInG,cAAc,CAACiC,OAAO,EAAE;YAC1BmE,YAAY,CAACpG,cAAc,CAACiC,OAAO,CAAC;UACtC;;UAEA;UACAjC,cAAc,CAACiC,OAAO,GAAGoE,UAAU,CAAC,YAAY;YAC9C,IAAI;cAAA,IAAAC,kBAAA;cACFT,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;cAC/C,QAAAQ,kBAAA,GAAMhH,QAAQ,CAAC2C,OAAO,cAAAqE,kBAAA,uBAAhBA,kBAAA,CAAkBb,IAAI,CAAC,CAAC;cAC9BI,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;cAClD1D,MAAM,CAAC2D,aAAa,CAAC,IAAIC,KAAK,CAAC,WAAW,CAAC,CAAC;YAC9C,CAAC,CAAC,OAAOO,UAAU,EAAE;cACnBV,OAAO,CAACI,KAAK,CAAC,4BAA4B,EAAEM,UAAU,CAAC;cACvD9H,YAAY,CAAC,KAAK,CAAC;YACrB;UACF,CAAC,EAAE,GAAG,CAAC;QACT,CAAC,MAAM;UACLA,YAAY,CAAC,KAAK,CAAC;QACrB;MACF;IACF,CAAC;IAED,IAAIa,QAAQ,CAAC2C,OAAO,EAAE;MACpB,IAAIzD,SAAS,EAAE;QACb;QACA,IAAIwB,cAAc,CAACiC,OAAO,EAAE;UAC1BmE,YAAY,CAACpG,cAAc,CAACiC,OAAO,CAAC;UACpCjC,cAAc,CAACiC,OAAO,GAAG,IAAI;QAC/B;;QAEA;QACAjC,cAAc,CAACiC,OAAO,GAAGoE,UAAU,CAAC,MAAM;UACxCT,SAAS,CAAC,CAAC;QACb,CAAC,EAAE,GAAG,CAAC;MACT,CAAC,MAAM;QACL;QACA,IAAI5F,cAAc,CAACiC,OAAO,EAAE;UAC1BmE,YAAY,CAACpG,cAAc,CAACiC,OAAO,CAAC;UACpCjC,cAAc,CAACiC,OAAO,GAAG,IAAI;QAC/B;QACA3C,QAAQ,CAAC2C,OAAO,CAAC0D,KAAK,CAAC,CAAC;QACxBvD,MAAM,CAAC2D,aAAa,CAAC,IAAIC,KAAK,CAAC,WAAW,CAAC,CAAC;MAC9C;IACF;;IAEA;IACA,OAAO,MAAM;MACX,IAAIhG,cAAc,CAACiC,OAAO,EAAE;QAC1BmE,YAAY,CAACpG,cAAc,CAACiC,OAAO,CAAC;QACpCjC,cAAc,CAACiC,OAAO,GAAG,IAAI;MAC/B;IACF,CAAC;EACH,CAAC,EAAE,CAACzD,SAAS,CAAC,CAAC;EAEfR,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXwI,MAAM,CAACC,MAAM,CAAChH,SAAS,CAACwC,OAAO,CAAC,CAACyE,OAAO,CAACC,KAAK,IAAI;QAChDC,aAAa,CAACD,KAAK,CAAC;MACtB,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN3I,SAAS,CAAC,MAAM;IACd,IAAIsB,QAAQ,CAAC2C,OAAO,EAAE;MACpB3C,QAAQ,CAAC2C,OAAO,CAAC4E,OAAO,GAAG,MAAM;QAC/BhB,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;QAC7CgB,cAAc,CAAC,CAAC;MAClB,CAAC;MAEDxH,QAAQ,CAAC2C,OAAO,CAAC8E,YAAY,GAAG,MAAM;QACpC,IAAIvI,SAAS,EAAE;UAAA,IAAAwI,kBAAA;UACb,CAAAA,kBAAA,GAAA1H,QAAQ,CAAC2C,OAAO,cAAA+E,kBAAA,uBAAhBA,kBAAA,CAAkBvB,IAAI,CAAC,CAAC,CAACwB,KAAK,CAAChB,KAAK,IAAI;YACtCJ,OAAO,CAACI,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;YACnExH,YAAY,CAAC,KAAK,CAAC;UACrB,CAAC,CAAC;QACJ;MACF,CAAC;IACH;EACF,CAAC,EAAE,CAACa,QAAQ,CAAC2C,OAAO,CAAC,CAAC;EAEtBjE,SAAS,CAAC,MAAM;IACdwI,MAAM,CAACU,OAAO,CAAC3H,WAAW,CAAC,CAACmH,OAAO,CAAC,CAAC,CAACS,OAAO,EAAER,KAAK,CAAC,KAAK;MACxD,MAAMS,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;MAC9B,MAAMC,OAAO,GAAG,IAAIF,IAAI,CAACV,KAAK,CAACY,OAAO,CAAC,CAACC,OAAO,CAAC,CAAC;MACjD,MAAMC,QAAQ,GAAGvC,IAAI,CAACwC,GAAG,CAAC,CAAC,EAAExC,IAAI,CAACyC,KAAK,CAAC,CAACJ,OAAO,GAAGH,WAAW,IAAI,IAAI,CAAC,CAAC;MAExE,IAAIK,QAAQ,KAAK,CAAC,EAAE;QAClB5B,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;;QAE7D;QACA,MAAM8B,UAAU,GAAG,IAAIP,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGX,KAAK,CAACkB,QAAQ,GAAG,IAAI,CAAC,CAACC,WAAW,CAAC,CAAC;;QAE7E;QACA5J,YAAY,CAAC6J,iBAAiB,CAACZ,OAAO,EAAE;UACtCa,WAAW,EAAE,IAAI;UACjBC,eAAe,EAAE/C,IAAI,CAACyC,KAAK,CAAChB,KAAK,CAACkB,QAAQ,GAAG,EAAE,CAAC;UAChDK,YAAY,EAAEN;QAChB,CAAC,CAAC,CAACX,KAAK,CAAChB,KAAK,IAAI;UAChBJ,OAAO,CAACI,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;QAClE,CAAC,CAAC;;QAEF;QACAkC,kBAAkB,CAAChB,OAAO,EAAER,KAAK,CAACkB,QAAQ,CAAC;;QAE3C;QACA,MAAMO,KAAK,GAAGtJ,MAAM,CAACuJ,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKpB,OAAO,CAAC;QAChD,IAAIiB,KAAK,EAAE;UACT,IAAI,CAAC5J,SAAS,IAAK,CAAAQ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEuJ,EAAE,MAAKpB,OAAQ,EAAE;YAChD,MAAMqB,WAAW,GAAG,MAAAA,CAAOC,QAAQ,GAAG,CAAC,KAAoB;cACzD,IAAI;gBACFxJ,eAAe,CAACmJ,KAAK,CAAC;gBACtB,IAAI9I,QAAQ,CAAC2C,OAAO,EAAE;kBACpB3C,QAAQ,CAAC2C,OAAO,CAACmF,WAAW,GAAG,CAAC;kBAChC,MAAM9H,QAAQ,CAAC2C,OAAO,CAACwD,IAAI,CAAC,CAAC;kBAC7BhH,YAAY,CAAC,IAAI,CAAC;kBAClB2C,eAAe,CAAC,CAAC,CAAC;kBAClByE,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;gBAC3C;cACF,CAAC,CAAC,OAAOG,KAAK,EAAE;gBACdJ,OAAO,CAACI,KAAK,CAAC,uCAAuCwC,QAAQ,GAAG,CAAC,IAAI,EAAExC,KAAK,CAAC;gBAE7E,IAAIA,KAAK,YAAYC,KAAK,IAAID,KAAK,CAACE,IAAI,KAAK,YAAY,IAAIsC,QAAQ,GAAGpH,iBAAiB,EAAE;kBACzFwE,OAAO,CAACC,GAAG,CAAC,0CAA0C2C,QAAQ,GAAG,CAAC,GAAG,CAAC;kBACtErH,eAAe,CAACqH,QAAQ,GAAG,CAAC,CAAC;kBAE7B,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAItC,UAAU,CAACsC,OAAO,EAAE,GAAG,CAAC,CAAC;kBACtD,OAAOH,WAAW,CAACC,QAAQ,GAAG,CAAC,CAAC;gBAClC;gBAEA1I,gBAAgB,CAAC6I,IAAI,IACnBA,IAAI,CAACC,QAAQ,CAAC1B,OAAO,CAAC,GAAGyB,IAAI,GAAG,CAAC,GAAGA,IAAI,EAAEzB,OAAO,CACnD,CAAC;cACH;YACF,CAAC;YAEDqB,WAAW,CAAC,CAAC;UACf,CAAC,MAAM;YACLzI,gBAAgB,CAAC6I,IAAI,IAAI;cACvB,IAAIA,IAAI,CAACC,QAAQ,CAAC1B,OAAO,CAAC,EAAE,OAAOyB,IAAI;cACvC,OAAO,CAAC,GAAGA,IAAI,EAAEzB,OAAO,CAAC;YAC3B,CAAC,CAAC;UACJ;QACF;MACF;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC5H,WAAW,EAAET,MAAM,EAAEN,SAAS,EAAEQ,YAAY,CAAC,CAAC;EAElDhB,SAAS,CAAC,MAAM;IACd,MAAM8K,cAAc,GAAGC,WAAW,CAAC,MAAM;MACvCjK,MAAM,CAAC4H,OAAO,CAAC0B,KAAK,IAAI;QACtB,MAAMY,KAAK,GAAG/H,WAAW,CAACmH,KAAK,CAACG,EAAE,CAAC;QACnC,IAAIS,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEhB,WAAW,IAAIzI,WAAW,CAAC6I,KAAK,CAACG,EAAE,CAAC,EAAE;UAC/C,MAAM5B,KAAK,GAAGpH,WAAW,CAAC6I,KAAK,CAACG,EAAE,CAAC;UACnC,MAAMnB,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;UAC9B,MAAMC,OAAO,GAAG,IAAIF,IAAI,CAACV,KAAK,CAACY,OAAO,CAAC,CAACC,OAAO,CAAC,CAAC;UACjD,MAAMC,QAAQ,GAAGvC,IAAI,CAACwC,GAAG,CAAC,CAAC,EAAExC,IAAI,CAACyC,KAAK,CAAC,CAACJ,OAAO,GAAGH,WAAW,IAAI,IAAI,CAAC,CAAC;UAExE,IAAIK,QAAQ,KAAKd,KAAK,CAACc,QAAQ,EAAE;YAC/BjI,cAAc,CAACoJ,IAAI,KAAK;cACtB,GAAGA,IAAI;cACP,CAACR,KAAK,CAACG,EAAE,GAAG;gBACV,GAAG5B,KAAK;gBACRc;cACF;YACF,CAAC,CAAC,CAAC;UACL;QACF;MACF,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMb,aAAa,CAACkC,cAAc,CAAC;EAC5C,CAAC,EAAE,CAAChK,MAAM,EAAEmC,WAAW,EAAE1B,WAAW,CAAC,CAAC;EAEtC,MAAMuC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMmH,IAAI,GAAG,MAAM/K,YAAY,CAACgL,SAAS,CAAC,CAAC;MAC3CnK,SAAS,CAACkK,IAAI,CAAC;;MAEf;MACAA,IAAI,CAACvC,OAAO,CAAC0B,KAAK,IAAI;QACpBe,oBAAoB,CAACf,KAAK,CAACG,EAAE,CAAC;MAChC,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOtC,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAMkD,oBAAoB,GAAG,MAAOhC,OAAe,IAAK;IACtD,IAAI;MACF,MAAM6B,KAAK,GAAG,MAAM9K,YAAY,CAACkL,eAAe,CAACjC,OAAO,CAAC;MAEzD,IAAI6B,KAAK,CAAChB,WAAW,IAAIgB,KAAK,CAACd,YAAY,EAAE;QAC3C,MAAMX,OAAO,GAAG,IAAIF,IAAI,CAAC2B,KAAK,CAACd,YAAY,CAAC,CAACV,OAAO,CAAC,CAAC;QACtD,MAAMF,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;QACtB,MAAMG,QAAQ,GAAGvC,IAAI,CAACwC,GAAG,CAAC,CAAC,EAAExC,IAAI,CAACyC,KAAK,CAAC,CAACJ,OAAO,GAAGD,GAAG,IAAI,IAAI,CAAC,CAAC;QAEhE,IAAIG,QAAQ,GAAG,CAAC,EAAE;UAChB,MAAMI,QAAQ,GAAGmB,KAAK,CAACf,eAAe,GAAG,EAAE;;UAE3C;UACA,MAAMoB,cAAc,GAAGN,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC;;UAElD;UACAvJ,cAAc,CAACoJ,IAAI,KAAK;YACtB,GAAGA,IAAI;YACP,CAACzB,OAAO,GAAG;cACTU,QAAQ;cACRJ,QAAQ;cACR6B,UAAU,EAAED,cAAc;cAC1B9B,OAAO,EAAEyB,KAAK,CAACd;YACjB;UACF,CAAC,CAAC,CAAC;;UAEH;UACAC,kBAAkB,CAAChB,OAAO,EAAEU,QAAQ,EAAEmB,KAAK,CAACd,YAAY,CAAC;;UAEzD;UACAtB,aAAa,CAACyC,cAAc,CAAC;UAE7BxD,OAAO,CAACC,GAAG,CAAC,0BAA0BqB,OAAO,QAAQM,QAAQ,kBAAkBI,QAAQ,UAAU,CAAC;QACpG,CAAC,MAAM;UACL,MAAM3J,YAAY,CAAC6J,iBAAiB,CAACZ,OAAO,EAAE;YAC5Ca,WAAW,EAAE,KAAK;YAClBE,YAAY,EAAEqB,SAAS;YACvBtB,eAAe,EAAE;UACnB,CAAC,CAAC;QACJ;MACF;MAEA/G,cAAc,CAAC0H,IAAI,KAAK;QACtB,GAAGA,IAAI;QACP,CAACzB,OAAO,GAAG;UACTa,WAAW,EAAEgB,KAAK,CAAChB,WAAW,IAAI,KAAK;UACvCC,eAAe,EAAEe,KAAK,CAACf,eAAe,IAAI,CAAC;UAC3CuB,cAAc,EAAER,KAAK,CAACQ,cAAc;UACpCC,UAAU,EAAET,KAAK,CAACS,UAAU,IAAI;QAClC;MACF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOxD,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,MAAMyD,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIpK,QAAQ,CAAC2C,OAAO,EAAE;MACpB,MAAM/C,QAAQ,GAAII,QAAQ,CAAC2C,OAAO,CAACmF,WAAW,GAAG9H,QAAQ,CAAC2C,OAAO,CAAC0H,QAAQ,GAAI,GAAG;MACjFxK,WAAW,CAACD,QAAQ,CAAC;IACvB;EACF,CAAC;EAED,MAAM0K,mBAAmB,GAAIC,CAAmC,IAAK;IACnE,IAAIvK,QAAQ,CAAC2C,OAAO,EAAE;MACpB,MAAM6H,MAAM,GAAGD,CAAC,CAACE,aAAa,CAACC,qBAAqB,CAAC,CAAC;MACtD,MAAM5F,CAAC,GAAGyF,CAAC,CAACI,OAAO,GAAGH,MAAM,CAACI,IAAI;MACjC,MAAMvG,KAAK,GAAGmG,MAAM,CAACnG,KAAK;MAC1B,MAAMwG,UAAU,GAAG/F,CAAC,GAAGT,KAAK;MAC5BrE,QAAQ,CAAC2C,OAAO,CAACmF,WAAW,GAAG9H,QAAQ,CAAC2C,OAAO,CAAC0H,QAAQ,GAAGQ,UAAU;IACvE;EACF,CAAC;EAED,MAAMhC,kBAAkB,GAAGA,CAAChB,OAAe,EAAEU,QAAgB,EAAEuC,eAAwB,KAAK;IAC1F,MAAM7C,OAAO,GAAG6C,eAAe,IAAI,IAAI/C,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGO,QAAQ,GAAG,IAAI,CAAC,CAACC,WAAW,CAAC,CAAC;IAEvF,IAAIrI,SAAS,CAACwC,OAAO,CAACkF,OAAO,CAAC,EAAE;MAC9BP,aAAa,CAACnH,SAAS,CAACwC,OAAO,CAACkF,OAAO,CAAC,CAAC;IAC3C;IAEA,MAAMmC,UAAU,GAAGP,WAAW,CAAC,MAAM;MACnCvJ,cAAc,CAACoJ,IAAI,IAAI;QACrB,MAAMyB,YAAY,GAAGzB,IAAI,CAACzB,OAAO,CAAC;QAClC,IAAI,CAACkD,YAAY,EAAE,OAAOzB,IAAI;QAE9B,MAAMxB,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;QAC9B,MAAMgD,YAAY,GAAG,IAAIjD,IAAI,CAACgD,YAAY,CAAC9C,OAAO,CAAC,CAACC,OAAO,CAAC,CAAC;QAC7D,MAAM+C,WAAW,GAAGrF,IAAI,CAACwC,GAAG,CAAC,CAAC,EAAExC,IAAI,CAACyC,KAAK,CAAC,CAAC2C,YAAY,GAAGlD,WAAW,IAAI,IAAI,CAAC,CAAC;QAEhF,IAAImD,WAAW,KAAK,CAAC,EAAE;UACrB,OAAO3B,IAAI;QACb;QAEA,OAAO;UACL,GAAGA,IAAI;UACP,CAACzB,OAAO,GAAG;YACT,GAAGkD,YAAY;YACf5C,QAAQ,EAAE8C;UACZ;QACF,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;IAER/K,cAAc,CAACoJ,IAAI,KAAK;MACtB,GAAGA,IAAI;MACP,CAACzB,OAAO,GAAG;QACTU,QAAQ;QACRJ,QAAQ,EAAE2C,eAAe,GACvBlF,IAAI,CAACwC,GAAG,CAAC,CAAC,EAAExC,IAAI,CAACyC,KAAK,CAAC,CAAC,IAAIN,IAAI,CAAC+C,eAAe,CAAC,CAAC5C,OAAO,CAAC,CAAC,GAAGH,IAAI,CAACC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAClFO,QAAQ;QACVyB,UAAU;QACV/B;MACF;IACF,CAAC,CAAC,CAAC;IAEH9H,SAAS,CAACwC,OAAO,CAACkF,OAAO,CAAC,GAAGmC,UAAU;EACzC,CAAC;EAED,MAAMxC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjCjB,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;IAEpD,IAAI9F,cAAc,CAACiC,OAAO,EAAE;MAC1BmE,YAAY,CAACpG,cAAc,CAACiC,OAAO,CAAC;MACpCjC,cAAc,CAACiC,OAAO,GAAG,IAAI;IAC/B;IAEA,IAAI3C,QAAQ,CAAC2C,OAAO,EAAE;MACpB3C,QAAQ,CAAC2C,OAAO,CAACmF,WAAW,GAAG,CAAC;IAClC;IACAjI,WAAW,CAAC,CAAC,CAAC;;IAEd;IACA,IAAIW,aAAa,CAAC0K,MAAM,GAAG,CAAC,EAAE;MAC5B,MAAMC,WAAW,GAAG3K,aAAa,CAAC,CAAC,CAAC;MACpC,MAAM4K,SAAS,GAAG5L,MAAM,CAACuJ,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKkC,WAAW,CAAC;MACxD1K,gBAAgB,CAAC6I,IAAI,IAAIA,IAAI,CAAC+B,KAAK,CAAC,CAAC,CAAC,CAAC;MAEvC,IAAID,SAAS,EAAE;QACb,MAAMlC,WAAW,GAAG,MAAAA,CAAOC,QAAQ,GAAG,CAAC,KAAoB;UACzD,IAAI;YACF,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAItC,UAAU,CAACsC,OAAO,EAAE,GAAG,CAAC,CAAC;YACtD1J,eAAe,CAACyL,SAAS,CAAC;YAC1B,IAAIpL,QAAQ,CAAC2C,OAAO,EAAE;cACpB,MAAM3C,QAAQ,CAAC2C,OAAO,CAACwD,IAAI,CAAC,CAAC;cAC7BhH,YAAY,CAAC,IAAI,CAAC;cAClB2C,eAAe,CAAC,CAAC,CAAC;YACpB;UACF,CAAC,CAAC,OAAO6E,KAAK,EAAE;YACdJ,OAAO,CAACI,KAAK,CAAC,+CAA+CwC,QAAQ,GAAG,CAAC,IAAI,EAAExC,KAAK,CAAC;YAErF,IAAIA,KAAK,YAAYC,KAAK,IAAID,KAAK,CAACE,IAAI,KAAK,YAAY,IAAIsC,QAAQ,GAAGpH,iBAAiB,EAAE;cACzF,MAAM,IAAIqH,OAAO,CAACC,OAAO,IAAItC,UAAU,CAACsC,OAAO,EAAE,GAAG,CAAC,CAAC;cACtD,OAAOH,WAAW,CAACC,QAAQ,GAAG,CAAC,CAAC;YAClC;YAEAhK,YAAY,CAAC,KAAK,CAAC;YACnBF,OAAO,CAAC,CAAC;UACX;QACF,CAAC;QAEDiK,WAAW,CAAC,CAAC;MACf;IACF,CAAC,MAAM;MACL/J,YAAY,CAAC,KAAK,CAAC;MACnBF,OAAO,CAAC,CAAC;IACX;IAEA6D,MAAM,CAAC2D,aAAa,CAAC,IAAIC,KAAK,CAAC,WAAW,CAAC,CAAC;EAC9C,CAAC;EAED,MAAM4E,UAAU,GAAG,MAAOxC,KAAgB,IAAK;IAC7C,IAAI;MACF;MACA,IAAI,CAAApJ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEuJ,EAAE,MAAKH,KAAK,CAACG,EAAE,EAAE;QACjC;QACA,IAAI/J,SAAS,EAAE;UACbC,YAAY,CAAC,KAAK,CAAC;QACrB;;QAEA;QACAQ,eAAe,CAACmJ,KAAK,CAAC;;QAEtB;QACA/B,UAAU,CAAC,MAAM;UACf,IAAI/G,QAAQ,CAAC2C,OAAO,EAAE;YACpB3C,QAAQ,CAAC2C,OAAO,CAACmF,WAAW,GAAG,CAAC;YAChC9H,QAAQ,CAAC2C,OAAO,CAACwD,IAAI,CAAC,CAAC,CACpBoF,IAAI,CAAC,MAAM;cACVpM,YAAY,CAAC,IAAI,CAAC;cAClB2C,eAAe,CAAC,CAAC,CAAC;YACpB,CAAC,CAAC,CACD6F,KAAK,CAAChB,KAAK,IAAI;cACdJ,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;cACjDxH,YAAY,CAAC,KAAK,CAAC;YACrB,CAAC,CAAC;UACN;QACF,CAAC,EAAE,GAAG,CAAC;MACT,CAAC,MAAM;QACL;QACA,IAAID,SAAS,EAAE;UAAA,IAAAsM,kBAAA;UACb,CAAAA,kBAAA,GAAAxL,QAAQ,CAAC2C,OAAO,cAAA6I,kBAAA,uBAAhBA,kBAAA,CAAkBnF,KAAK,CAAC,CAAC;UACzBlH,YAAY,CAAC,KAAK,CAAC;QACrB,CAAC,MAAM;UAAA,IAAAsM,kBAAA;UACL,CAAAA,kBAAA,GAAAzL,QAAQ,CAAC2C,OAAO,cAAA8I,kBAAA,uBAAhBA,kBAAA,CAAkBtF,IAAI,CAAC,CAAC,CACrBoF,IAAI,CAAC,MAAM;YACVpM,YAAY,CAAC,IAAI,CAAC;YAClB2C,eAAe,CAAC,CAAC,CAAC;UACpB,CAAC,CAAC,CACD6F,KAAK,CAAChB,KAAK,IAAI;YACdJ,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;YACjDxH,YAAY,CAAC,KAAK,CAAC;UACrB,CAAC,CAAC;QACN;MACF;IACF,CAAC,CAAC,OAAOwH,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDxH,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMuM,YAAY,GAAG,MAAOC,KAA0C,IAAK;IAAA,IAAAC,mBAAA;IACzE,MAAMC,IAAI,IAAAD,mBAAA,GAAGD,KAAK,CAACG,MAAM,CAACC,KAAK,cAAAH,mBAAA,uBAAlBA,mBAAA,CAAqB,CAAC,CAAC;IACpC,IAAI,CAACC,IAAI,EAAE;IAEX9L,cAAc,CAAC,IAAI,CAAC;IACpB,IAAI;MACFwG,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEqF,IAAI,CAAChF,IAAI,CAAC;;MAEtD;MACA,MAAMmF,OAAO,GAAGH,IAAI,CAAChF,IAAI,CAACoF,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;MAC1C,MAAMC,QAAQ,GAAG,GAAGvG,IAAI,CAACC,MAAM,CAAC,CAAC,IAAImG,OAAO,EAAE;MAC9C,MAAMI,QAAQ,GAAG,UAAUD,QAAQ,EAAE;MAErC5F,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE4F,QAAQ,CAAC;MAEpD,MAAM;QAAEzC,IAAI,EAAE0C,UAAU;QAAE1F,KAAK,EAAE2F;MAAY,CAAC,GAAG,MAAMzN,QAAQ,CAAC0N,OAAO,CACpEC,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAACL,QAAQ,EAAEP,IAAI,CAAC;MAEzB,IAAIS,WAAW,EAAE;QACf/F,OAAO,CAACI,KAAK,CAAC,iBAAiB,EAAE2F,WAAW,CAAC;QAC7C,MAAMA,WAAW;MACnB;MAEA/F,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE6F,UAAU,CAAC;;MAE/C;MACA,MAAM;QAAE1C,IAAI,EAAE;UAAE+C;QAAU;MAAE,CAAC,GAAG7N,QAAQ,CAAC0N,OAAO,CAC7CC,IAAI,CAAC,OAAO,CAAC,CACbG,YAAY,CAACP,QAAQ,CAAC;MAEzB7F,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEkG,SAAS,CAAC;;MAE7C;MACA,MAAME,QAAQ,GAAG,MAAMhO,YAAY,CAACiO,QAAQ,CAAC;QAC3CC,KAAK,EAAEjB,IAAI,CAAChF,IAAI;QAChBkG,GAAG,EAAEL,SAAS;QACdhE,WAAW,EAAE,KAAK;QAClBC,eAAe,EAAE,CAAC;QAClBwB,UAAU,EAAE;MACd,CAAC,CAAC;MAEF5D,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEoG,QAAQ,CAAC;;MAEnD;MACA,MAAMpK,UAAU,CAAC,CAAC;;MAElB;MACA7C,eAAe,CAACiN,QAAQ,CAAC;;MAEzB;MACAjB,KAAK,CAACG,MAAM,CAACkB,KAAK,GAAG,EAAE;IAEzB,CAAC,CAAC,OAAOrG,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,SAAS;MACR5G,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,MAAMkN,gBAAgB,GAAG,MAAAA,CAAOpF,OAAe,EAAEqF,OAAe,KAAK;IACnE7M,eAAe,CAACwH,OAAO,CAAC;IACxB,MAAMsF,OAAO,GAAGD,OAAO,GAAG,EAAE;;IAE5B;IACArE,kBAAkB,CAAChB,OAAO,EAAEsF,OAAO,CAAC;;IAEpC;IACA,MAAMlF,OAAO,GAAG,IAAIF,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGmF,OAAO,GAAG,IAAI,CAAC,CAAC3E,WAAW,CAAC,CAAC;;IAEnE;IACA,IAAI;MACF,MAAMkB,KAAK,GAAG;QACZhB,WAAW,EAAE,IAAI;QACjBC,eAAe,EAAEuE,OAAO;QACxBtE,YAAY,EAAEX;MAChB,CAAC;MAED,MAAMrJ,YAAY,CAAC6J,iBAAiB,CAACZ,OAAO,EAAE6B,KAAK,CAAC;;MAEpD;MACA9H,cAAc,CAAC0H,IAAI,KAAK;QACtB,GAAGA,IAAI;QACP,CAACzB,OAAO,GAAG;UACT,GAAGyB,IAAI,CAACzB,OAAO,CAAC;UAChBa,WAAW,EAAE,IAAI;UACjBC,eAAe,EAAEuE;QACnB;MACF,CAAC,CAAC,CAAC;MAEH3G,OAAO,CAACC,GAAG,CAAC,oBAAoBqB,OAAO,qBAAqBqF,OAAO,KAAK,CAAC;IAC3E,CAAC,CAAC,OAAOvG,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAMyG,eAAe,GAAG,MAAOvF,OAAe,IAAK;IACjD;IACA,IAAI,CAAAnI,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEuJ,EAAE,MAAKpB,OAAO,IAAI3I,SAAS,EAAE;MAC7C;IACF;IAEA,IAAIiB,SAAS,CAACwC,OAAO,CAACkF,OAAO,CAAC,EAAE;MAC9BP,aAAa,CAACnH,SAAS,CAACwC,OAAO,CAACkF,OAAO,CAAC,CAAC;MACzC,OAAO1H,SAAS,CAACwC,OAAO,CAACkF,OAAO,CAAC;IACnC;IAEA3H,cAAc,CAACoJ,IAAI,IAAI;MACrB,MAAM+D,SAAS,GAAG;QAAE,GAAG/D;MAAK,CAAC;MAC7B,OAAO+D,SAAS,CAACxF,OAAO,CAAC;MACzB,OAAOwF,SAAS;IAClB,CAAC,CAAC;IAEF,IAAI;MACF,MAAM3D,KAAK,GAAG;QACZhB,WAAW,EAAE,KAAK;QAClBC,eAAe,EAAE,CAAC;QAClBC,YAAY,EAAEqB;MAChB,CAAC;MAED,MAAMrL,YAAY,CAAC6J,iBAAiB,CAACZ,OAAO,EAAE6B,KAAK,CAAC;;MAEpD;MACA9H,cAAc,CAAC0H,IAAI,KAAK;QACtB,GAAGA,IAAI;QACP,CAACzB,OAAO,GAAG;UACT,GAAGyB,IAAI,CAACzB,OAAO,CAAC;UAChBa,WAAW,EAAE,KAAK;UAClBC,eAAe,EAAE;QACnB;MACF,CAAC,CAAC,CAAC;MAEHpC,OAAO,CAACC,GAAG,CAAC,uBAAuBqB,OAAO,EAAE,CAAC;IAC/C,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAM2G,YAAY,GAAG,MAAOzF,OAAe,IAAK;IAC9C,IAAI;MAAA,IAAA0F,eAAA;MACF,MAAMC,aAAa,GAAGhO,MAAM,CAACuJ,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKpB,OAAO,CAAC;MACxD,IAAI,CAAC2F,aAAa,EAAE;MAEpB,MAAMC,OAAO,GAAGD,aAAa,CAACT,GAAG;MACjC,MAAMZ,QAAQ,IAAAoB,eAAA,GAAGE,OAAO,CAACxB,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,cAAAsB,eAAA,uBAA5BA,eAAA,CAA8BtB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAE5D,IAAIE,QAAQ,EAAE;QACZ5F,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE2F,QAAQ,CAAC;QAElD,IAAI;UACF;UACA,MAAM;YAAExF,KAAK,EAAE+G;UAAa,CAAC,GAAG,MAAM7O,QAAQ,CAAC0N,OAAO,CACnDC,IAAI,CAAC,OAAO,CAAC,CACbmB,MAAM,CAAC,CAAC,UAAUxB,QAAQ,EAAE,CAAC,CAAC;UAEjC,IAAIuB,YAAY,EAAE;YAChBnH,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAE+G,YAAY,CAAC;;YAEvD;YACA,MAAM,IAAItE,OAAO,CAACC,OAAO,IAAItC,UAAU,CAACsC,OAAO,EAAE,IAAI,CAAC,CAAC;;YAEvD;YACA,MAAMxK,QAAQ,CAAC0N,OAAO,CACnBC,IAAI,CAAC,OAAO,CAAC,CACbmB,MAAM,CAAC,CAAC,UAAUxB,QAAQ,EAAE,CAAC,CAAC;UACnC;;UAEA;UACA,MAAM;YAAExC,IAAI,EAAEoC;UAAM,CAAC,GAAG,MAAMlN,QAAQ,CAAC0N,OAAO,CAC3CC,IAAI,CAAC,OAAO,CAAC,CACboB,IAAI,CAAC,QAAQ,EAAE;YACdC,MAAM,EAAE1B;UACV,CAAC,CAAC;UAEJ5F,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEuF,KAAK,CAAC;QACjD,CAAC,CAAC,OAAO2B,YAAY,EAAE;UACrBnH,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAE+G,YAAY,CAAC;QACzD;MACF;;MAEA;MACA,MAAM9O,YAAY,CAACkP,WAAW,CAACjG,OAAO,CAAC;;MAEvC;MACA,IAAI,CAAAnI,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEuJ,EAAE,MAAKpB,OAAO,EAAE;QAChClI,eAAe,CAAC,IAAI,CAAC;QACrBR,YAAY,CAAC,KAAK,CAAC;MACrB;MAEA,IAAIc,WAAW,CAAC4H,OAAO,CAAC,EAAE;QACxB,MAAMuF,eAAe,CAACvF,OAAO,CAAC;MAChC;MAEAjG,cAAc,CAAC0H,IAAI,IAAI;QACrB,MAAMyE,QAAQ,GAAG;UAAE,GAAGzE;QAAK,CAAC;QAC5B,OAAOyE,QAAQ,CAAClG,OAAO,CAAC;QACxB,OAAOkG,QAAQ;MACjB,CAAC,CAAC;;MAEF;MACA,MAAM;QAAEpE,IAAI,EAAEqE;MAAa,CAAC,GAAG,MAAMnP,QAAQ,CAAC0N,OAAO,CAClDC,IAAI,CAAC,OAAO,CAAC,CACboB,IAAI,CAAC,QAAQ,CAAC;MAEjBrH,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEwH,YAAY,CAAC;;MAE1D;MACA,MAAMxL,UAAU,CAAC,CAAC;MAElB+D,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEqB,OAAO,CAAC;IACrD,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,IAAI;QACF,MAAMnE,UAAU,CAAC,CAAC;MACpB,CAAC,CAAC,OAAO+H,CAAC,EAAE;QACVhE,OAAO,CAACI,KAAK,CAAC,uCAAuC,EAAE4D,CAAC,CAAC;MAC3D;IACF;EACF,CAAC;EAED,MAAM0D,UAAU,GAAId,OAAe,IAAa;IAC9C,MAAMe,IAAI,GAAGtI,IAAI,CAACyC,KAAK,CAAC8E,OAAO,GAAG,EAAE,CAAC;IACrC,MAAMgB,IAAI,GAAGvI,IAAI,CAACyC,KAAK,CAAC8E,OAAO,GAAG,EAAE,CAAC;IACrC,OAAO,GAAGe,IAAI,IAAIC,IAAI,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EACtD,CAAC;;EAED;EACA,MAAMC,cAAc,GAAInB,OAAe,IAAa;IAClD,IAAIA,OAAO,GAAG,EAAE,EAAE;MAChB,OAAO,GAAGvH,IAAI,CAAC2I,IAAI,CAACpB,OAAO,CAAC,GAAG;IACjC;IACA,MAAMD,OAAO,GAAGtH,IAAI,CAACyC,KAAK,CAAC8E,OAAO,GAAG,EAAE,CAAC;IACxC,MAAMqB,gBAAgB,GAAG5I,IAAI,CAAC2I,IAAI,CAACpB,OAAO,GAAG,EAAE,CAAC;IAChD,OAAO,GAAGD,OAAO,OAAOsB,gBAAgB,GAAG;EAC7C,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACA,IAAIjO,aAAa,CAAC0K,MAAM,GAAG,CAAC,EAAE;MAC5B,MAAMC,WAAW,GAAG3K,aAAa,CAAC,CAAC,CAAC;MACpC,MAAM4K,SAAS,GAAG5L,MAAM,CAACuJ,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKkC,WAAW,CAAC;MACxD,MAAM9D,KAAK,GAAGpH,WAAW,CAACkL,WAAW,CAAC;MAEtC,OAAO;QAAEC,SAAS;QAAE/D;MAAM,CAAC;IAC7B;;IAEA;IACA,IAAIqH,kBAAkB,GAAG,IAAI;IAC7B,IAAIC,YAAY,GAAGC,QAAQ;IAE3B1H,MAAM,CAACU,OAAO,CAAC3H,WAAW,CAAC,CAACmH,OAAO,CAAC,CAAC,CAACS,OAAO,EAAER,KAAK,CAAC,KAAK;MACxD,IAAIA,KAAK,CAACc,QAAQ,GAAGwG,YAAY,EAAE;QACjC,MAAM7F,KAAK,GAAGtJ,MAAM,CAACuJ,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKpB,OAAO,CAAC;QAChD,IAAIiB,KAAK,EAAE;UACT4F,kBAAkB,GAAG;YACnBtD,SAAS,EAAEtC,KAAK;YAChBzB,KAAK,EAAEA;UACT,CAAC;UACDsH,YAAY,GAAGtH,KAAK,CAACc,QAAQ;QAC/B;MACF;IACF,CAAC,CAAC;IAEF,OAAOuG,kBAAkB;EAC3B,CAAC;EAED,MAAMG,iBAAiB,GAAG,MAAAA,CAAOhH,OAAe,EAAEiH,QAAgB,KAAK;IACrE,IAAI;MACF,MAAMlQ,YAAY,CAACmQ,WAAW,CAAClH,OAAO,EAAE;QAAEiF,KAAK,EAAEgC;MAAS,CAAC,CAAC;MAC5D;MACArP,SAAS,CAAC6J,IAAI,IAAIA,IAAI,CAAC0F,GAAG,CAAClG,KAAK,IAC9BA,KAAK,CAACG,EAAE,KAAKpB,OAAO,GAAG;QAAE,GAAGiB,KAAK;QAAEgE,KAAK,EAAEgC;MAAS,CAAC,GAAGhG,KACzD,CAAC,CAAC;MACF;MACA,IAAI,CAAApJ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEuJ,EAAE,MAAKpB,OAAO,EAAE;QAChClI,eAAe,CAAC2J,IAAI,IAAIA,IAAI,GAAG;UAAE,GAAGA,IAAI;UAAEwD,KAAK,EAAEgC;QAAS,CAAC,GAAG,IAAI,CAAC;MACrE;MACAlO,iBAAiB,CAAC,IAAI,CAAC;IACzB,CAAC,CAAC,OAAO+F,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMsI,aAAa,GAAGA,CAAC;IACrBpH,OAAO;IACPqH,SAAS;IACTC,MAAM;IACNC,QAAQ;IACRC;EAOF,CAAC,kBACCtQ,OAAA;IAAKuQ,SAAS,EAAC,oBAAoB;IAACC,OAAO,EAAGhF,CAAC,IAAK;MAClD,IAAIA,CAAC,CAACuB,MAAM,KAAKvB,CAAC,CAACE,aAAa,EAAE2E,QAAQ,CAAC,CAAC;IAC9C,CAAE;IAAAI,QAAA,eACAzQ,OAAA;MACEuQ,SAAS,EAAC,6EAA6E;MACvFG,KAAK,EAAE;QACLC,GAAG,EAAEL,cAAc,GAAG,GAAGA,cAAc,CAACrK,CAAC,GAAG,EAAE,IAAI,GAAG,KAAK;QAC1D4F,IAAI,EAAEyE,cAAc,GAAG,GAAGA,cAAc,CAACvK,CAAC,GAAG,GAAG,IAAI,GAAG,KAAK;QAC5D6K,SAAS,EAAEpO,WAAW,GAAG,YAAY,GAAG,UAAU;QAClDqO,OAAO,EAAErO,WAAW,GAAG,CAAC,GAAG,CAAC;QAC5BsO,UAAU,EAAE;MACd,CAAE;MAAAL,QAAA,gBAEFzQ,OAAA;QAAIuQ,SAAS,EAAC,yCAAyC;QAAAE,QAAA,EAAC;MAAmB;QAAArD,QAAA,EAAA2D,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChFjR,OAAA;QAAGuQ,SAAS,EAAC,4BAA4B;QAAAE,QAAA,EAAC;MAE1C;QAAArD,QAAA,EAAA2D,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJjR,OAAA;QAAKuQ,SAAS,EAAC,wBAAwB;QAAAE,QAAA,gBACrCzQ,OAAA;UACEwQ,OAAO,EAAEH,QAAS;UAClBE,SAAS,EAAC,6FAA6F;UAAAE,QAAA,EACxG;QAED;UAAArD,QAAA,EAAA2D,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTjR,OAAA;UACEwQ,OAAO,EAAEJ,MAAO;UAChBG,SAAS,EAAC,oGAAoG;UAAAE,QAAA,EAC/G;QAED;UAAArD,QAAA,EAAA2D,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTjR,OAAA;UACEwQ,OAAO,EAAEL,SAAU;UACnBI,SAAS,EAAC,gGAAgG;UAAAE,QAAA,EAC3G;QAED;UAAArD,QAAA,EAAA2D,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAA7D,QAAA,EAAA2D,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAA7D,QAAA,EAAA2D,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAA7D,QAAA,EAAA2D,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CACN;EAED,MAAMC,cAAc,GAAGA,CAAC;IACtBpI,OAAO;IACPqI,UAAU;IACVhB,SAAS;IACTE,QAAQ;IACRC,cAAc;IACdc,UAAU;IACVC;EASF,CAAC,KAAK;IACJ,oBACErR,OAAA;MAAKuQ,SAAS,EAAC,oBAAoB;MAACC,OAAO,EAAGhF,CAAC,IAAK;QAClD,IAAIA,CAAC,CAACuB,MAAM,KAAKvB,CAAC,CAACE,aAAa,EAAE2E,QAAQ,CAAC,CAAC;MAC9C,CAAE;MAAAI,QAAA,eACAzQ,OAAA;QACEuQ,SAAS,EAAC,6EAA6E;QACvFG,KAAK,EAAE;UACLC,GAAG,EAAEL,cAAc,GAAG,GAAGA,cAAc,CAACrK,CAAC,GAAG,EAAE,IAAI,GAAG,KAAK;UAC1D4F,IAAI,EAAEyE,cAAc,GAAG,GAAGA,cAAc,CAACvK,CAAC,GAAG,GAAG,IAAI,GAAG,KAAK;UAC5D6K,SAAS,EAAEpO,WAAW,GAAG,YAAY,GAAG,UAAU;UAClDqO,OAAO,EAAErO,WAAW,GAAG,CAAC,GAAG,CAAC;UAC5BsO,UAAU,EAAE;QACd,CAAE;QAAAL,QAAA,gBAEFzQ,OAAA;UAAIuQ,SAAS,EAAC,yCAAyC;UAAAE,QAAA,EAAC;QAAa;UAAArD,QAAA,EAAA2D,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1EjR,OAAA;UAAGuQ,SAAS,EAAC,qCAAqC;UAAAE,QAAA,EAC/CU;QAAU;UAAA/D,QAAA,EAAA2D,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eAEJjR,OAAA;UAAKuQ,SAAS,EAAC,eAAe;UAAAE,QAAA,gBAC5BzQ,OAAA;YACEsR,IAAI,EAAC,QAAQ;YACbC,GAAG,EAAC,GAAG;YACPtD,KAAK,EAAEmD,UAAW;YAClBI,QAAQ,EAAGhG,CAAC,IAAK6F,aAAa,CAAC7F,CAAC,CAACuB,MAAM,CAACkB,KAAK,CAAE;YAC/CwD,WAAW,EAAC,IAAI;YAChBlB,SAAS,EAAC,8PAA8P;YACxQmB,SAAS,EAAGlG,CAAC,IAAK;cAChB,IAAIA,CAAC,CAACmG,GAAG,KAAK,OAAO,EAAE;gBACrB,MAAM1D,KAAK,GAAG2D,QAAQ,CAACR,UAAU,CAAC;gBAClC,IAAInD,KAAK,GAAG,CAAC,EAAEkC,SAAS,CAAClC,KAAK,CAAC;cACjC,CAAC,MAAM,IAAIzC,CAAC,CAACmG,GAAG,KAAK,QAAQ,EAAE;gBAC7BtB,QAAQ,CAAC,CAAC;cACZ;YACF,CAAE;YACFwB,SAAS;UAAA;YAAAzE,QAAA,EAAA2D,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACFjR,OAAA;YAAMuQ,SAAS,EAAC,iEAAiE;YAAAE,QAAA,EAAC;UAElF;YAAArD,QAAA,EAAA2D,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAA7D,QAAA,EAAA2D,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAENjR,OAAA;UAAKuQ,SAAS,EAAC,wBAAwB;UAAAE,QAAA,gBACrCzQ,OAAA;YACEwQ,OAAO,EAAEH,QAAS;YAClBE,SAAS,EAAC,6FAA6F;YAAAE,QAAA,EACxG;UAED;YAAArD,QAAA,EAAA2D,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTjR,OAAA;YACEwQ,OAAO,EAAEA,CAAA,KAAM;cACb,MAAMvC,KAAK,GAAG2D,QAAQ,CAACR,UAAU,CAAC;cAClC,IAAInD,KAAK,GAAG,CAAC,EAAEkC,SAAS,CAAClC,KAAK,CAAC;YACjC,CAAE;YACF6D,QAAQ,EAAE,CAACV,UAAU,IAAIQ,QAAQ,CAACR,UAAU,CAAC,IAAI,CAAE;YACnDb,SAAS,EAAC,gJAAgJ;YAAAE,QAAA,EAC3J;UAED;YAAArD,QAAA,EAAA2D,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAA7D,QAAA,EAAA2D,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAA7D,QAAA,EAAA2D,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAA7D,QAAA,EAAA2D,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;EAED,MAAMc,qBAAqB,GAAGA,CAACvG,CAAmB,EAAE1C,OAAe,KAAK;IACtE,MAAMkJ,IAAI,GAAGxG,CAAC,CAACE,aAAa,CAACC,qBAAqB,CAAC,CAAC;IACpDtJ,gBAAgB,CAAC;MACf0D,CAAC,EAAEiM,IAAI,CAACnG,IAAI,GAAGmG,IAAI,CAAC1M,KAAK,GAAC,CAAC;MAC3BW,CAAC,EAAE+L,IAAI,CAACrB,GAAG,GAAGqB,IAAI,CAACzM,MAAM,GAAC;IAC5B,CAAC,CAAC;IACF9C,cAAc,CAAC,IAAI,CAAC;IACpBuF,UAAU,CAAC,MAAM;MACfvF,cAAc,CAAC,KAAK,CAAC;MACrBN,kBAAkB,CAAC2G,OAAO,CAAC;IAC7B,CAAC,EAAE,EAAE,CAAC;EACR,CAAC;EAED,MAAMmJ,uBAAuB,GAAGA,CAACzG,CAAmB,EAAE1C,OAAe,KAAK;IACxE,MAAMkJ,IAAI,GAAGxG,CAAC,CAACE,aAAa,CAACC,qBAAqB,CAAC,CAAC;IACpDpJ,kBAAkB,CAAC;MACjBwD,CAAC,EAAEiM,IAAI,CAACnG,IAAI,GAAGmG,IAAI,CAAC1M,KAAK,GAAC,CAAC;MAC3BW,CAAC,EAAE+L,IAAI,CAACrB,GAAG,GAAGqB,IAAI,CAACzM,MAAM,GAAC;IAC5B,CAAC,CAAC;IACF9C,cAAc,CAAC,IAAI,CAAC;IACpBuF,UAAU,CAAC,MAAM;MACfvF,cAAc,CAAC,KAAK,CAAC;MACrBR,oBAAoB,CAAC6G,OAAO,CAAC;IAC/B,CAAC,EAAE,EAAE,CAAC;EACR,CAAC;;EAED;EACAnJ,SAAS,CAAC,MAAM;IACd,MAAM+Q,KAAK,GAAGwB,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;IAC7CzB,KAAK,CAAC0B,SAAS,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA,KAAK;IACDF,QAAQ,CAACG,IAAI,CAACC,WAAW,CAAC5B,KAAK,CAAC;IAChC,OAAO,MAAMA,KAAK,CAAC9B,MAAM,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM2D,mBAAmB,GAAGA,CAAC;IAC3BzJ,OAAO;IACPqH,SAAS;IACTE,QAAQ;IACRC;EAMF,CAAC,kBACCtQ,OAAA;IAAKuQ,SAAS,EAAC,oBAAoB;IAACC,OAAO,EAAGhF,CAAC,IAAK;MAClD,IAAIA,CAAC,CAACuB,MAAM,KAAKvB,CAAC,CAACE,aAAa,EAAE2E,QAAQ,CAAC,CAAC;IAC9C,CAAE;IAAAI,QAAA,eACAzQ,OAAA;MACEuQ,SAAS,EAAC,6EAA6E;MACvFG,KAAK,EAAE;QACLC,GAAG,EAAEL,cAAc,GAAG,GAAGA,cAAc,CAACrK,CAAC,GAAG,EAAE,IAAI,GAAG,KAAK;QAC1D4F,IAAI,EAAEyE,cAAc,GAAG,GAAGA,cAAc,CAACvK,CAAC,GAAG,GAAG,IAAI,GAAG,KAAK;QAC5D6K,SAAS,EAAEpO,WAAW,GAAG,YAAY,GAAG,UAAU;QAClDqO,OAAO,EAAErO,WAAW,GAAG,CAAC,GAAG,CAAC;QAC5BsO,UAAU,EAAE;MACd,CAAE;MAAAL,QAAA,gBAEFzQ,OAAA;QAAIuQ,SAAS,EAAC,uCAAuC;QAAAE,QAAA,EAAC;MAAkB;QAAArD,QAAA,EAAA2D,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7EjR,OAAA;QAAGuQ,SAAS,EAAC,4BAA4B;QAAAE,QAAA,EAAC;MAE1C;QAAArD,QAAA,EAAA2D,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJjR,OAAA;QAAKuQ,SAAS,EAAC,wBAAwB;QAAAE,QAAA,gBACrCzQ,OAAA;UACEwQ,OAAO,EAAEH,QAAS;UAClBE,SAAS,EAAC,6FAA6F;UAAAE,QAAA,EACxG;QAED;UAAArD,QAAA,EAAA2D,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTjR,OAAA;UACEwQ,OAAO,EAAEL,SAAU;UACnBI,SAAS,EAAC,sFAAsF;UAAAE,QAAA,EACjG;QAED;UAAArD,QAAA,EAAA2D,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAA7D,QAAA,EAAA2D,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAA7D,QAAA,EAAA2D,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAA7D,QAAA,EAAA2D,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CACN;EAED,oBACEjR,OAAA;IAAKuQ,SAAS,EAAC,qDAAqD;IAAAE,QAAA,gBAElEzQ,OAAA;MAAKuQ,SAAS,EAAC,sEAAsE;MAAAE,QAAA,gBAEnFzQ,OAAA;QAAKuQ,SAAS,EAAC,+BAA+B;QAAAE,QAAA,eAC5CzQ,OAAA;UAAIuQ,SAAS,EAAC,wCAAwC;UAAAE,QAAA,EACnD,CAAA9P,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEoN,KAAK,KAAI;QAAoB;UAAAX,QAAA,EAAA2D,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C;MAAC;QAAA7D,QAAA,EAAA2D,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAGNjR,OAAA;QAAKuQ,SAAS,EAAC,eAAe;QAAAE,QAAA,gBAC5BzQ,OAAA;UACEwS,GAAG,EAAEnP,SAAU;UACfkN,SAAS,EAAC,gCAAgC;UAC1CjL,KAAK,EAAE,IAAK;UACZC,MAAM,EAAE;QAAI;UAAA6H,QAAA,EAAA2D,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC,eAGFjR,OAAA;UAAKuQ,SAAS,EAAC,mDAAmD;UAAAE,QAAA,eAChEzQ,OAAA;YACEwQ,OAAO,EAAEA,CAAA,KAAMpQ,YAAY,CAAC,CAACD,SAAS,CAAE;YACxCoQ,SAAS,EAAE;AACzB,kDAAkDpQ,SAAS,GAAG,eAAe,GAAG,EAAE,EAAG;YACvE2R,QAAQ,EAAE,CAACnR,YAAa;YAAA8P,QAAA,eAExBzQ,OAAA;cACEuQ,SAAS,EAAC,uBAAuB;cACjC/J,IAAI,EAAC,MAAM;cACXG,MAAM,EAAC,cAAc;cACrB8L,OAAO,EAAC,WAAW;cAAAhC,QAAA,EAElBtQ,SAAS,gBACRH,OAAA;gBACE0S,aAAa,EAAC,OAAO;gBACrBC,cAAc,EAAC,OAAO;gBACtBC,WAAW,EAAE,GAAI;gBACjBC,CAAC,EAAC;cAA+C;gBAAAzF,QAAA,EAAA2D,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClD,CAAC,gBAEFjR,OAAA;gBACE0S,aAAa,EAAC,OAAO;gBACrBC,cAAc,EAAC,OAAO;gBACtBC,WAAW,EAAE,GAAI;gBACjBC,CAAC,EAAC;cAAqI;gBAAAzF,QAAA,EAAA2D,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxI;YACF;cAAA7D,QAAA,EAAA2D,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAA7D,QAAA,EAAA2D,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;UAAA7D,QAAA,EAAA2D,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAA7D,QAAA,EAAA2D,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNjR,OAAA;QAAKuQ,SAAS,EAAC,qBAAqB;QAAAE,QAAA,gBAClCzQ,OAAA;UACEwS,GAAG,EAAEvR,QAAS;UACd6R,GAAG,EAAEnS,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEqN,GAAI;UACvB+E,YAAY,EAAE1H,gBAAiB;UAC/BnL,OAAO,EAAEuI,cAAe;UACxBuK,MAAM,EAAEA,CAAA,KAAM;YAAA,IAAAC,oBAAA;YACZ,IAAI,GAAAA,oBAAA,GAACzP,WAAW,CAACI,OAAO,cAAAqP,oBAAA,eAAnBA,oBAAA,CAAqBC,OAAO,CAACC,KAAK,GAAE;cACvC/O,kBAAkB,CAAC,CAAC;YACtB;YACAL,MAAM,CAAC2D,aAAa,CAAC,IAAIC,KAAK,CAAC,WAAW,CAAC,CAAC;UAC9C,CAAE;UACFyL,OAAO,EAAEA,CAAA,KAAMrP,MAAM,CAAC2D,aAAa,CAAC,IAAIC,KAAK,CAAC,WAAW,CAAC,CAAE;UAC5D4I,SAAS,EAAC;QAAQ;UAAAnD,QAAA,EAAA2D,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eAGFjR,OAAA;UACEuQ,SAAS,EAAC,mDAAmD;UAC7DC,OAAO,EAAEjF,mBAAoB;UAAAkF,QAAA,eAE7BzQ,OAAA;YACEuQ,SAAS,EAAC,kCAAkC;YAC5CG,KAAK,EAAE;cAAEpL,KAAK,EAAE,GAAGzE,QAAQ;YAAI;UAAE;YAAAuM,QAAA,EAAA2D,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC;QAAC;UAAA7D,QAAA,EAAA2D,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAGNjR,OAAA;UAAKuQ,SAAS,EAAC,iDAAiD;UAAAE,QAAA,gBAC9DzQ,OAAA;YAAAyQ,QAAA,EAAOvB,UAAU,CAAC,EAAA5O,kBAAA,GAAAW,QAAQ,CAAC2C,OAAO,cAAAtD,kBAAA,uBAAhBA,kBAAA,CAAkByI,WAAW,KAAI,CAAC;UAAC;YAAAqE,QAAA,EAAA2D,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7DjR,OAAA;YAAAyQ,QAAA,EAAOvB,UAAU,CAAC,EAAA3O,kBAAA,GAAAU,QAAQ,CAAC2C,OAAO,cAAArD,kBAAA,uBAAhBA,kBAAA,CAAkB+K,QAAQ,KAAI,CAAC;UAAC;YAAA8B,QAAA,EAAA2D,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAA7D,QAAA,EAAA2D,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC,EAGL,CAAC,MAAM;UACN,MAAMoC,QAAQ,GAAG3D,gBAAgB,CAAC,CAAC;UACnC,IAAI,EAAC2D,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEhH,SAAS,GAAE,OAAO,IAAI;UAErC,oBACErM,OAAA;YAAKuQ,SAAS,EAAC,kBAAkB;YAAAE,QAAA,eAC/BzQ,OAAA;cAAKuQ,SAAS,EAAC,sEAAsE;cAAAE,QAAA,gBACnFzQ,OAAA;gBAAKuQ,SAAS,EAAC,uBAAuB;gBAAAE,QAAA,GAAC,cAC5B,EAAC4C,QAAQ,CAAChH,SAAS,CAAC0B,KAAK;cAAA;gBAAAX,QAAA,EAAA2D,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/B,CAAC,EACLoC,QAAQ,CAAC/K,KAAK,iBACbtI,OAAA;gBAAKuQ,SAAS,EAAC,wBAAwB;gBAAAE,QAAA,GAAC,KACnC,EAAClB,cAAc,CAAC8D,QAAQ,CAAC/K,KAAK,CAACc,QAAQ,CAAC;cAAA;gBAAAgE,QAAA,EAAA2D,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxC,CACN;YAAA;cAAA7D,QAAA,EAAA2D,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAA7D,QAAA,EAAA2D,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAEV,CAAC,EAAE,CAAC;MAAA;QAAA7D,QAAA,EAAA2D,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAA7D,QAAA,EAAA2D,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNjR,OAAA;MAAKuQ,SAAS,EAAC,4FAA4F;MAAAE,QAAA,gBACzGzQ,OAAA;QAAKuQ,SAAS,EAAC,yBAAyB;QAAAE,QAAA,eACtCzQ,OAAA;UAAMuQ,SAAS,EAAC,4BAA4B;UAAAE,QAAA,EAAC;QAAe;UAAArD,QAAA,EAAA2D,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAA7D,QAAA,EAAA2D,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,eAGNjR,OAAA;QAAKuQ,SAAS,EAAC,mBAAmB;QAAAE,QAAA,eAChCzQ,OAAA;UAAOuQ,SAAS,EAAC,+GAA+G;UAAAE,QAAA,GAC7H1P,WAAW,GAAG,aAAa,GAAG,cAAc,eAC7Cf,OAAA;YACEsR,IAAI,EAAC,MAAM;YACXf,SAAS,EAAC,QAAQ;YAClB+C,MAAM,EAAC,SAAS;YAChB9B,QAAQ,EAAE7E,YAAa;YACvBmF,QAAQ,EAAE/Q;UAAY;YAAAqM,QAAA,EAAA2D,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC;QAAA;UAAA7D,QAAA,EAAA2D,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAA7D,QAAA,EAAA2D,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAA7D,QAAA,EAAA2D,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNjR,OAAA;MAAKuQ,SAAS,EAAC,yCAAyC;MAAAE,QAAA,gBACtDzQ,OAAA;QAAKuQ,SAAS,EAAC,wCAAwC;QAAAE,QAAA,EAAC;MAExD;QAAArD,QAAA,EAAA2D,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAELxQ,MAAM,CAACwP,GAAG,CAAElG,KAAK,iBAChB/J,OAAA;QAEEuQ,SAAS,EAAC,uGAAuG;QAAAE,QAAA,gBAEjHzQ,OAAA;UACEwQ,OAAO,EAAEA,CAAA,KAAMjE,UAAU,CAACxC,KAAK,CAAE;UACjCwG,SAAS,EAAC,uDAAuD;UAAAE,QAAA,eAEjEzQ,OAAA;YACEuQ,SAAS,EAAC,wBAAwB;YAClC/J,IAAI,EAAC,MAAM;YACXG,MAAM,EAAC,cAAc;YACrB8L,OAAO,EAAC,WAAW;YAAAhC,QAAA,EAElBtQ,SAAS,IAAI,CAAAQ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEuJ,EAAE,MAAKH,KAAK,CAACG,EAAE,gBACzClK,OAAA;cACE0S,aAAa,EAAC,OAAO;cACrBC,cAAc,EAAC,OAAO;cACtBC,WAAW,EAAE,CAAE;cACfC,CAAC,EAAC;YAA+C;cAAAzF,QAAA,EAAA2D,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC,gBAEFjR,OAAA;cACE0S,aAAa,EAAC,OAAO;cACrBC,cAAc,EAAC,OAAO;cACtBC,WAAW,EAAE,CAAE;cACfC,CAAC,EAAC;YAAqI;cAAAzF,QAAA,EAAA2D,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxI;UACF;YAAA7D,QAAA,EAAA2D,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAA7D,QAAA,EAAA2D,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,EAERrP,cAAc,KAAKmI,KAAK,CAACG,EAAE,gBACpBlK,OAAA;UACJsR,IAAI,EAAC,MAAM;UACXrD,KAAK,EAAEnM,YAAa;UACpB0P,QAAQ,EAAGhG,CAAC,IAAKzJ,eAAe,CAACyJ,CAAC,CAACuB,MAAM,CAACkB,KAAK,CAAE;UACjDsF,MAAM,EAAEA,CAAA,KAAM;YACZ,IAAIzR,YAAY,CAAC0R,IAAI,CAAC,CAAC,IAAI1R,YAAY,KAAKiI,KAAK,CAACgE,KAAK,EAAE;cACvD+B,iBAAiB,CAAC/F,KAAK,CAACG,EAAE,EAAEpI,YAAY,CAAC;YAC3C,CAAC,MAAM;cACLD,iBAAiB,CAAC,IAAI,CAAC;YACzB;UACF,CAAE;UACI6P,SAAS,EAAGlG,CAAC,IAAK;YAChB,IAAIA,CAAC,CAACmG,GAAG,KAAK,OAAO,EAAE;cAC3B,IAAI7P,YAAY,CAAC0R,IAAI,CAAC,CAAC,IAAI1R,YAAY,KAAKiI,KAAK,CAACgE,KAAK,EAAE;gBACvD+B,iBAAiB,CAAC/F,KAAK,CAACG,EAAE,EAAEpI,YAAY,CAAC;cAC3C,CAAC,MAAM;gBACLD,iBAAiB,CAAC,IAAI,CAAC;cACzB;YACF,CAAC,MAAM,IAAI2J,CAAC,CAACmG,GAAG,KAAK,QAAQ,EAAE;cAC7B9P,iBAAiB,CAAC,IAAI,CAAC;YACzB;UACF,CAAE;UACF0O,SAAS,EAAC,uHAAuH;UAC3HsB,SAAS;QAAA;UAAAzE,QAAA,EAAA2D,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,gBAEFjR,OAAA;UAAKuQ,SAAS,EAAC,gCAAgC;UAAAE,QAAA,eAC7CzQ,OAAA;YAAKuQ,SAAS,EAAC,0BAA0B;YAAAE,QAAA,gBACzCzQ,OAAA;cACIuQ,SAAS,EAAC,8CAA8C;cAC1DkD,aAAa,EAAEA,CAAA,KAAM;gBACnB5R,iBAAiB,CAACkI,KAAK,CAACG,EAAE,CAAC;gBAC3BnI,eAAe,CAACgI,KAAK,CAACgE,KAAK,CAAC;cAC9B,CAAE;cAAA0C,QAAA,EAED1G,KAAK,CAACgE;YAAK;cAAAX,QAAA,EAAA2D,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC,eACPjR,OAAA;cACEwQ,OAAO,EAAEA,CAAA,KAAM;gBACb3O,iBAAiB,CAACkI,KAAK,CAACG,EAAE,CAAC;gBAC3BnI,eAAe,CAACgI,KAAK,CAACgE,KAAK,CAAC;cAC9B,CAAE;cACAwC,SAAS,EAAC,2FAA2F;cACvGxC,KAAK,EAAC,aAAa;cAAA0C,QAAA,eAEnBzQ,OAAA;gBACIuQ,SAAS,EAAC,wBAAwB;gBACpC/J,IAAI,EAAC,MAAM;gBACXG,MAAM,EAAC,cAAc;gBACrB8L,OAAO,EAAC,WAAW;gBAAAhC,QAAA,eAEnBzQ,OAAA;kBACE0S,aAAa,EAAC,OAAO;kBACrBC,cAAc,EAAC,OAAO;kBACtBC,WAAW,EAAE,CAAE;kBACfC,CAAC,EAAC;gBAAwH;kBAAAzF,QAAA,EAAA2D,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3H;cAAC;gBAAA7D,QAAA,EAAA2D,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC;YAAC;cAAA7D,QAAA,EAAA2D,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAA7D,QAAA,EAAA2D,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ;QAAC;UAAA7D,QAAA,EAAA2D,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,eAEDjR,OAAA;UAAKuQ,SAAS,EAAC,kCAAkC;UAAAE,QAAA,GAC5CvP,WAAW,CAAC6I,KAAK,CAACG,EAAE,CAAC,gBAClBlK,OAAA;YACAwQ,OAAO,EAAGhF,CAAC,IAAK;cACdyG,uBAAuB,CAACzG,CAAC,EAAEzB,KAAK,CAACG,EAAE,CAAC;YACtC,CAAE;YACFqG,SAAS,EAAC,oHAAoH;YAC9HxC,KAAK,EAAC,yCAAmC;YAAA0C,QAAA,gBAEzCzQ,OAAA;cACEuQ,SAAS,EAAC,SAAS;cACnB/J,IAAI,EAAC,MAAM;cACXG,MAAM,EAAC,cAAc;cACrB8L,OAAO,EAAC,WAAW;cAAAhC,QAAA,eAEnBzQ,OAAA;gBACE0S,aAAa,EAAC,OAAO;gBACrBC,cAAc,EAAC,OAAO;gBACtBC,WAAW,EAAE,CAAE;gBACfC,CAAC,EAAC;cAA6G;gBAAAzF,QAAA,EAAA2D,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChH;YAAC;cAAA7D,QAAA,EAAA2D,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACNjR,OAAA;cAAMuQ,SAAS,EAAC,SAAS;cAAAE,QAAA,EACtBlB,cAAc,CAACrO,WAAW,CAAC6I,KAAK,CAACG,EAAE,CAAC,CAACd,QAAQ;YAAC;cAAAgE,QAAA,EAAA2D,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C,CAAC;UAAA;YAAA7D,QAAA,EAAA2D,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,gBAETjR,OAAA;YACAwQ,OAAO,EAAGhF,CAAC,IAAK;cACduG,qBAAqB,CAACvG,CAAC,EAAEzB,KAAK,CAACG,EAAE,CAAC;YACpC,CAAE;YACFqG,SAAS,EAAC,uFAAuF;YACjGxC,KAAK,EAAC,sCAA6B;YAAA0C,QAAA,eAEjCzQ,OAAA;cACAuQ,SAAS,EAAC,SAAS;cACjB/J,IAAI,EAAC,MAAM;cACXG,MAAM,EAAC,cAAc;cACrB8L,OAAO,EAAC,WAAW;cAAAhC,QAAA,eAEnBzQ,OAAA;gBACE0S,aAAa,EAAC,OAAO;gBACrBC,cAAc,EAAC,OAAO;gBACtBC,WAAW,EAAE,CAAE;gBACfC,CAAC,EAAC;cAA6G;gBAAAzF,QAAA,EAAA2D,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChH;YAAC;cAAA7D,QAAA,EAAA2D,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UAAC;YAAA7D,QAAA,EAAA2D,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CACX,eAEHjR,OAAA;YACEwQ,OAAO,EAAGhF,CAAC,IAAK;cACdpI,iBAAiB,CAAC;gBAAE2C,CAAC,EAAEyF,CAAC,CAACE,aAAa,CAACC,qBAAqB,CAAC,CAAC,CAAC5F,CAAC;gBAAEE,CAAC,EAAEuF,CAAC,CAACE,aAAa,CAACC,qBAAqB,CAAC,CAAC,CAAC1F,CAAC,GAAG;cAAG,CAAC,CAAC;cACtH/C,oBAAoB,CAAC6G,KAAK,CAACG,EAAE,CAAC;YAChC,CAAE;YACFqG,SAAS,EAAC,uFAAuF;YACjGxC,KAAK,EAAC,kBAAe;YAAA0C,QAAA,eAErBzQ,OAAA;cACEuQ,SAAS,EAAC,SAAS;cACnB/J,IAAI,EAAC,MAAM;cACXG,MAAM,EAAC,cAAc;cACrB8L,OAAO,EAAC,WAAW;cAAAhC,QAAA,eAEnBzQ,OAAA;gBACE0S,aAAa,EAAC,OAAO;gBACrBC,cAAc,EAAC,OAAO;gBACtBC,WAAW,EAAE,CAAE;gBACfC,CAAC,EAAC;cAA8H;gBAAAzF,QAAA,EAAA2D,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjI;YAAC;cAAA7D,QAAA,EAAA2D,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UAAC;YAAA7D,QAAA,EAAA2D,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAA7D,QAAA,EAAA2D,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA,GAvKDlH,KAAK,CAACG,EAAE;QAAAkD,QAAA,EAAA2D,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAwKV,CACN,CAAC;IAAA;MAAA7D,QAAA,EAAA2D,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAEL/O,eAAe,iBACdlC,OAAA,CAACkR,cAAc;MACbpI,OAAO,EAAE5G,eAAgB;MACzBiP,UAAU,EAAE,EAAA3Q,YAAA,GAAAC,MAAM,CAACuJ,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKhI,eAAe,CAAC,cAAA1B,YAAA,uBAA1CA,YAAA,CAA4CuN,KAAK,KAAI,EAAG;MACpEoC,SAAS,EAAGhC,OAAO,IAAK;QACtBD,gBAAgB,CAAChM,eAAe,EAAEiM,OAAO,CAAC;QAC1ChM,kBAAkB,CAAC,IAAI,CAAC;QACxBE,gBAAgB,CAAC,IAAI,CAAC;QACtBM,kBAAkB,CAAC,EAAE,CAAC;MACxB,CAAE;MACF0N,QAAQ,EAAEA,CAAA,KAAM;QACdlO,kBAAkB,CAAC,IAAI,CAAC;QACxBE,gBAAgB,CAAC,IAAI,CAAC;QACtBM,kBAAkB,CAAC,EAAE,CAAC;MACxB,CAAE;MACF2N,cAAc,EAAElO,aAAc;MAC9BgP,UAAU,EAAE1O,eAAgB;MAC5B2O,aAAa,EAAE1O;IAAmB;MAAAyK,QAAA,EAAA2D,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CACF,EAEAjP,iBAAiB,iBAChBhC,OAAA,CAACkQ,aAAa;MACZpH,OAAO,EAAE9G,iBAAkB;MAC3BmO,SAAS,EAAEA,CAAA,KAAM;QACf9B,eAAe,CAACrM,iBAAiB,CAAC;QAClCC,oBAAoB,CAAC,IAAI,CAAC;QAC1BM,kBAAkB,CAAC,IAAI,CAAC;MAC1B,CAAE;MACF6N,MAAM,EAAEA,CAAA,KAAM;QACZnO,oBAAoB,CAAC,IAAI,CAAC;QAC1BM,kBAAkB,CAAC,IAAI,CAAC;QACxB;QACAF,gBAAgB,CAACC,eAAe,CAAC;QACjCH,kBAAkB,CAACH,iBAAiB,CAAC;MACvC,CAAE;MACFqO,QAAQ,EAAEA,CAAA,KAAM;QACdpO,oBAAoB,CAAC,IAAI,CAAC;QAC1BM,kBAAkB,CAAC,IAAI,CAAC;MAC1B,CAAE;MACF+N,cAAc,EAAEhO;IAAgB;MAAA8K,QAAA,EAAA2D,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CACF,EAEAhO,iBAAiB,iBAChBjD,OAAA,CAACuS,mBAAmB;MAClBzJ,OAAO,EAAE7F,iBAAkB;MAC3BkN,SAAS,EAAEA,CAAA,KAAM;QACf5B,YAAY,CAACtL,iBAAiB,CAAC;QAC/BC,oBAAoB,CAAC,IAAI,CAAC;QAC1BE,iBAAiB,CAAC,IAAI,CAAC;MACzB,CAAE;MACFiN,QAAQ,EAAEA,CAAA,KAAM;QACdnN,oBAAoB,CAAC,IAAI,CAAC;QAC1BE,iBAAiB,CAAC,IAAI,CAAC;MACzB,CAAE;MACFkN,cAAc,EAAEnN;IAAe;MAAAiK,QAAA,EAAA2D,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CACF;EAAA;IAAA7D,QAAA,EAAA2D,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAGV,CAAC;AAAC5Q,EAAA,CA97CIJ,WAAuC;AAAAyT,EAAA,GAAvCzT,WAAuC;AAg8C7C,eAAeA,WAAW;AAAC,IAAAyT,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}