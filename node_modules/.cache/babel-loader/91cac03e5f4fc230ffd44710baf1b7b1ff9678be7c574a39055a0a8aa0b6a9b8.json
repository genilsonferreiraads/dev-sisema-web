{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genil\\\\Desktop\\\\Dev Sistema academia\\\\src\\\\components\\\\VideoPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { videoService } from '../lib/supabase';\nimport VideoSidebar from './VideoSidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = ({\n  onEnded,\n  isPlaying,\n  setIsPlaying,\n  pendingVideoId\n}) => {\n  _s();\n  var _videos$, _videos$2, _videos$3;\n  const [newVideoUrl, setNewVideoUrl] = useState('');\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [player, setPlayer] = useState(null);\n  const [isPlayerReady, setIsPlayerReady] = useState(false);\n\n  // Definir constantes para os estados do player\n  const PlayerState = {\n    ENDED: 0,\n    PLAYING: 1,\n    PAUSED: 2,\n    BUFFERING: 3,\n    CUED: 5\n  };\n\n  // Carregar vídeos ao montar o componente\n  useEffect(() => {\n    loadVideos();\n  }, []);\n  const loadVideos = async () => {\n    try {\n      const data = await videoService.getVideos();\n      setVideos(data);\n      if (data.length > 0 && !selectedVideo) {\n        setSelectedVideo(data[0]);\n      }\n    } catch (error) {\n      console.error('Erro ao carregar vídeos:', error);\n    }\n  };\n  const loadYouTubeAPI = () => {\n    return new Promise(resolve => {\n      var _firstScriptTag$paren;\n      const existingScript = document.querySelector('script[src=\"https://www.youtube.com/iframe_api\"]');\n      if (existingScript) {\n        if (window.YT && window.YT.Player) {\n          resolve();\n          return;\n        }\n      }\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n      tag.async = true;\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      (_firstScriptTag$paren = firstScriptTag.parentNode) === null || _firstScriptTag$paren === void 0 ? void 0 : _firstScriptTag$paren.insertBefore(tag, firstScriptTag);\n      window.onYouTubeIframeAPIReady = () => {\n        resolve();\n      };\n    });\n  };\n  const initializePlayer = async () => {\n    try {\n      var _YT;\n      await loadYouTubeAPI();\n      await new Promise(resolve => setTimeout(resolve, 100));\n      if (!((_YT = window.YT) !== null && _YT !== void 0 && _YT.Player)) return;\n      const iframe = document.querySelector('#youtube-player');\n      if (!iframe || player) return;\n      try {\n        const newPlayer = new window.YT.Player('youtube-player', {\n          events: {\n            onReady: event => {\n              setPlayer(event.target);\n              setIsPlayerReady(true);\n              event.target.setVolume(100);\n            },\n            onStateChange: handleStateChange,\n            onError: () => {\n              // Silenciosamente lida com o erro\n            }\n          },\n          playerVars: {\n            enablejsapi: 1,\n            origin: window.location.origin,\n            widget_referrer: window.location.origin,\n            playsinline: 1,\n            controls: 1,\n            rel: 0,\n            modestbranding: 1,\n            autoplay: 0\n          }\n        });\n      } catch (error) {\n        // Silenciosamente lida com o erro\n      }\n    } catch (error) {\n      // Silenciosamente lida com o erro\n    }\n  };\n  useEffect(() => {\n    initializePlayer();\n    return () => {\n      if (player) {\n        player.destroy();\n      }\n      delete window.onYouTubeIframeAPIReady;\n    };\n  }, []);\n\n  // Função para converter URL do YouTube em formato embed\n  const getEmbedUrl = url => {\n    console.log('URL original:', url);\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        var _url$split$, _url$split$2;\n        const videoId = url.includes('youtube.com') ? (_url$split$ = url.split('v=')[1]) === null || _url$split$ === void 0 ? void 0 : _url$split$.split('&')[0] : (_url$split$2 = url.split('youtu.be/')[1]) === null || _url$split$2 === void 0 ? void 0 : _url$split$2.split('?')[0];\n        const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      if (url.includes('vimeo.com')) {\n        var _url$split$3;\n        const videoId = (_url$split$3 = url.split('vimeo.com/')[1]) === null || _url$split$3 === void 0 ? void 0 : _url$split$3.split('?')[0];\n        const embedUrl = `https://player.vimeo.com/video/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      return url;\n    } catch (error) {\n      console.error('Erro ao processar URL:', error);\n      return url;\n    }\n  };\n\n  // Função para extrair título do vídeo do YouTube\n  const getVideoTitle = async url => {\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        var _url$split$4, _url$split$5, _data$items$, _data$items$$snippet;\n        const videoId = url.includes('youtube.com') ? (_url$split$4 = url.split('v=')[1]) === null || _url$split$4 === void 0 ? void 0 : _url$split$4.split('&')[0] : (_url$split$5 = url.split('youtu.be/')[1]) === null || _url$split$5 === void 0 ? void 0 : _url$split$5.split('?')[0];\n        const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=AIzaSyAyTc_jYQSVM_3kg95t8ai3CWckZGG0v4c&part=snippet`);\n        const data = await response.json();\n        if (data.error) {\n          console.error('Erro da API do YouTube:', data.error);\n          return 'Vídeo do YouTube';\n        }\n        return ((_data$items$ = data.items[0]) === null || _data$items$ === void 0 ? void 0 : (_data$items$$snippet = _data$items$.snippet) === null || _data$items$$snippet === void 0 ? void 0 : _data$items$$snippet.title) || 'Vídeo do YouTube';\n      }\n      if (url.includes('vimeo.com')) {\n        var _url$split$6, _data$;\n        const videoId = (_url$split$6 = url.split('vimeo.com/')[1]) === null || _url$split$6 === void 0 ? void 0 : _url$split$6.split('?')[0];\n        const response = await fetch(`https://vimeo.com/api/v2/video/${videoId}.json`);\n        const data = await response.json();\n        return ((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.title) || 'Vídeo do Vimeo';\n      }\n      return 'Vídeo';\n    } catch (error) {\n      console.error('Erro ao obter título do vídeo:', error);\n      return 'Vídeo';\n    }\n  };\n  const handleAddVideo = async e => {\n    if (e) e.preventDefault();\n    if (!newVideoUrl.trim()) return;\n    setIsLoading(true);\n    setError(null);\n    try {\n      const video = await videoService.addVideo(newVideoUrl);\n      setVideos(prev => [video, ...prev]);\n      setNewVideoUrl('');\n      setSelectedVideo(video);\n    } catch (error) {\n      setError('Erro ao adicionar vídeo. Verifique a URL e tente novamente.');\n      console.error('Erro ao adicionar vídeo:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDelete = async videoId => {\n    try {\n      await videoService.deleteVideo(videoId);\n      setVideos(prev => prev.filter(video => video.id !== videoId));\n    } catch (error) {\n      console.error('Erro ao deletar vídeo:', error);\n    }\n  };\n  const handleVideoSelect = video => {\n    setSelectedVideo(video);\n    setIsSidebarOpen(false);\n  };\n  const handlePlayerReady = event => {\n    console.log('Player pronto');\n    if (isPlaying) {\n      console.log('Iniciando reprodução automática');\n      event.target.playVideo();\n    }\n  };\n  const handleStateChange = event => {\n    const state = event.data;\n    switch (state) {\n      case PlayerState.ENDED:\n        onEnded();\n        break;\n      case PlayerState.PLAYING:\n        setIsPlaying(true);\n        break;\n      case PlayerState.PAUSED:\n        setIsPlaying(false);\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Função para extrair videoId do YouTube\n  const extractVideoId = (url = '') => {\n    try {\n      if (!url) return '';\n      let videoId = '';\n      if (url.includes('youtube.com/embed/')) {\n        var _url$split$7;\n        videoId = (_url$split$7 = url.split('embed/')[1]) === null || _url$split$7 === void 0 ? void 0 : _url$split$7.split('?')[0];\n      } else if (url.includes('youtube.com/watch')) {\n        var _url$split$8;\n        videoId = (_url$split$8 = url.split('v=')[1]) === null || _url$split$8 === void 0 ? void 0 : _url$split$8.split('&')[0];\n      } else if (url.includes('youtu.be/')) {\n        var _url$split$9;\n        videoId = (_url$split$9 = url.split('youtu.be/')[1]) === null || _url$split$9 === void 0 ? void 0 : _url$split$9.split('?')[0];\n      }\n      console.log('Extraído videoId:', videoId, 'da URL:', url);\n      return videoId;\n    } catch (error) {\n      console.error('Erro ao extrair videoId:', error);\n      return '';\n    }\n  };\n\n  // Adicione esta função para controlar o fade do volume do iframe\n  const fadeIframeVolume = (start, end, duration) => {\n    if (!player || !isPlayerReady) return;\n    const steps = 20;\n    const stepValue = (end - start) / steps;\n    const stepDuration = duration / steps;\n    let currentStep = 0;\n    const fadeInterval = setInterval(() => {\n      currentStep++;\n      const newVolume = start + stepValue * currentStep;\n      const volume = Math.min(Math.max(newVolume, 0), 1) * 100;\n      player.setVolume(volume);\n      if (currentStep >= steps) {\n        clearInterval(fadeInterval);\n      }\n    }, stepDuration);\n  };\n\n  // Adicione este useEffect para escutar eventos de áudio\n  useEffect(() => {\n    const handleAudioPlay = () => {\n      if (isPlayerReady) {\n        fadeIframeVolume(1, 0.10, 500);\n      }\n    };\n    const handleAudioStop = () => {\n      if (isPlayerReady) {\n        fadeIframeVolume(0.10, 1, 500);\n      }\n    };\n    window.addEventListener('audioPlay', handleAudioPlay, {\n      passive: true\n    });\n    window.addEventListener('audioStop', handleAudioStop, {\n      passive: true\n    });\n    return () => {\n      window.removeEventListener('audioPlay', handleAudioPlay);\n      window.removeEventListener('audioStop', handleAudioStop);\n    };\n  }, [isPlayerReady]);\n\n  // Adicione um useEffect para reinicializar o player quando o vídeo mudar\n  useEffect(() => {\n    if (selectedVideo || videos[0]) {\n      setPlayer(null);\n      setIsPlayerReady(false);\n      initializePlayer();\n    }\n  }, [selectedVideo === null || selectedVideo === void 0 ? void 0 : selectedVideo.url, (_videos$ = videos[0]) === null || _videos$ === void 0 ? void 0 : _videos$.url]);\n  useEffect(() => {\n    if (isPlaying && player) {\n      player.playVideo();\n    } else if (!isPlaying && player) {\n      player.pauseVideo();\n    }\n  }, [isPlaying, player]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddVideo,\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          value: newVideoUrl,\n          onChange: e => setNewVideoUrl(e.target.value),\n          placeholder: \"Cole a URL do YouTube ou Vimeo aqui\",\n          className: \"w-full bg-[#2d2d2d] border border-[#404040] text-gray-200 rounded px-3 py-2 focus:border-[#e1aa1e] focus:outline-none\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-400 text-sm\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleAddVideo(),\n        className: `flex-1 ${isLoading ? 'bg-[#e1aa1e]/50 cursor-not-allowed' : 'bg-[#e1aa1e] hover:bg-[#e1aa1e]/80'} text-gray-900 px-3 py-1.5 rounded transition-colors flex items-center justify-center gap-2`,\n        disabled: isLoading,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-4 h-4\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M12 4v16m8-8H4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), isLoading ? 'Adicionando...' : 'Buscar Vídeo']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setIsSidebarOpen(true),\n        className: \"flex-1 bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-3 py-1.5 rounded flex items-center justify-center gap-2 transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-4 h-4\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M4 6h16M4 12h16M4 18h16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), \"\\xDAltimos V\\xEDdeos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: selectedVideo || videos[0] ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-lg overflow-hidden border border-[#404040]\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative pt-[56.25%]\",\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            id: \"youtube-player\",\n            src: `${(selectedVideo === null || selectedVideo === void 0 ? void 0 : selectedVideo.url) || ((_videos$2 = videos[0]) === null || _videos$2 === void 0 ? void 0 : _videos$2.url)}?enablejsapi=1&origin=${encodeURIComponent(window.location.origin)}&playsinline=1&widget_referrer=${encodeURIComponent(window.location.origin)}&controls=1&rel=0&modestbranding=1`,\n            className: \"absolute top-0 left-0 w-full h-full\",\n            allowFullScreen: true,\n            allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n            title: `Video ${(selectedVideo === null || selectedVideo === void 0 ? void 0 : selectedVideo.id) || ((_videos$3 = videos[0]) === null || _videos$3 === void 0 ? void 0 : _videos$3.id)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-6 text-gray-400 bg-[#2d2d2d] rounded-lg border border-[#404040]\",\n        children: \"Nenhum v\\xEDdeo dispon\\xEDvel. Adicione um v\\xEDdeo para come\\xE7ar.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoSidebar, {\n      isOpen: isSidebarOpen,\n      onClose: () => setIsSidebarOpen(false),\n      videos: videos,\n      onVideoSelect: handleVideoSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"lYaIraHuAkOh3TEUrdWrNwa/47s=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","videoService","VideoSidebar","jsxDEV","_jsxDEV","VideoPlayer","onEnded","isPlaying","setIsPlaying","pendingVideoId","_s","_videos$","_videos$2","_videos$3","newVideoUrl","setNewVideoUrl","videos","setVideos","selectedVideo","setSelectedVideo","isLoading","setIsLoading","error","setError","isSidebarOpen","setIsSidebarOpen","player","setPlayer","isPlayerReady","setIsPlayerReady","PlayerState","ENDED","PLAYING","PAUSED","BUFFERING","CUED","loadVideos","data","getVideos","length","console","loadYouTubeAPI","Promise","resolve","_firstScriptTag$paren","existingScript","document","querySelector","window","YT","Player","tag","createElement","src","async","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","initializePlayer","_YT","setTimeout","iframe","newPlayer","events","onReady","event","target","setVolume","onStateChange","handleStateChange","onError","playerVars","enablejsapi","origin","location","widget_referrer","playsinline","controls","rel","modestbranding","autoplay","destroy","getEmbedUrl","url","log","includes","_url$split$","_url$split$2","videoId","split","embedUrl","_url$split$3","getVideoTitle","_url$split$4","_url$split$5","_data$items$","_data$items$$snippet","response","fetch","json","items","snippet","title","_url$split$6","_data$","handleAddVideo","e","preventDefault","trim","video","addVideo","prev","handleDelete","deleteVideo","filter","id","handleVideoSelect","handlePlayerReady","playVideo","state","extractVideoId","_url$split$7","_url$split$8","_url$split$9","fadeIframeVolume","start","end","duration","steps","stepValue","stepDuration","currentStep","fadeInterval","setInterval","newVolume","volume","Math","min","max","clearInterval","handleAudioPlay","handleAudioStop","addEventListener","passive","removeEventListener","pauseVideo","className","children","onSubmit","type","value","onChange","placeholder","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","encodeURIComponent","allowFullScreen","allow","isOpen","onClose","onVideoSelect","_c","$RefreshReg$"],"sources":["C:/Users/genil/Desktop/Dev Sistema academia/src/components/VideoPlayer.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { videoService, VideoData } from '../lib/supabase';\nimport VideoSidebar from './VideoSidebar';\n\ninterface VideoPlayerProps {\n  onEnded: () => void;\n  isPlaying: boolean;\n  setIsPlaying: (playing: boolean) => void;\n  pendingVideoId?: string;\n}\n\nconst VideoPlayer: React.FC<VideoPlayerProps> = ({ onEnded, isPlaying, setIsPlaying, pendingVideoId }) => {\n  const [newVideoUrl, setNewVideoUrl] = useState('');\n  const [videos, setVideos] = useState<VideoData[]>([]);\n  const [selectedVideo, setSelectedVideo] = useState<VideoData | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [player, setPlayer] = useState<YT.Player | null>(null);\n  const [isPlayerReady, setIsPlayerReady] = useState(false);\n\n  // Definir constantes para os estados do player\n  const PlayerState = {\n    ENDED: 0,\n    PLAYING: 1,\n    PAUSED: 2,\n    BUFFERING: 3,\n    CUED: 5\n  } as const;\n\n  // Carregar vídeos ao montar o componente\n  useEffect(() => {\n    loadVideos();\n  }, []);\n\n  const loadVideos = async () => {\n    try {\n      const data = await videoService.getVideos();\n      setVideos(data);\n      if (data.length > 0 && !selectedVideo) {\n        setSelectedVideo(data[0]);\n      }\n    } catch (error) {\n      console.error('Erro ao carregar vídeos:', error);\n    }\n  };\n\n  const loadYouTubeAPI = () => {\n    return new Promise<void>((resolve) => {\n      const existingScript = document.querySelector('script[src=\"https://www.youtube.com/iframe_api\"]');\n      if (existingScript) {\n        if ((window as any).YT && (window as any).YT.Player) {\n          resolve();\n          return;\n        }\n      }\n\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n      tag.async = true;\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode?.insertBefore(tag, firstScriptTag);\n\n      (window as any).onYouTubeIframeAPIReady = () => {\n        resolve();\n      };\n    });\n  };\n\n  const initializePlayer = async () => {\n    try {\n      await loadYouTubeAPI();\n      await new Promise(resolve => setTimeout(resolve, 100));\n      \n      if (!(window as any).YT?.Player) return;\n\n      const iframe = document.querySelector('#youtube-player');\n      if (!iframe || player) return;\n      \n      try {\n        const newPlayer = new (window as any).YT.Player('youtube-player', {\n          events: {\n            onReady: (event: any) => {\n              setPlayer(event.target);\n              setIsPlayerReady(true);\n              event.target.setVolume(100);\n            },\n            onStateChange: handleStateChange,\n            onError: () => {\n              // Silenciosamente lida com o erro\n            }\n          },\n          playerVars: {\n            enablejsapi: 1,\n            origin: window.location.origin,\n            widget_referrer: window.location.origin,\n            playsinline: 1,\n            controls: 1,\n            rel: 0,\n            modestbranding: 1,\n            autoplay: 0\n          }\n        });\n      } catch (error) {\n        // Silenciosamente lida com o erro\n      }\n    } catch (error) {\n      // Silenciosamente lida com o erro\n    }\n  };\n\n  useEffect(() => {\n    initializePlayer();\n\n    return () => {\n      if (player) {\n        player.destroy();\n      }\n      delete (window as any).onYouTubeIframeAPIReady;\n    };\n  }, []);\n\n  // Função para converter URL do YouTube em formato embed\n  const getEmbedUrl = (url: string) => {\n    console.log('URL original:', url);\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        const videoId = url.includes('youtube.com') \n          ? url.split('v=')[1]?.split('&')[0]\n          : url.split('youtu.be/')[1]?.split('?')[0];\n        \n        const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      if (url.includes('vimeo.com')) {\n        const videoId = url.split('vimeo.com/')[1]?.split('?')[0];\n        const embedUrl = `https://player.vimeo.com/video/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      return url;\n    } catch (error) {\n      console.error('Erro ao processar URL:', error);\n      return url;\n    }\n  };\n\n  // Função para extrair título do vídeo do YouTube\n  const getVideoTitle = async (url: string): Promise<string> => {\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        const videoId = url.includes('youtube.com')\n          ? url.split('v=')[1]?.split('&')[0]\n          : url.split('youtu.be/')[1]?.split('?')[0];\n        \n        const response = await fetch(\n          `https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=AIzaSyAyTc_jYQSVM_3kg95t8ai3CWckZGG0v4c&part=snippet`\n        );\n        const data = await response.json();\n        \n        if (data.error) {\n          console.error('Erro da API do YouTube:', data.error);\n          return 'Vídeo do YouTube';\n        }\n\n        return data.items[0]?.snippet?.title || 'Vídeo do YouTube';\n      }\n      \n      if (url.includes('vimeo.com')) {\n        const videoId = url.split('vimeo.com/')[1]?.split('?')[0];\n        const response = await fetch(`https://vimeo.com/api/v2/video/${videoId}.json`);\n        const data = await response.json();\n        return data[0]?.title || 'Vídeo do Vimeo';\n      }\n      \n      return 'Vídeo';\n    } catch (error) {\n      console.error('Erro ao obter título do vídeo:', error);\n      return 'Vídeo';\n    }\n  };\n\n  const handleAddVideo = async (e?: React.FormEvent) => {\n    if (e) e.preventDefault();\n    if (!newVideoUrl.trim()) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const video = await videoService.addVideo(newVideoUrl);\n      setVideos(prev => [video, ...prev]);\n      setNewVideoUrl('');\n      setSelectedVideo(video);\n    } catch (error) {\n      setError('Erro ao adicionar vídeo. Verifique a URL e tente novamente.');\n      console.error('Erro ao adicionar vídeo:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDelete = async (videoId: string) => {\n    try {\n      await videoService.deleteVideo(videoId);\n      setVideos(prev => prev.filter(video => video.id !== videoId));\n    } catch (error) {\n      console.error('Erro ao deletar vídeo:', error);\n    }\n  };\n\n  const handleVideoSelect = (video: VideoData) => {\n    setSelectedVideo(video);\n    setIsSidebarOpen(false);\n  };\n\n  const handlePlayerReady = (event: any) => {\n    console.log('Player pronto');\n    if (isPlaying) {\n      console.log('Iniciando reprodução automática');\n      event.target.playVideo();\n    }\n  };\n\n  const handleStateChange = (event: { data: number }) => {\n    const state = event.data;\n    \n    switch (state) {\n      case PlayerState.ENDED:\n        onEnded();\n        break;\n      case PlayerState.PLAYING:\n        setIsPlaying(true);\n        break;\n      case PlayerState.PAUSED:\n        setIsPlaying(false);\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Função para extrair videoId do YouTube\n  const extractVideoId = (url: string = '') => {\n    try {\n      if (!url) return '';\n      \n      let videoId = '';\n      \n      if (url.includes('youtube.com/embed/')) {\n        videoId = url.split('embed/')[1]?.split('?')[0];\n      } else if (url.includes('youtube.com/watch')) {\n        videoId = url.split('v=')[1]?.split('&')[0];\n      } else if (url.includes('youtu.be/')) {\n        videoId = url.split('youtu.be/')[1]?.split('?')[0];\n      }\n\n      console.log('Extraído videoId:', videoId, 'da URL:', url);\n      return videoId;\n    } catch (error) {\n      console.error('Erro ao extrair videoId:', error);\n      return '';\n    }\n  };\n\n  // Adicione esta função para controlar o fade do volume do iframe\n  const fadeIframeVolume = (start: number, end: number, duration: number) => {\n    if (!player || !isPlayerReady) return;\n\n    const steps = 20;\n    const stepValue = (end - start) / steps;\n    const stepDuration = duration / steps;\n    let currentStep = 0;\n\n    const fadeInterval = setInterval(() => {\n      currentStep++;\n      const newVolume = start + (stepValue * currentStep);\n      const volume = Math.min(Math.max(newVolume, 0), 1) * 100;\n      player.setVolume(volume);\n\n      if (currentStep >= steps) {\n        clearInterval(fadeInterval);\n      }\n    }, stepDuration);\n  };\n\n  // Adicione este useEffect para escutar eventos de áudio\n  useEffect(() => {\n    const handleAudioPlay = () => {\n      if (isPlayerReady) {\n        fadeIframeVolume(1, 0.10, 500);\n      }\n    };\n\n    const handleAudioStop = () => {\n      if (isPlayerReady) {\n        fadeIframeVolume(0.10, 1, 500);\n      }\n    };\n\n    window.addEventListener('audioPlay', handleAudioPlay, { passive: true });\n    window.addEventListener('audioStop', handleAudioStop, { passive: true });\n\n    return () => {\n      window.removeEventListener('audioPlay', handleAudioPlay);\n      window.removeEventListener('audioStop', handleAudioStop);\n    };\n  }, [isPlayerReady]);\n\n  // Adicione um useEffect para reinicializar o player quando o vídeo mudar\n  useEffect(() => {\n    if (selectedVideo || videos[0]) {\n      setPlayer(null);\n      setIsPlayerReady(false);\n      initializePlayer();\n    }\n  }, [selectedVideo?.url, videos[0]?.url]);\n\n  useEffect(() => {\n    if (isPlaying && player) {\n      player.playVideo();\n    } else if (!isPlaying && player) {\n      player.pauseVideo();\n    }\n  }, [isPlaying, player]);\n\n  return (\n    <div className=\"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-4\">\n      <form onSubmit={handleAddVideo} className=\"mb-4\">\n        <div className=\"flex flex-col gap-2\">\n          <input\n            type=\"url\"\n            value={newVideoUrl}\n            onChange={(e) => setNewVideoUrl(e.target.value)}\n            placeholder=\"Cole a URL do YouTube ou Vimeo aqui\"\n            className=\"w-full bg-[#2d2d2d] border border-[#404040] text-gray-200 rounded px-3 py-2 focus:border-[#e1aa1e] focus:outline-none\"\n            disabled={isLoading}\n          />\n          {error && <p className=\"text-red-400 text-sm\">{error}</p>}\n        </div>\n      </form>\n\n      <div className=\"flex gap-2 mb-3\">\n        <button\n          type=\"button\"\n          onClick={() => handleAddVideo()}\n          className={`flex-1 ${\n            isLoading \n              ? 'bg-[#e1aa1e]/50 cursor-not-allowed' \n              : 'bg-[#e1aa1e] hover:bg-[#e1aa1e]/80'\n          } text-gray-900 px-3 py-1.5 rounded transition-colors flex items-center justify-center gap-2`}\n          disabled={isLoading}\n        >\n          <svg\n            className=\"w-4 h-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M12 4v16m8-8H4\"\n            />\n          </svg>\n          {isLoading ? 'Adicionando...' : 'Buscar Vídeo'}\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsSidebarOpen(true)}\n          className=\"flex-1 bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-3 py-1.5 rounded flex items-center justify-center gap-2 transition-colors\"\n        >\n          <svg\n            className=\"w-4 h-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M4 6h16M4 12h16M4 18h16\"\n            />\n          </svg>\n          Últimos Vídeos\n        </button>\n      </div>\n\n      <div>\n        {(selectedVideo || videos[0]) ? (\n          <div className=\"rounded-lg overflow-hidden border border-[#404040]\">\n            <div className=\"relative pt-[56.25%]\">\n              <iframe\n                id=\"youtube-player\"\n                src={`${selectedVideo?.url || videos[0]?.url}?enablejsapi=1&origin=${encodeURIComponent(window.location.origin)}&playsinline=1&widget_referrer=${encodeURIComponent(window.location.origin)}&controls=1&rel=0&modestbranding=1`}\n                className=\"absolute top-0 left-0 w-full h-full\"\n                allowFullScreen\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                title={`Video ${selectedVideo?.id || videos[0]?.id}`}\n              />\n            </div>\n          </div>\n        ) : (\n          <div className=\"text-center p-6 text-gray-400 bg-[#2d2d2d] rounded-lg border border-[#404040]\">\n            Nenhum vídeo disponível. Adicione um vídeo para começar.\n          </div>\n        )}\n      </div>\n\n      <VideoSidebar\n        isOpen={isSidebarOpen}\n        onClose={() => setIsSidebarOpen(false)}\n        videos={videos}\n        onVideoSelect={handleVideoSelect}\n      />\n    </div>\n  );\n};\n\nexport default VideoPlayer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}