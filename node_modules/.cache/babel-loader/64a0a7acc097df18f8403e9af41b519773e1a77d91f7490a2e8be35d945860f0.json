{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genil\\\\Desktop\\\\Dev Sistema academia\\\\src\\\\components\\\\AudioPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { audioService } from '../lib/supabase';\nimport { supabase } from '../lib/supabase';\nimport '../styles/animations.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  onEnded,\n  isPlaying,\n  setIsPlaying\n}) => {\n  _s();\n  var _audioRef$current5, _audioRef$current6, _audios$find;\n  const [audios, setAudios] = useState([]);\n  const [currentAudio, setCurrentAudio] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const audioRef = useRef(null);\n  const [audioTimers, setAudioTimers] = useState({});\n  const timersRef = useRef({});\n  const [timerAudioId, setTimerAudioId] = useState(null);\n  const [pendingAudioId, setPendingAudioId] = useState(null);\n  const [pendingAudios, setPendingAudios] = useState([]);\n  const playAttemptRef = useRef(null);\n  const [editingAudioId, setEditingAudioId] = useState(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [showConfirmDialog, setShowConfirmDialog] = useState(null);\n  const [showTimerDialog, setShowTimerDialog] = useState(null);\n  const [popupPosition, setPopupPosition] = useState(null);\n  const [confirmPosition, setConfirmPosition] = useState(null);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [timerInputValue, setTimerInputValue] = useState('');\n  const [preferences, setPreferences] = useState({});\n  const [playAttempts, setPlayAttempts] = useState(0);\n  const MAX_PLAY_ATTEMPTS = 3;\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(null);\n  const [deletePosition, setDeletePosition] = useState(null);\n  const canvasRef = useRef(null);\n  const analyserRef = useRef(null);\n  const animationRef = useRef(null);\n  useEffect(() => {\n    loadAudios();\n    return () => {\n      if (canvasRef.current) {\n        var _canvasRef$current$ge;\n        (_canvasRef$current$ge = canvasRef.current.getContext('2d')) === null || _canvasRef$current$ge === void 0 ? void 0 : _canvasRef$current$ge.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      }\n    };\n  }, []);\n  const loadAudios = async () => {\n    try {\n      const data = await audioService.getAudios();\n      setAudios(data);\n\n      // Carrega as preferências para cada áudio\n      data.forEach(audio => {\n        loadAudioPreferences(audio.id);\n      });\n    } catch (error) {\n      console.error('Erro ao carregar áudios:', error);\n    }\n  };\n  const loadAudioPreferences = async audioId => {\n    try {\n      const prefs = await audioService.loadPreferences(audioId);\n      if (prefs.auto_repeat && prefs.timer_end_at) {\n        const endTime = new Date(prefs.timer_end_at).getTime();\n        const now = Date.now();\n        const timeLeft = Math.max(0, Math.floor((endTime - now) / 1000));\n        console.log(`Verificando timer para ${audioId}:`, {\n          timeLeft,\n          endTime: prefs.timer_end_at,\n          interval: prefs.repeat_interval\n        });\n\n        // Se ainda há tempo restante ou se acabou de terminar\n        if (timeLeft >= 0) {\n          const interval = prefs.repeat_interval * 60;\n\n          // Se o timer acabou de terminar, cria um novo ciclo\n          if (timeLeft === 0) {\n            console.log(`Timer ${audioId} terminou durante reload, iniciando novo ciclo`);\n            const newEndTime = new Date(Date.now() + interval * 1000).toISOString();\n\n            // Atualiza o endTime no banco\n            await audioService.updatePreferences(audioId, {\n              ...prefs,\n              timer_end_at: newEndTime\n            });\n\n            // Inicia novo ciclo com o novo endTime\n            startNewTimerCycle(audioId, interval, newEndTime);\n          } else {\n            // Continua o ciclo atual com o tempo restante\n            console.log(`Restaurando timer para ${audioId} com ${timeLeft}s restantes`);\n            startNewTimerCycle(audioId, interval, prefs.timer_end_at);\n          }\n        } else {\n          // Se o timer expirou há muito tempo, desativa-o\n          console.log(`Timer ${audioId} expirado, desativando`);\n          await audioService.updatePreferences(audioId, {\n            auto_repeat: false,\n            timer_end_at: undefined,\n            repeat_interval: 0\n          });\n        }\n      }\n\n      // Atualiza as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          auto_repeat: prefs.auto_repeat || false,\n          repeat_interval: prefs.repeat_interval || 0,\n          last_played_at: prefs.last_played_at,\n          play_count: prefs.play_count || 0\n        }\n      }));\n    } catch (error) {\n      console.error('Erro ao carregar preferências:', error);\n    }\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const progress = audioRef.current.currentTime / audioRef.current.duration * 100;\n      setProgress(progress);\n    }\n  };\n  const handleProgressClick = e => {\n    if (audioRef.current) {\n      const bounds = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - bounds.left;\n      const width = bounds.width;\n      const percentage = x / width;\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\n    }\n  };\n  const startNewTimerCycle = (audioId, interval, existingEndTime) => {\n    console.log('Iniciando novo ciclo de timer:', {\n      audioId,\n      interval,\n      existingEndTime\n    });\n    const endTime = existingEndTime || new Date(Date.now() + interval * 1000).toISOString();\n\n    // Limpa o timer anterior se existir\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n    }\n\n    // Salva o estado inicial do timer\n    setAudioTimers(prev => ({\n      ...prev,\n      [audioId]: {\n        interval,\n        timeLeft: existingEndTime ? Math.max(0, Math.floor((new Date(existingEndTime).getTime() - Date.now()) / 1000)) : interval,\n        intervalId: null,\n        // Será atualizado abaixo\n        endTime\n      }\n    }));\n\n    // Cria o novo intervalo\n    const intervalId = setInterval(async () => {\n      const currentTime = Date.now();\n      const timerEndTime = new Date(endTime).getTime();\n      const newTimeLeft = Math.max(0, Math.floor((timerEndTime - currentTime) / 1000));\n      console.log(`Timer ${audioId} - Tempo restante:`, newTimeLeft);\n      if (newTimeLeft === 0) {\n        console.log('Timer zerou, preparando para reproduzir:', audioId);\n\n        // Encontra o áudio correspondente\n        const audioToPlay = audios.find(a => a.id === audioId);\n        if (audioToPlay) {\n          // Atualiza as preferências com novo endTime\n          const newEndTime = new Date(Date.now() + interval * 1000).toISOString();\n          await audioService.updatePreferences(audioId, {\n            auto_repeat: true,\n            repeat_interval: interval / 60,\n            timer_end_at: newEndTime\n          });\n\n          // Atualiza o timer local\n          setAudioTimers(prev => ({\n            ...prev,\n            [audioId]: {\n              ...prev[audioId],\n              timeLeft: interval,\n              endTime: newEndTime\n            }\n          }));\n\n          // Reproduz o áudio\n          console.log('Reproduzindo áudio após timer:', audioToPlay.title);\n          togglePlay(audioToPlay);\n        }\n      } else {\n        // Atualiza apenas o tempo restante\n        setAudioTimers(prev => ({\n          ...prev,\n          [audioId]: {\n            ...prev[audioId],\n            timeLeft: newTimeLeft\n          }\n        }));\n      }\n    }, 1000);\n\n    // Atualiza o ID do intervalo no estado e na ref\n    setAudioTimers(prev => ({\n      ...prev,\n      [audioId]: {\n        ...prev[audioId],\n        intervalId\n      }\n    }));\n    timersRef.current[audioId] = intervalId;\n    return intervalId;\n  };\n  const handleAudioEnd = () => {\n    if (onEnded) {\n      onEnded();\n    }\n  };\n  const togglePlay = audio => {\n    // Se clicou em um áudio diferente do atual\n    if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) !== audio.id) {\n      console.log('Trocando para novo áudio:', audio.title);\n      // Para o áudio atual se estiver tocando\n      if (audioRef.current) {\n        audioRef.current.pause();\n      }\n      // Define o novo áudio e inicia a reprodução\n      setCurrentAudio(audio);\n      setIsPlaying(true);\n      // Reseta o tempo de reprodução\n      if (audioRef.current) {\n        audioRef.current.currentTime = 0;\n      }\n    } else {\n      // Se clicou no mesmo áudio, apenas alterna play/pause\n      setIsPlaying(!isPlaying);\n      if (isPlaying) {\n        var _audioRef$current;\n        (_audioRef$current = audioRef.current) === null || _audioRef$current === void 0 ? void 0 : _audioRef$current.pause();\n      } else {\n        var _audioRef$current2;\n        (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.play();\n      }\n    }\n  };\n\n  // Adicione este useEffect para controlar a reprodução quando o áudio mudar\n  useEffect(() => {\n    if (currentAudio && isPlaying && audioRef.current) {\n      console.log('Iniciando reprodução do áudio:', currentAudio.title);\n      const playPromise = audioRef.current.play();\n      if (playPromise !== undefined) {\n        playPromise.catch(error => {\n          console.error('Erro ao reproduzir áudio:', error);\n        });\n      }\n    }\n  }, [currentAudio, isPlaying]);\n  const handleUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    setIsUploading(true);\n    try {\n      console.log('Iniciando upload do arquivo:', file.name);\n\n      // Upload do arquivo\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${Math.random()}.${fileExt}`;\n      const filePath = `audios/${fileName}`;\n      console.log('Tentando fazer upload para:', filePath);\n      const {\n        data: uploadData,\n        error: uploadError\n      } = await supabase.storage.from('media').upload(filePath, file);\n      if (uploadError) {\n        console.error('Erro no upload:', uploadError);\n        throw uploadError;\n      }\n      console.log('Upload bem sucedido:', uploadData);\n\n      // Obtém a URL pública\n      const {\n        data: {\n          publicUrl\n        }\n      } = supabase.storage.from('media').getPublicUrl(filePath);\n      console.log('URL pública gerada:', publicUrl);\n\n      // Adiciona ao banco de dados\n      const newAudio = await audioService.addAudio({\n        title: file.name,\n        url: publicUrl,\n        auto_repeat: false,\n        repeat_interval: 0,\n        play_count: 0\n      });\n      console.log('Áudio adicionado ao banco:', newAudio);\n\n      // Recarrega todos os áudios\n      await loadAudios();\n\n      // Seleciona o novo áudio\n      setCurrentAudio(newAudio);\n\n      // Limpa o input\n      event.target.value = '';\n    } catch (error) {\n      console.error('Erro detalhado no upload:', error);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const startRepeatTimer = async (audioId, minutes) => {\n    setTimerAudioId(audioId);\n    const seconds = minutes * 60;\n\n    // Inicia o novo ciclo do timer\n    startNewTimerCycle(audioId, seconds);\n\n    // Calcula o tempo de término\n    const endTime = new Date(Date.now() + seconds * 1000).toISOString();\n\n    // Salva as preferências no banco\n    try {\n      const prefs = {\n        auto_repeat: true,\n        repeat_interval: minutes,\n        timer_end_at: endTime\n      };\n      await audioService.updatePreferences(audioId, prefs);\n\n      // Atualiza também as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          ...prev[audioId],\n          auto_repeat: true,\n          repeat_interval: minutes\n        }\n      }));\n      console.log(`Timer salvo para ${audioId} com intervalo de ${minutes}min`);\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n  const stopRepeatTimer = async audioId => {\n    // Não para o timer se o áudio estiver tocando\n    if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId && isPlaying) {\n      return;\n    }\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n      delete timersRef.current[audioId];\n    }\n    setAudioTimers(prev => {\n      const newTimers = {\n        ...prev\n      };\n      delete newTimers[audioId];\n      return newTimers;\n    });\n    try {\n      const prefs = {\n        auto_repeat: false,\n        repeat_interval: 0,\n        timer_end_at: undefined\n      };\n      await audioService.updatePreferences(audioId, prefs);\n\n      // Atualiza também as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          ...prev[audioId],\n          auto_repeat: false,\n          repeat_interval: 0\n        }\n      }));\n      console.log(`Timer removido para ${audioId}`);\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n  const handleDelete = async audioId => {\n    try {\n      var _fileUrl$split$;\n      const audioToDelete = audios.find(a => a.id === audioId);\n      if (!audioToDelete) return;\n      const fileUrl = audioToDelete.url;\n      const fileName = (_fileUrl$split$ = fileUrl.split('/audios/')[1]) === null || _fileUrl$split$ === void 0 ? void 0 : _fileUrl$split$.split('?')[0];\n      if (fileName) {\n        console.log('Tentando remover arquivo:', fileName);\n        try {\n          // Primeira tentativa de remoção\n          const {\n            error: storageError\n          } = await supabase.storage.from('media').remove([`audios/${fileName}`]);\n          if (storageError) {\n            console.error('Erro ao remover arquivo:', storageError);\n\n            // Se falhar, espera um momento e tenta novamente\n            await new Promise(resolve => setTimeout(resolve, 1000));\n\n            // Segunda tentativa\n            await supabase.storage.from('media').remove([`audios/${fileName}`]);\n          }\n\n          // Verifica se o arquivo ainda existe\n          const {\n            data: files\n          } = await supabase.storage.from('media').list('audios', {\n            search: fileName\n          });\n          console.log('Verificação após remoção:', files);\n        } catch (storageError) {\n          console.error('Erro ao acessar storage:', storageError);\n        }\n      }\n\n      // Remove o registro do banco de dados\n      await audioService.deleteAudio(audioId);\n\n      // Atualiza estados locais\n      if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId) {\n        setCurrentAudio(null);\n        setIsPlaying(false);\n      }\n      if (audioTimers[audioId]) {\n        await stopRepeatTimer(audioId);\n      }\n      setPreferences(prev => {\n        const newPrefs = {\n          ...prev\n        };\n        delete newPrefs[audioId];\n        return newPrefs;\n      });\n\n      // Força uma atualização da lista de arquivos no storage\n      const {\n        data: updatedFiles\n      } = await supabase.storage.from('media').list('audios');\n      console.log('Lista atualizada de arquivos:', updatedFiles);\n\n      // Recarrega a lista de áudios\n      await loadAudios();\n      console.log('Áudio removido com sucesso:', audioId);\n    } catch (error) {\n      console.error('Erro ao deletar áudio:', error);\n      try {\n        await loadAudios();\n      } catch (e) {\n        console.error('Erro ao recarregar áudios após falha:', e);\n      }\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Adicione esta função auxiliar para formatar o tempo do timer\n  const formatTimeLeft = seconds => {\n    if (seconds < 60) {\n      return `${Math.ceil(seconds)}s`;\n    }\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.ceil(seconds % 60);\n    return `${minutes}min ${remainingSeconds}s`;\n  };\n\n  // Modifique a função getNextAudioInfo para verificar os timers ativos\n  const getNextAudioInfo = () => {\n    // Primeiro, verifica se há algum áudio pendente na fila\n    if (pendingAudios.length > 0) {\n      const nextAudioId = pendingAudios[0];\n      const nextAudio = audios.find(a => a.id === nextAudioId);\n      const timer = audioTimers[nextAudioId];\n      return {\n        nextAudio,\n        timer\n      };\n    }\n\n    // Se não há áudios pendentes, procura o próximo áudio agendado\n    let nextScheduledAudio = null;\n    let shortestTime = Infinity;\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      if (timer.timeLeft < shortestTime) {\n        const audio = audios.find(a => a.id === audioId);\n        if (audio) {\n          nextScheduledAudio = {\n            nextAudio: audio,\n            timer: timer\n          };\n          shortestTime = timer.timeLeft;\n        }\n      }\n    });\n    return nextScheduledAudio;\n  };\n  const handleUpdateTitle = async (audioId, newTitle) => {\n    try {\n      await audioService.updateAudio(audioId, {\n        title: newTitle\n      });\n      // Atualiza o estado local dos áudios\n      setAudios(prev => prev.map(audio => audio.id === audioId ? {\n        ...audio,\n        title: newTitle\n      } : audio));\n      // Se o áudio sendo editado é o atual, atualiza também o currentAudio\n      if ((currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audioId) {\n        setCurrentAudio(prev => prev ? {\n          ...prev,\n          title: newTitle\n        } : null);\n      }\n      setEditingAudioId(null);\n    } catch (error) {\n      console.error('Erro ao atualizar título:', error);\n    }\n  };\n  const ConfirmDialog = ({\n    audioId,\n    onConfirm,\n    onEdit,\n    onCancel,\n    buttonPosition\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50\",\n    onClick: e => {\n      if (e.target === e.currentTarget) onCancel();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\",\n      style: {\n        top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n        left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n        transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n        opacity: isAnimating ? 0 : 1,\n        transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-[#e1aa1e] font-medium text-sm mb-2\",\n        children: \"Gerenciar Repeti\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300 text-xs mb-4\",\n        children: \"Escolha uma das op\\xE7\\xF5es para editar a repeti\\xE7\\xE3o autom\\xE1tica:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onCancel,\n          className: \"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onEdit,\n          className: \"px-3 py-1.5 rounded bg-[#e1aa1e]/20 text-xs text-[#e1aa1e] hover:bg-[#e1aa1e]/30 transition-colors\",\n          children: \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onConfirm,\n          className: \"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors\",\n          children: \"Desativar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 584,\n    columnNumber: 5\n  }, this);\n  const SetTimerDialog = ({\n    audioId,\n    audioTitle,\n    onConfirm,\n    onCancel,\n    buttonPosition,\n    inputValue,\n    onInputChange\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-50\",\n      onClick: e => {\n        if (e.target === e.currentTarget) onCancel();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\",\n        style: {\n          top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n          left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n          transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n          opacity: isAnimating ? 0 : 1,\n          transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-[#e1aa1e] font-medium text-sm mb-2\",\n          children: \"Repetir \\xC1udio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300 text-xs mb-3 truncate\",\n          children: audioTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            value: inputValue,\n            onChange: e => onInputChange(e.target.value),\n            placeholder: \"00\",\n            className: \"w-full px-3 py-2 bg-[#1e1e1e] border border-[#404040] rounded text-gray-200 text-center focus:border-[#e1aa1e] focus:outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none pr-12\",\n            onKeyDown: e => {\n              if (e.key === 'Enter') {\n                const value = parseInt(inputValue);\n                if (value > 0) onConfirm(value);\n              } else if (e.key === 'Escape') {\n                onCancel();\n              }\n            },\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"absolute right-3 top-1/2 -translate-y-1/2 text-xs text-gray-400\",\n            children: \"minutos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onCancel,\n            className: \"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\",\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const value = parseInt(inputValue);\n              if (value > 0) onConfirm(value);\n            },\n            disabled: !inputValue || parseInt(inputValue) <= 0,\n            className: \"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",\n            children: \"Ativar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 7\n    }, this);\n  };\n  const handleShowTimerDialog = (e, audioId) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setPopupPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2\n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowTimerDialog(audioId);\n    }, 10);\n  };\n  const handleShowConfirmDialog = (e, audioId) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setConfirmPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2\n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowConfirmDialog(audioId);\n    }, 10);\n  };\n\n  // Adicione este useEffect para gerenciar a seleção de texto\n  useEffect(() => {\n    const style = document.createElement('style');\n    style.innerHTML = `\n      .dragging * {\n        user-select: none !important;\n        -webkit-user-select: none !important;\n        cursor: grabbing !important;\n      }\n    `;\n    document.head.appendChild(style);\n    return () => style.remove();\n  }, []);\n  const DeleteConfirmDialog = ({\n    audioId,\n    onConfirm,\n    onCancel,\n    buttonPosition\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50\",\n    onClick: e => {\n      if (e.target === e.currentTarget) onCancel();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\",\n      style: {\n        top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n        left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n        transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n        opacity: isAnimating ? 0 : 1,\n        transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-red-500 font-medium text-sm mb-2\",\n        children: \"Confirmar Exclus\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300 text-xs mb-4\",\n        children: \"Tem certeza que deseja excluir este \\xE1udio?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onCancel,\n          className: \"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onConfirm,\n          className: \"px-3 py-1.5 rounded bg-red-500 text-xs text-white hover:bg-red-600 transition-colors\",\n          children: \"Excluir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 758,\n    columnNumber: 5\n  }, this);\n  useEffect(() => {\n    if (audioRef.current && canvasRef.current) {\n      if (isPlaying) {\n        var _canvasRef$current$ge2;\n        audioRef.current.play();\n        (_canvasRef$current$ge2 = canvasRef.current.getContext('2d')) === null || _canvasRef$current$ge2 === void 0 ? void 0 : _canvasRef$current$ge2.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      } else {\n        var _canvasRef$current$ge3;\n        audioRef.current.pause();\n        (_canvasRef$current$ge3 = canvasRef.current.getContext('2d')) === null || _canvasRef$current$ge3 === void 0 ? void 0 : _canvasRef$current$ge3.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      }\n    }\n  }, [isPlaying]);\n  const animate = () => {\n    if (!canvasRef.current || !analyserRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const bufferLength = analyserRef.current.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const draw = () => {\n      animationRef.current = requestAnimationFrame(draw);\n      analyserRef.current.getByteFrequencyData(dataArray);\n\n      // Fundo com gradiente\n      ctx.fillStyle = '#1e1e1e';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Número de ondas e configurações\n      const waves = 3;\n      const points = 100;\n      const spacing = canvas.height / (waves + 1);\n\n      // Para cada linha de onda\n      for (let w = 1; w <= waves; w++) {\n        const baseY = spacing * w;\n        ctx.beginPath();\n        ctx.moveTo(0, baseY);\n\n        // Desenha a onda através da largura do canvas\n        for (let x = 0; x <= canvas.width; x++) {\n          const progress = x / canvas.width;\n          const index = Math.floor(progress * bufferLength);\n          const value = dataArray[index] / 255.0;\n\n          // Amplitude varia com o áudio\n          const amplitude = isPlaying ? 30 * value : 10;\n\n          // Frequência e fase variam com o tempo e posição\n          const frequency = 0.02;\n          const phase = Date.now() * 0.002 + w;\n\n          // Calcula a posição Y com múltiplas ondas sobrepostas\n          const y = baseY + Math.sin(x * frequency + phase) * amplitude + Math.sin(x * frequency * 0.5 + phase * 1.5) * amplitude * 0.5;\n          ctx.lineTo(x, y);\n        }\n\n        // Gradiente para a onda\n        const gradient = ctx.createLinearGradient(0, baseY - 50, 0, baseY + 50);\n        const alpha = isPlaying ? 0.5 - (w - 1) * 0.1 : 0.2;\n        gradient.addColorStop(0, `rgba(225, 170, 30, 0)`);\n        gradient.addColorStop(0.5, `rgba(225, 170, 30, ${alpha})`);\n        gradient.addColorStop(1, `rgba(225, 170, 30, 0)`);\n        ctx.strokeStyle = gradient;\n        ctx.lineWidth = 2;\n        ctx.stroke();\n\n        // Efeito de brilho\n        if (isPlaying) {\n          ctx.save();\n          ctx.filter = 'blur(4px)';\n          ctx.strokeStyle = `rgba(225, 170, 30, ${alpha * 0.5})`;\n          ctx.lineWidth = 4;\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n\n      // Adiciona partículas brilhantes\n      if (isPlaying) {\n        for (let i = 0; i < bufferLength; i += 8) {\n          const value = dataArray[i] / 255.0;\n          if (value > 0.5) {\n            const x = Math.random() * canvas.width;\n            const y = Math.random() * canvas.height;\n            const size = Math.random() * 3 * value;\n            ctx.beginPath();\n            ctx.arc(x, y, size, 0, Math.PI * 2);\n            ctx.fillStyle = `rgba(225, 170, 30, ${value * 0.3})`;\n            ctx.fill();\n          }\n        }\n      }\n    };\n    draw();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 bg-[#2d2d2d] rounded-lg border border-[#404040] overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 border-b border-[#404040]\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-[#e1aa1e] font-medium text-center\",\n          children: (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.title) || 'Selecione um áudio'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative h-32 bg-[#1e1e1e] p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"absolute inset-0 w-full h-full\",\n          width: 1000,\n          height: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 913,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (currentAudio) {\n                setIsPlaying(!isPlaying);\n                if (isPlaying) {\n                  var _audioRef$current3;\n                  (_audioRef$current3 = audioRef.current) === null || _audioRef$current3 === void 0 ? void 0 : _audioRef$current3.pause();\n                } else {\n                  var _audioRef$current4;\n                  (_audioRef$current4 = audioRef.current) === null || _audioRef$current4 === void 0 ? void 0 : _audioRef$current4.play();\n                }\n              }\n            },\n            className: `p-4 rounded-full bg-[#e1aa1e]/90 hover:bg-[#e1aa1e] transition-all transform \n                hover:scale-105 active:scale-95 ${isPlaying ? 'animate-pulse' : ''}`,\n            disabled: !currentAudio,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-8 h-8 text-gray-900\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: isPlaying ? /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2.5,\n                d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 944,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2.5,\n                d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 951,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 937,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 922,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 912,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-[#1e1e1e]/50\",\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          ref: audioRef,\n          src: currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.url,\n          onTimeUpdate: handleTimeUpdate,\n          onEnded: handleAudioEnd,\n          onPlay: () => window.dispatchEvent(new Event('audioPlay')),\n          onPause: () => window.dispatchEvent(new Event('audioStop')),\n          className: \"hidden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 965,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-1 bg-[#404040] rounded-full cursor-pointer mb-2\",\n          onClick: handleProgressClick,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-full bg-[#e1aa1e] rounded-full\",\n            style: {\n              width: `${progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between text-xs text-gray-400 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatTime(((_audioRef$current5 = audioRef.current) === null || _audioRef$current5 === void 0 ? void 0 : _audioRef$current5.currentTime) || 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 988,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatTime(((_audioRef$current6 = audioRef.current) === null || _audioRef$current6 === void 0 ? void 0 : _audioRef$current6.duration) || 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 989,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 987,\n          columnNumber: 11\n        }, this), (() => {\n          const nextInfo = getNextAudioInfo();\n          if (!(nextInfo !== null && nextInfo !== void 0 && nextInfo.nextAudio)) return null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-right bg-[#2d2d2d] px-3 py-1 rounded border border-[#404040]/50\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-400\",\n                children: [\"Pr\\xF3ximo: \", nextInfo.nextAudio.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1000,\n                columnNumber: 19\n              }, this), nextInfo.timer && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-[#e1aa1e]\",\n                children: [\"Em \", formatTimeLeft(nextInfo.timer.timeLeft)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1004,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 999,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 998,\n            columnNumber: 15\n          }, this);\n        })()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-400 px-2\",\n          children: \"Lista de \\xC1udios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1018,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1017,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"bg-[#e1aa1e] hover:bg-[#e1aa1e]/80 text-gray-900 px-3 py-1.5 rounded cursor-pointer transition-colors text-sm\",\n          children: [isUploading ? 'Enviando...' : 'Anexar Áudio', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"hidden\",\n            accept: \"audio/*\",\n            onChange: handleUpload,\n            disabled: isUploading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1023,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1022,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2 max-h-[400px] overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-400 italic mb-2 px-2\",\n        children: \"Clique no \\xEDcone de edi\\xE7\\xE3o ou d\\xEA um duplo clique no nome para renomear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1038,\n        columnNumber: 9\n      }, this), audios.map(audio => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors min-w-0 bg-[#1e1e1e] mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => togglePlay(audio),\n          className: \"p-1 hover:bg-[#404040] rounded-full transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-6 h-6 text-[#e1aa1e]\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: isPlaying && (currentAudio === null || currentAudio === void 0 ? void 0 : currentAudio.id) === audio.id ? /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1058,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1065,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1051,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 13\n        }, this), editingAudioId === audio.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editingTitle,\n          onChange: e => setEditingTitle(e.target.value),\n          onBlur: () => {\n            if (editingTitle.trim() && editingTitle !== audio.title) {\n              handleUpdateTitle(audio.id, editingTitle);\n            } else {\n              setEditingAudioId(null);\n            }\n          },\n          onKeyDown: e => {\n            if (e.key === 'Enter') {\n              if (editingTitle.trim() && editingTitle !== audio.title) {\n                handleUpdateTitle(audio.id, editingTitle);\n              } else {\n                setEditingAudioId(null);\n              }\n            } else if (e.key === 'Escape') {\n              setEditingAudioId(null);\n            }\n          },\n          className: \"flex-1 bg-[#1e1e1e] text-gray-200 px-2 py-1 rounded border border-[#404040] focus:border-[#e1aa1e] focus:outline-none\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1076,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 flex items-center group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"truncate cursor-pointer hover:text-[#e1aa1e]\",\n              onDoubleClick: () => {\n                setEditingAudioId(audio.id);\n                setEditingTitle(audio.title);\n              },\n              children: audio.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setEditingAudioId(audio.id);\n                setEditingTitle(audio.title);\n              },\n              className: \"p-1 rounded-full hover:bg-[#404040] opacity-0 group-hover:opacity-100 transition-all ml-1\",\n              title: \"Editar nome\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-4 h-4 text-[#e1aa1e]\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1127,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1121,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 shrink-0\",\n          children: [audioTimers[audio.id] ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              handleShowConfirmDialog(e, audio.id);\n            },\n            className: \"flex items-center gap-1.5 px-2 py-1 rounded bg-[#e1aa1e]/10 text-[#e1aa1e] hover:bg-[#e1aa1e]/20 transition-colors\",\n            title: \"Clique para desativar a repeti\\xE7\\xE3o\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-4 h-4\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1154,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1148,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: formatTimeLeft(audioTimers[audio.id].timeLeft)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1161,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1141,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              handleShowTimerDialog(e, audio.id);\n            },\n            className: \"p-1.5 hover:bg-[#404040] rounded transition-colors text-gray-400 hover:text-[#e1aa1e]\",\n            title: \"Ativar repeti\\xE7\\xE3o autom\\xE1tica\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-4 h-4\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1179,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1173,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1166,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              setDeletePosition({\n                x: e.currentTarget.getBoundingClientRect().x,\n                y: e.currentTarget.getBoundingClientRect().y + 30\n              });\n              setShowDeleteConfirm(audio.id);\n            },\n            className: \"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\",\n            title: \"Excluir \\xE1udio\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-5 h-5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1203,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1197,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1139,\n          columnNumber: 13\n        }, this)]\n      }, audio.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1043,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1037,\n      columnNumber: 7\n    }, this), showTimerDialog && /*#__PURE__*/_jsxDEV(SetTimerDialog, {\n      audioId: showTimerDialog,\n      audioTitle: ((_audios$find = audios.find(a => a.id === showTimerDialog)) === null || _audios$find === void 0 ? void 0 : _audios$find.title) || '',\n      onConfirm: minutes => {\n        startRepeatTimer(showTimerDialog, minutes);\n        setShowTimerDialog(null);\n        setPopupPosition(null);\n        setTimerInputValue('');\n      },\n      onCancel: () => {\n        setShowTimerDialog(null);\n        setPopupPosition(null);\n        setTimerInputValue('');\n      },\n      buttonPosition: popupPosition,\n      inputValue: timerInputValue,\n      onInputChange: setTimerInputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1217,\n      columnNumber: 9\n    }, this), showConfirmDialog && /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      audioId: showConfirmDialog,\n      onConfirm: () => {\n        stopRepeatTimer(showConfirmDialog);\n        setShowConfirmDialog(null);\n        setConfirmPosition(null);\n      },\n      onEdit: () => {\n        setShowConfirmDialog(null);\n        setConfirmPosition(null);\n        // Abre o diálogo de timer com a posição atual\n        setPopupPosition(confirmPosition);\n        setShowTimerDialog(showConfirmDialog);\n      },\n      onCancel: () => {\n        setShowConfirmDialog(null);\n        setConfirmPosition(null);\n      },\n      buttonPosition: confirmPosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1238,\n      columnNumber: 9\n    }, this), showDeleteConfirm && /*#__PURE__*/_jsxDEV(DeleteConfirmDialog, {\n      audioId: showDeleteConfirm,\n      onConfirm: () => {\n        handleDelete(showDeleteConfirm);\n        setShowDeleteConfirm(null);\n        setDeletePosition(null);\n      },\n      onCancel: () => {\n        setShowDeleteConfirm(null);\n        setDeletePosition(null);\n      },\n      buttonPosition: deletePosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1261,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 901,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"byQv/45/dVFrwD9wd2mez7xBEZY=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","audioService","supabase","jsxDEV","_jsxDEV","AudioPlayer","onEnded","isPlaying","setIsPlaying","_s","_audioRef$current5","_audioRef$current6","_audios$find","audios","setAudios","currentAudio","setCurrentAudio","progress","setProgress","isUploading","setIsUploading","audioRef","audioTimers","setAudioTimers","timersRef","timerAudioId","setTimerAudioId","pendingAudioId","setPendingAudioId","pendingAudios","setPendingAudios","playAttemptRef","editingAudioId","setEditingAudioId","editingTitle","setEditingTitle","showConfirmDialog","setShowConfirmDialog","showTimerDialog","setShowTimerDialog","popupPosition","setPopupPosition","confirmPosition","setConfirmPosition","isAnimating","setIsAnimating","timerInputValue","setTimerInputValue","preferences","setPreferences","playAttempts","setPlayAttempts","MAX_PLAY_ATTEMPTS","showDeleteConfirm","setShowDeleteConfirm","deletePosition","setDeletePosition","canvasRef","analyserRef","animationRef","loadAudios","current","_canvasRef$current$ge","getContext","clearRect","width","height","data","getAudios","forEach","audio","loadAudioPreferences","id","error","console","audioId","prefs","loadPreferences","auto_repeat","timer_end_at","endTime","Date","getTime","now","timeLeft","Math","max","floor","log","interval","repeat_interval","newEndTime","toISOString","updatePreferences","startNewTimerCycle","undefined","prev","last_played_at","play_count","handleTimeUpdate","currentTime","duration","handleProgressClick","e","bounds","currentTarget","getBoundingClientRect","x","clientX","left","percentage","existingEndTime","clearInterval","intervalId","setInterval","timerEndTime","newTimeLeft","audioToPlay","find","a","title","togglePlay","handleAudioEnd","pause","_audioRef$current","_audioRef$current2","play","playPromise","catch","handleUpload","event","_event$target$files","file","target","files","name","fileExt","split","pop","fileName","random","filePath","uploadData","uploadError","storage","from","upload","publicUrl","getPublicUrl","newAudio","addAudio","url","value","startRepeatTimer","minutes","seconds","stopRepeatTimer","newTimers","handleDelete","_fileUrl$split$","audioToDelete","fileUrl","storageError","remove","Promise","resolve","setTimeout","list","search","deleteAudio","newPrefs","updatedFiles","formatTime","mins","secs","toString","padStart","formatTimeLeft","ceil","remainingSeconds","getNextAudioInfo","length","nextAudioId","nextAudio","timer","nextScheduledAudio","shortestTime","Infinity","Object","entries","handleUpdateTitle","newTitle","updateAudio","map","ConfirmDialog","onConfirm","onEdit","onCancel","buttonPosition","className","onClick","children","style","top","y","transform","opacity","transition","_jsxFileName","lineNumber","columnNumber","SetTimerDialog","audioTitle","inputValue","onInputChange","type","min","onChange","placeholder","onKeyDown","key","parseInt","autoFocus","disabled","handleShowTimerDialog","rect","handleShowConfirmDialog","document","createElement","innerHTML","head","appendChild","DeleteConfirmDialog","_canvasRef$current$ge2","_canvasRef$current$ge3","animate","canvas","ctx","bufferLength","frequencyBinCount","dataArray","Uint8Array","draw","requestAnimationFrame","getByteFrequencyData","fillStyle","fillRect","waves","points","spacing","w","baseY","beginPath","moveTo","index","amplitude","frequency","phase","sin","lineTo","gradient","createLinearGradient","alpha","addColorStop","strokeStyle","lineWidth","stroke","save","filter","restore","i","size","arc","PI","fill","ref","_audioRef$current3","_audioRef$current4","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","src","onTimeUpdate","onPlay","window","dispatchEvent","Event","onPause","nextInfo","accept","onBlur","trim","onDoubleClick","_c","$RefreshReg$"],"sources":["C:/Users/genil/Desktop/Dev Sistema academia/src/components/AudioPlayer.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { audioService, AudioData } from '../lib/supabase';\nimport { supabase } from '../lib/supabase';\nimport '../styles/animations.css';\n\ninterface AudioTimer {\n  interval: number;\n  timeLeft: number;\n  intervalId: NodeJS.Timeout;\n  endTime: string;\n}\n\ninterface AudioPlayerProps {\n  onEnded: () => void;\n  isPlaying: boolean;\n  setIsPlaying: (playing: boolean) => void;\n}\n\nconst AudioPlayer: React.FC<AudioPlayerProps> = ({ onEnded, isPlaying, setIsPlaying }) => {\n  const [audios, setAudios] = useState<AudioData[]>([]);\n  const [currentAudio, setCurrentAudio] = useState<AudioData | null>(null);\n  const [progress, setProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const [audioTimers, setAudioTimers] = useState<Record<string, AudioTimer>>({});\n  const timersRef = useRef<Record<string, NodeJS.Timeout>>({});\n  const [timerAudioId, setTimerAudioId] = useState<string | null>(null);\n  const [pendingAudioId, setPendingAudioId] = useState<string | null>(null);\n  const [pendingAudios, setPendingAudios] = useState<string[]>([]);\n  const playAttemptRef = useRef<NodeJS.Timeout | null>(null);\n  const [editingAudioId, setEditingAudioId] = useState<string | null>(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [showConfirmDialog, setShowConfirmDialog] = useState<string | null>(null);\n  const [showTimerDialog, setShowTimerDialog] = useState<string | null>(null);\n  const [popupPosition, setPopupPosition] = useState<{ x: number; y: number } | null>(null);\n  const [confirmPosition, setConfirmPosition] = useState<{ x: number; y: number } | null>(null);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [timerInputValue, setTimerInputValue] = useState('');\n  const [preferences, setPreferences] = useState<Record<string, {\n    auto_repeat: boolean;\n    repeat_interval: number;\n    last_played_at?: string;\n    play_count: number;\n  }>>({});\n  const [playAttempts, setPlayAttempts] = useState(0);\n  const MAX_PLAY_ATTEMPTS = 3;\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState<string | null>(null);\n  const [deletePosition, setDeletePosition] = useState<{ x: number; y: number } | null>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const analyserRef = useRef<AnalyserNode | null>(null);\n  const animationRef = useRef<number | null>(null);\n\n  useEffect(() => {\n    loadAudios();\n    return () => {\n      if (canvasRef.current) {\n        canvasRef.current.getContext('2d')?.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      }\n    };\n  }, []);\n\n  const loadAudios = async () => {\n    try {\n      const data = await audioService.getAudios();\n      setAudios(data);\n      \n      // Carrega as preferências para cada áudio\n      data.forEach(audio => {\n        loadAudioPreferences(audio.id);\n      });\n    } catch (error) {\n      console.error('Erro ao carregar áudios:', error);\n    }\n  };\n\n  const loadAudioPreferences = async (audioId: string) => {\n    try {\n      const prefs = await audioService.loadPreferences(audioId);\n      \n      if (prefs.auto_repeat && prefs.timer_end_at) {\n        const endTime = new Date(prefs.timer_end_at).getTime();\n        const now = Date.now();\n        const timeLeft = Math.max(0, Math.floor((endTime - now) / 1000));\n        \n        console.log(`Verificando timer para ${audioId}:`, {\n          timeLeft,\n          endTime: prefs.timer_end_at,\n          interval: prefs.repeat_interval\n        });\n\n        // Se ainda há tempo restante ou se acabou de terminar\n        if (timeLeft >= 0) {\n          const interval = prefs.repeat_interval * 60;\n          \n          // Se o timer acabou de terminar, cria um novo ciclo\n          if (timeLeft === 0) {\n            console.log(`Timer ${audioId} terminou durante reload, iniciando novo ciclo`);\n            const newEndTime = new Date(Date.now() + interval * 1000).toISOString();\n            \n            // Atualiza o endTime no banco\n            await audioService.updatePreferences(audioId, {\n              ...prefs,\n              timer_end_at: newEndTime\n            });\n\n            // Inicia novo ciclo com o novo endTime\n            startNewTimerCycle(audioId, interval, newEndTime);\n          } else {\n            // Continua o ciclo atual com o tempo restante\n            console.log(`Restaurando timer para ${audioId} com ${timeLeft}s restantes`);\n            startNewTimerCycle(audioId, interval, prefs.timer_end_at);\n          }\n        } else {\n          // Se o timer expirou há muito tempo, desativa-o\n          console.log(`Timer ${audioId} expirado, desativando`);\n          await audioService.updatePreferences(audioId, {\n            auto_repeat: false,\n            timer_end_at: undefined,\n            repeat_interval: 0\n          });\n        }\n      }\n\n      // Atualiza as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          auto_repeat: prefs.auto_repeat || false,\n          repeat_interval: prefs.repeat_interval || 0,\n          last_played_at: prefs.last_played_at,\n          play_count: prefs.play_count || 0\n        }\n      }));\n\n    } catch (error) {\n      console.error('Erro ao carregar preferências:', error);\n    }\n  };\n\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const progress = (audioRef.current.currentTime / audioRef.current.duration) * 100;\n      setProgress(progress);\n    }\n  };\n\n  const handleProgressClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (audioRef.current) {\n      const bounds = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - bounds.left;\n      const width = bounds.width;\n      const percentage = x / width;\n      audioRef.current.currentTime = audioRef.current.duration * percentage;\n    }\n  };\n\n  const startNewTimerCycle = (audioId: string, interval: number, existingEndTime?: string) => {\n    console.log('Iniciando novo ciclo de timer:', { audioId, interval, existingEndTime });\n    \n    const endTime = existingEndTime || new Date(Date.now() + interval * 1000).toISOString();\n    \n    // Limpa o timer anterior se existir\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n    }\n\n    // Salva o estado inicial do timer\n    setAudioTimers(prev => ({\n      ...prev,\n      [audioId]: {\n        interval,\n        timeLeft: existingEndTime ? \n          Math.max(0, Math.floor((new Date(existingEndTime).getTime() - Date.now()) / 1000)) : \n          interval,\n        intervalId: null as any, // Será atualizado abaixo\n        endTime\n      }\n    }));\n\n    // Cria o novo intervalo\n    const intervalId = setInterval(async () => {\n      const currentTime = Date.now();\n      const timerEndTime = new Date(endTime).getTime();\n      const newTimeLeft = Math.max(0, Math.floor((timerEndTime - currentTime) / 1000));\n\n      console.log(`Timer ${audioId} - Tempo restante:`, newTimeLeft);\n\n      if (newTimeLeft === 0) {\n        console.log('Timer zerou, preparando para reproduzir:', audioId);\n        \n        // Encontra o áudio correspondente\n        const audioToPlay = audios.find(a => a.id === audioId);\n        if (audioToPlay) {\n          // Atualiza as preferências com novo endTime\n          const newEndTime = new Date(Date.now() + interval * 1000).toISOString();\n          await audioService.updatePreferences(audioId, {\n            auto_repeat: true,\n            repeat_interval: interval / 60,\n            timer_end_at: newEndTime\n          });\n\n          // Atualiza o timer local\n          setAudioTimers(prev => ({\n            ...prev,\n            [audioId]: {\n              ...prev[audioId],\n              timeLeft: interval,\n              endTime: newEndTime\n            }\n          }));\n\n          // Reproduz o áudio\n          console.log('Reproduzindo áudio após timer:', audioToPlay.title);\n          togglePlay(audioToPlay);\n        }\n      } else {\n        // Atualiza apenas o tempo restante\n        setAudioTimers(prev => ({\n          ...prev,\n          [audioId]: {\n            ...prev[audioId],\n            timeLeft: newTimeLeft\n          }\n        }));\n      }\n    }, 1000);\n\n    // Atualiza o ID do intervalo no estado e na ref\n    setAudioTimers(prev => ({\n      ...prev,\n      [audioId]: {\n        ...prev[audioId],\n        intervalId\n      }\n    }));\n    timersRef.current[audioId] = intervalId;\n\n    return intervalId;\n  };\n\n  const handleAudioEnd = () => {\n    if (onEnded) {\n      onEnded();\n    }\n  };\n\n  const togglePlay = (audio: AudioData) => {\n    // Se clicou em um áudio diferente do atual\n    if (currentAudio?.id !== audio.id) {\n      console.log('Trocando para novo áudio:', audio.title);\n      // Para o áudio atual se estiver tocando\n      if (audioRef.current) {\n        audioRef.current.pause();\n      }\n      // Define o novo áudio e inicia a reprodução\n      setCurrentAudio(audio);\n      setIsPlaying(true);\n      // Reseta o tempo de reprodução\n      if (audioRef.current) {\n        audioRef.current.currentTime = 0;\n      }\n    } else {\n      // Se clicou no mesmo áudio, apenas alterna play/pause\n      setIsPlaying(!isPlaying);\n      if (isPlaying) {\n        audioRef.current?.pause();\n      } else {\n        audioRef.current?.play();\n      }\n    }\n  };\n\n  // Adicione este useEffect para controlar a reprodução quando o áudio mudar\n  useEffect(() => {\n    if (currentAudio && isPlaying && audioRef.current) {\n      console.log('Iniciando reprodução do áudio:', currentAudio.title);\n      const playPromise = audioRef.current.play();\n      \n      if (playPromise !== undefined) {\n        playPromise.catch(error => {\n          console.error('Erro ao reproduzir áudio:', error);\n        });\n      }\n    }\n  }, [currentAudio, isPlaying]);\n\n  const handleUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    setIsUploading(true);\n    try {\n      console.log('Iniciando upload do arquivo:', file.name);\n      \n      // Upload do arquivo\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${Math.random()}.${fileExt}`;\n      const filePath = `audios/${fileName}`;\n\n      console.log('Tentando fazer upload para:', filePath);\n\n      const { data: uploadData, error: uploadError } = await supabase.storage\n        .from('media')\n        .upload(filePath, file);\n\n      if (uploadError) {\n        console.error('Erro no upload:', uploadError);\n        throw uploadError;\n      }\n\n      console.log('Upload bem sucedido:', uploadData);\n\n      // Obtém a URL pública\n      const { data: { publicUrl } } = supabase.storage\n        .from('media')\n        .getPublicUrl(filePath);\n\n      console.log('URL pública gerada:', publicUrl);\n\n      // Adiciona ao banco de dados\n      const newAudio = await audioService.addAudio({\n        title: file.name,\n        url: publicUrl,\n        auto_repeat: false,\n        repeat_interval: 0,\n        play_count: 0\n      });\n\n      console.log('Áudio adicionado ao banco:', newAudio);\n\n      // Recarrega todos os áudios\n      await loadAudios();\n      \n      // Seleciona o novo áudio\n      setCurrentAudio(newAudio);\n      \n      // Limpa o input\n      event.target.value = '';\n\n    } catch (error) {\n      console.error('Erro detalhado no upload:', error);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const startRepeatTimer = async (audioId: string, minutes: number) => {\n    setTimerAudioId(audioId);\n    const seconds = minutes * 60;\n    \n    // Inicia o novo ciclo do timer\n    startNewTimerCycle(audioId, seconds);\n\n    // Calcula o tempo de término\n    const endTime = new Date(Date.now() + seconds * 1000).toISOString();\n\n    // Salva as preferências no banco\n    try {\n      const prefs = {\n        auto_repeat: true,\n        repeat_interval: minutes,\n        timer_end_at: endTime\n      };\n      \n      await audioService.updatePreferences(audioId, prefs);\n      \n      // Atualiza também as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          ...prev[audioId],\n          auto_repeat: true,\n          repeat_interval: minutes\n        }\n      }));\n      \n      console.log(`Timer salvo para ${audioId} com intervalo de ${minutes}min`);\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n\n  const stopRepeatTimer = async (audioId: string) => {\n    // Não para o timer se o áudio estiver tocando\n    if (currentAudio?.id === audioId && isPlaying) {\n      return;\n    }\n\n    if (timersRef.current[audioId]) {\n      clearInterval(timersRef.current[audioId]);\n      delete timersRef.current[audioId];\n    }\n\n    setAudioTimers(prev => {\n      const newTimers = { ...prev };\n      delete newTimers[audioId];\n      return newTimers;\n    });\n\n    try {\n      const prefs = {\n        auto_repeat: false,\n        repeat_interval: 0,\n        timer_end_at: undefined\n      };\n      \n      await audioService.updatePreferences(audioId, prefs);\n      \n      // Atualiza também as preferências locais\n      setPreferences(prev => ({\n        ...prev,\n        [audioId]: {\n          ...prev[audioId],\n          auto_repeat: false,\n          repeat_interval: 0\n        }\n      }));\n      \n      console.log(`Timer removido para ${audioId}`);\n    } catch (error) {\n      console.error('Erro ao salvar preferências:', error);\n    }\n  };\n\n  const handleDelete = async (audioId: string) => {\n    try {\n      const audioToDelete = audios.find(a => a.id === audioId);\n      if (!audioToDelete) return;\n\n      const fileUrl = audioToDelete.url;\n      const fileName = fileUrl.split('/audios/')[1]?.split('?')[0];\n\n      if (fileName) {\n        console.log('Tentando remover arquivo:', fileName);\n\n        try {\n          // Primeira tentativa de remoção\n          const { error: storageError } = await supabase.storage\n            .from('media')\n            .remove([`audios/${fileName}`]);\n\n          if (storageError) {\n            console.error('Erro ao remover arquivo:', storageError);\n            \n            // Se falhar, espera um momento e tenta novamente\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            \n            // Segunda tentativa\n            await supabase.storage\n              .from('media')\n              .remove([`audios/${fileName}`]);\n          }\n\n          // Verifica se o arquivo ainda existe\n          const { data: files } = await supabase.storage\n            .from('media')\n            .list('audios', {\n              search: fileName\n            });\n\n          console.log('Verificação após remoção:', files);\n        } catch (storageError) {\n          console.error('Erro ao acessar storage:', storageError);\n        }\n      }\n\n      // Remove o registro do banco de dados\n      await audioService.deleteAudio(audioId);\n\n      // Atualiza estados locais\n      if (currentAudio?.id === audioId) {\n        setCurrentAudio(null);\n        setIsPlaying(false);\n      }\n\n      if (audioTimers[audioId]) {\n        await stopRepeatTimer(audioId);\n      }\n\n      setPreferences(prev => {\n        const newPrefs = { ...prev };\n        delete newPrefs[audioId];\n        return newPrefs;\n      });\n\n      // Força uma atualização da lista de arquivos no storage\n      const { data: updatedFiles } = await supabase.storage\n        .from('media')\n        .list('audios');\n\n      console.log('Lista atualizada de arquivos:', updatedFiles);\n\n      // Recarrega a lista de áudios\n      await loadAudios();\n\n      console.log('Áudio removido com sucesso:', audioId);\n    } catch (error) {\n      console.error('Erro ao deletar áudio:', error);\n      try {\n        await loadAudios();\n      } catch (e) {\n        console.error('Erro ao recarregar áudios após falha:', e);\n      }\n    }\n  };\n\n  const formatTime = (seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Adicione esta função auxiliar para formatar o tempo do timer\n  const formatTimeLeft = (seconds: number): string => {\n    if (seconds < 60) {\n      return `${Math.ceil(seconds)}s`;\n    }\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.ceil(seconds % 60);\n    return `${minutes}min ${remainingSeconds}s`;\n  };\n\n  // Modifique a função getNextAudioInfo para verificar os timers ativos\n  const getNextAudioInfo = () => {\n    // Primeiro, verifica se há algum áudio pendente na fila\n    if (pendingAudios.length > 0) {\n      const nextAudioId = pendingAudios[0];\n      const nextAudio = audios.find(a => a.id === nextAudioId);\n      const timer = audioTimers[nextAudioId];\n      \n      return { nextAudio, timer };\n    }\n\n    // Se não há áudios pendentes, procura o próximo áudio agendado\n    let nextScheduledAudio = null;\n    let shortestTime = Infinity;\n\n    Object.entries(audioTimers).forEach(([audioId, timer]) => {\n      if (timer.timeLeft < shortestTime) {\n        const audio = audios.find(a => a.id === audioId);\n        if (audio) {\n          nextScheduledAudio = {\n            nextAudio: audio,\n            timer: timer\n          };\n          shortestTime = timer.timeLeft;\n        }\n      }\n    });\n\n    return nextScheduledAudio;\n  };\n\n  const handleUpdateTitle = async (audioId: string, newTitle: string) => {\n    try {\n      await audioService.updateAudio(audioId, { title: newTitle });\n      // Atualiza o estado local dos áudios\n      setAudios(prev => prev.map(audio => \n        audio.id === audioId ? { ...audio, title: newTitle } : audio\n      ));\n      // Se o áudio sendo editado é o atual, atualiza também o currentAudio\n      if (currentAudio?.id === audioId) {\n        setCurrentAudio(prev => prev ? { ...prev, title: newTitle } : null);\n      }\n      setEditingAudioId(null);\n    } catch (error) {\n      console.error('Erro ao atualizar título:', error);\n    }\n  };\n\n  const ConfirmDialog = ({ \n    audioId, \n    onConfirm,\n    onEdit,\n    onCancel,\n    buttonPosition\n  }: { \n    audioId: string;\n    onConfirm: () => void;\n    onEdit: () => void;\n    onCancel: () => void;\n    buttonPosition: { x: number; y: number } | null;\n  }) => (\n    <div className=\"fixed inset-0 z-50\" onClick={(e) => {\n      if (e.target === e.currentTarget) onCancel();\n    }}>\n      <div \n        className=\"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\"\n        style={{\n          top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n          left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n          transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n          opacity: isAnimating ? 0 : 1,\n          transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n        }}\n      >\n        <h3 className=\"text-[#e1aa1e] font-medium text-sm mb-2\">Gerenciar Repetição</h3>\n        <p className=\"text-gray-300 text-xs mb-4\">\n          Escolha uma das opções para editar a repetição automática:\n        </p>\n        <div className=\"flex justify-end gap-2\">\n          <button\n            onClick={onCancel}\n            className=\"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\"\n          >\n            Cancelar\n          </button>\n          <button\n            onClick={onEdit}\n            className=\"px-3 py-1.5 rounded bg-[#e1aa1e]/20 text-xs text-[#e1aa1e] hover:bg-[#e1aa1e]/30 transition-colors\"\n          >\n            Editar\n          </button>\n          <button\n            onClick={onConfirm}\n            className=\"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors\"\n          >\n            Desativar\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  const SetTimerDialog = ({ \n    audioId, \n    audioTitle,\n    onConfirm, \n    onCancel,\n    buttonPosition,\n    inputValue,\n    onInputChange\n  }: { \n    audioId: string;\n    audioTitle: string;\n    onConfirm: (minutes: number) => void;\n    onCancel: () => void;\n    buttonPosition: { x: number; y: number } | null;\n    inputValue: string;\n    onInputChange: (value: string) => void;\n  }) => {\n    return (\n      <div className=\"fixed inset-0 z-50\" onClick={(e) => {\n        if (e.target === e.currentTarget) onCancel();\n      }}>\n        <div \n          className=\"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\"\n          style={{\n            top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n            left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n            transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n            opacity: isAnimating ? 0 : 1,\n            transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n          }}\n        >\n          <h3 className=\"text-[#e1aa1e] font-medium text-sm mb-2\">Repetir Áudio</h3>\n          <p className=\"text-gray-300 text-xs mb-3 truncate\">\n            {audioTitle}\n          </p>\n          \n          <div className=\"relative mb-4\">\n            <input\n              type=\"number\"\n              min=\"1\"\n              value={inputValue}\n              onChange={(e) => onInputChange(e.target.value)}\n              placeholder=\"00\"\n              className=\"w-full px-3 py-2 bg-[#1e1e1e] border border-[#404040] rounded text-gray-200 text-center focus:border-[#e1aa1e] focus:outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none pr-12\"\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  const value = parseInt(inputValue);\n                  if (value > 0) onConfirm(value);\n                } else if (e.key === 'Escape') {\n                  onCancel();\n                }\n              }}\n              autoFocus\n            />\n            <span className=\"absolute right-3 top-1/2 -translate-y-1/2 text-xs text-gray-400\">\n              minutos\n            </span>\n          </div>\n\n          <div className=\"flex justify-end gap-2\">\n            <button\n              onClick={onCancel}\n              className=\"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\"\n            >\n              Cancelar\n            </button>\n            <button\n              onClick={() => {\n                const value = parseInt(inputValue);\n                if (value > 0) onConfirm(value);\n              }}\n              disabled={!inputValue || parseInt(inputValue) <= 0}\n              className=\"px-3 py-1.5 rounded bg-[#e1aa1e] text-xs text-gray-900 hover:bg-[#e1aa1e]/80 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              Ativar\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const handleShowTimerDialog = (e: React.MouseEvent, audioId: string) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setPopupPosition({ \n      x: rect.left + rect.width/2, \n      y: rect.top + rect.height/2 \n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowTimerDialog(audioId);\n    }, 10);\n  };\n\n  const handleShowConfirmDialog = (e: React.MouseEvent, audioId: string) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setConfirmPosition({ \n      x: rect.left + rect.width/2, \n      y: rect.top + rect.height/2 \n    });\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n      setShowConfirmDialog(audioId);\n    }, 10);\n  };\n\n  // Adicione este useEffect para gerenciar a seleção de texto\n  useEffect(() => {\n    const style = document.createElement('style');\n    style.innerHTML = `\n      .dragging * {\n        user-select: none !important;\n        -webkit-user-select: none !important;\n        cursor: grabbing !important;\n      }\n    `;\n    document.head.appendChild(style);\n    return () => style.remove();\n  }, []);\n\n  const DeleteConfirmDialog = ({ \n    audioId, \n    onConfirm,\n    onCancel,\n    buttonPosition\n  }: { \n    audioId: string;\n    onConfirm: () => void;\n    onCancel: () => void;\n    buttonPosition: { x: number; y: number } | null;\n  }) => (\n    <div className=\"fixed inset-0 z-50\" onClick={(e) => {\n      if (e.target === e.currentTarget) onCancel();\n    }}>\n      <div \n        className=\"absolute bg-[#2d2d2d] p-4 rounded-lg border border-[#404040] shadow-lg w-64\"\n        style={{\n          top: buttonPosition ? `${buttonPosition.y - 80}px` : '50%',\n          left: buttonPosition ? `${buttonPosition.x - 100}px` : '50%',\n          transform: isAnimating ? 'scale(0.9)' : 'scale(1)',\n          opacity: isAnimating ? 0 : 1,\n          transition: 'transform 0.2s ease-out, opacity 0.2s ease-out'\n        }}\n      >\n        <h3 className=\"text-red-500 font-medium text-sm mb-2\">Confirmar Exclusão</h3>\n        <p className=\"text-gray-300 text-xs mb-4\">\n          Tem certeza que deseja excluir este áudio?\n        </p>\n        <div className=\"flex justify-end gap-2\">\n          <button\n            onClick={onCancel}\n            className=\"px-3 py-1.5 rounded bg-[#404040] text-xs text-gray-200 hover:bg-[#505050] transition-colors\"\n          >\n            Cancelar\n          </button>\n          <button\n            onClick={onConfirm}\n            className=\"px-3 py-1.5 rounded bg-red-500 text-xs text-white hover:bg-red-600 transition-colors\"\n          >\n            Excluir\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  useEffect(() => {\n    if (audioRef.current && canvasRef.current) {\n      if (isPlaying) {\n        audioRef.current.play();\n        canvasRef.current.getContext('2d')?.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      } else {\n        audioRef.current.pause();\n        canvasRef.current.getContext('2d')?.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      }\n    }\n  }, [isPlaying]);\n\n  const animate = () => {\n    if (!canvasRef.current || !analyserRef.current) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const bufferLength = analyserRef.current.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n\n    const draw = () => {\n      animationRef.current = requestAnimationFrame(draw);\n      analyserRef.current!.getByteFrequencyData(dataArray);\n\n      // Fundo com gradiente\n      ctx.fillStyle = '#1e1e1e';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Número de ondas e configurações\n      const waves = 3;\n      const points = 100;\n      const spacing = canvas.height / (waves + 1);\n\n      // Para cada linha de onda\n      for (let w = 1; w <= waves; w++) {\n        const baseY = spacing * w;\n        \n        ctx.beginPath();\n        ctx.moveTo(0, baseY);\n\n        // Desenha a onda através da largura do canvas\n        for (let x = 0; x <= canvas.width; x++) {\n          const progress = x / canvas.width;\n          const index = Math.floor(progress * bufferLength);\n          const value = dataArray[index] / 255.0;\n          \n          // Amplitude varia com o áudio\n          const amplitude = isPlaying ? 30 * value : 10;\n          \n          // Frequência e fase variam com o tempo e posição\n          const frequency = 0.02;\n          const phase = Date.now() * 0.002 + w;\n          \n          // Calcula a posição Y com múltiplas ondas sobrepostas\n          const y = baseY + \n                   Math.sin(x * frequency + phase) * amplitude +\n                   Math.sin(x * frequency * 0.5 + phase * 1.5) * amplitude * 0.5;\n\n          ctx.lineTo(x, y);\n        }\n\n        // Gradiente para a onda\n        const gradient = ctx.createLinearGradient(0, baseY - 50, 0, baseY + 50);\n        const alpha = isPlaying ? (0.5 - (w - 1) * 0.1) : 0.2;\n        \n        gradient.addColorStop(0, `rgba(225, 170, 30, 0)`);\n        gradient.addColorStop(0.5, `rgba(225, 170, 30, ${alpha})`);\n        gradient.addColorStop(1, `rgba(225, 170, 30, 0)`);\n\n        ctx.strokeStyle = gradient;\n        ctx.lineWidth = 2;\n        ctx.stroke();\n\n        // Efeito de brilho\n        if (isPlaying) {\n          ctx.save();\n          ctx.filter = 'blur(4px)';\n          ctx.strokeStyle = `rgba(225, 170, 30, ${alpha * 0.5})`;\n          ctx.lineWidth = 4;\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n\n      // Adiciona partículas brilhantes\n      if (isPlaying) {\n        for (let i = 0; i < bufferLength; i += 8) {\n          const value = dataArray[i] / 255.0;\n          if (value > 0.5) {\n            const x = Math.random() * canvas.width;\n            const y = Math.random() * canvas.height;\n            const size = Math.random() * 3 * value;\n\n            ctx.beginPath();\n            ctx.arc(x, y, size, 0, Math.PI * 2);\n            ctx.fillStyle = `rgba(225, 170, 30, ${value * 0.3})`;\n            ctx.fill();\n          }\n        }\n      }\n    };\n\n    draw();\n  };\n\n  return (\n    <div className=\"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-4\">\n      {/* Player Principal com Visualizador */}\n      <div className=\"mb-4 bg-[#2d2d2d] rounded-lg border border-[#404040] overflow-hidden\">\n        {/* Título do Áudio */}\n        <div className=\"p-3 border-b border-[#404040]\">\n          <h3 className=\"text-[#e1aa1e] font-medium text-center\">\n            {currentAudio?.title || 'Selecione um áudio'}\n          </h3>\n        </div>\n\n        {/* Área do Visualizador */}\n        <div className=\"relative h-32 bg-[#1e1e1e] p-4\">\n          <canvas\n            ref={canvasRef}\n            className=\"absolute inset-0 w-full h-full\"\n            width={1000}\n            height={200}\n          />\n          \n          {/* Botão de Play centralizado */}\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <button\n              onClick={() => {\n                if (currentAudio) {\n                  setIsPlaying(!isPlaying);\n                  if (isPlaying) {\n                    audioRef.current?.pause();\n                  } else {\n                    audioRef.current?.play();\n                  }\n                }\n              }}\n              className={`p-4 rounded-full bg-[#e1aa1e]/90 hover:bg-[#e1aa1e] transition-all transform \n                hover:scale-105 active:scale-95 ${isPlaying ? 'animate-pulse' : ''}`}\n              disabled={!currentAudio}\n            >\n              <svg\n                className=\"w-8 h-8 text-gray-900\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                {isPlaying ? (\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2.5}\n                    d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                ) : (\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2.5}\n                    d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                )}\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        {/* Controles e Progresso */}\n        <div className=\"p-4 bg-[#1e1e1e]/50\">\n          <audio\n            ref={audioRef}\n            src={currentAudio?.url}\n            onTimeUpdate={handleTimeUpdate}\n            onEnded={handleAudioEnd}\n            onPlay={() => window.dispatchEvent(new Event('audioPlay'))}\n            onPause={() => window.dispatchEvent(new Event('audioStop'))}\n            className=\"hidden\"\n          />\n\n          {/* Barra de Progresso */}\n          <div\n            className=\"h-1 bg-[#404040] rounded-full cursor-pointer mb-2\"\n            onClick={handleProgressClick}\n          >\n            <div\n              className=\"h-full bg-[#e1aa1e] rounded-full\"\n              style={{ width: `${progress}%` }}\n            />\n          </div>\n\n          {/* Tempo */}\n          <div className=\"flex justify-between text-xs text-gray-400 mb-3\">\n            <span>{formatTime(audioRef.current?.currentTime || 0)}</span>\n            <span>{formatTime(audioRef.current?.duration || 0)}</span>\n          </div>\n\n          {/* Próxima Reprodução */}\n          {(() => {\n            const nextInfo = getNextAudioInfo();\n            if (!nextInfo?.nextAudio) return null;\n\n            return (\n              <div className=\"flex justify-end\">\n                <div className=\"text-right bg-[#2d2d2d] px-3 py-1 rounded border border-[#404040]/50\">\n                  <div className=\"text-xs text-gray-400\">\n                    Próximo: {nextInfo.nextAudio.title}\n                  </div>\n                  {nextInfo.timer && (\n                    <div className=\"text-xs text-[#e1aa1e]\">\n                      Em {formatTimeLeft(nextInfo.timer.timeLeft)}\n                    </div>\n                  )}\n                </div>\n              </div>\n            );\n          })()}\n        </div>\n      </div>\n\n      {/* Cabeçalho da Lista */}\n      <div className=\"mb-3 bg-[#2d2d2d] rounded-lg p-2 border border-[#404040] flex justify-between items-center\">\n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-sm text-gray-400 px-2\">Lista de Áudios</span>\n        </div>\n\n        {/* Botão de Upload */}\n        <div className=\"flex items-center\">\n          <label className=\"bg-[#e1aa1e] hover:bg-[#e1aa1e]/80 text-gray-900 px-3 py-1.5 rounded cursor-pointer transition-colors text-sm\">\n            {isUploading ? 'Enviando...' : 'Anexar Áudio'}\n            <input\n              type=\"file\"\n              className=\"hidden\"\n              accept=\"audio/*\"\n              onChange={handleUpload}\n              disabled={isUploading}\n            />\n          </label>\n        </div>\n      </div>\n\n      {/* Lista de Áudios */}\n      <div className=\"space-y-2 max-h-[400px] overflow-y-auto\">\n        <div className=\"text-xs text-gray-400 italic mb-2 px-2\">\n          Clique no ícone de edição ou dê um duplo clique no nome para renomear\n        </div>\n\n        {audios.map((audio) => (\n          <div\n            key={audio.id}\n            className=\"flex items-center gap-3 p-2 rounded-lg hover:bg-[#2d2d2d] transition-colors min-w-0 bg-[#1e1e1e] mb-2\"\n          >\n            <button\n              onClick={() => togglePlay(audio)}\n              className=\"p-1 hover:bg-[#404040] rounded-full transition-colors\"\n            >\n              <svg\n                className=\"w-6 h-6 text-[#e1aa1e]\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                {isPlaying && currentAudio?.id === audio.id ? (\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                ) : (\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                )}\n              </svg>\n            </button>\n\n            {editingAudioId === audio.id ? (\n                    <input\n                type=\"text\"\n                value={editingTitle}\n                onChange={(e) => setEditingTitle(e.target.value)}\n                onBlur={() => {\n                  if (editingTitle.trim() && editingTitle !== audio.title) {\n                    handleUpdateTitle(audio.id, editingTitle);\n                  } else {\n                    setEditingAudioId(null);\n                  }\n                }}\n                      onKeyDown={(e) => {\n                        if (e.key === 'Enter') {\n                    if (editingTitle.trim() && editingTitle !== audio.title) {\n                      handleUpdateTitle(audio.id, editingTitle);\n                    } else {\n                      setEditingAudioId(null);\n                    }\n                  } else if (e.key === 'Escape') {\n                    setEditingAudioId(null);\n                  }\n                }}\n                className=\"flex-1 bg-[#1e1e1e] text-gray-200 px-2 py-1 rounded border border-[#404040] focus:border-[#e1aa1e] focus:outline-none\"\n                      autoFocus\n              />\n            ) : (\n              <div className=\"flex-1 flex items-center group\">\n                <div className=\"flex-1 flex items-center\">\n                <span \n                    className=\"truncate cursor-pointer hover:text-[#e1aa1e]\"\n                  onDoubleClick={() => {\n                    setEditingAudioId(audio.id);\n                    setEditingTitle(audio.title);\n                  }}\n                >\n                  {audio.title}\n                </span>\n                <button\n                  onClick={() => {\n                    setEditingAudioId(audio.id);\n                    setEditingTitle(audio.title);\n                  }}\n                    className=\"p-1 rounded-full hover:bg-[#404040] opacity-0 group-hover:opacity-100 transition-all ml-1\"\n                  title=\"Editar nome\"\n                >\n                  <svg\n                      className=\"w-4 h-4 text-[#e1aa1e]\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                    />\n                  </svg>\n                </button>\n                </div>\n              </div>\n            )}\n            \n            <div className=\"flex items-center gap-2 shrink-0\">\n                {audioTimers[audio.id] ? (\n                    <button\n                    onClick={(e) => {\n                      handleShowConfirmDialog(e, audio.id);\n                    }}\n                    className=\"flex items-center gap-1.5 px-2 py-1 rounded bg-[#e1aa1e]/10 text-[#e1aa1e] hover:bg-[#e1aa1e]/20 transition-colors\"\n                    title=\"Clique para desativar a repetição\"\n                  >\n                    <svg\n                      className=\"w-4 h-4\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                      />\n                    </svg>\n                    <span className=\"text-sm\">\n                      {formatTimeLeft(audioTimers[audio.id].timeLeft)}\n                    </span>\n                    </button>\n                ) : (\n                    <button\n                    onClick={(e) => {\n                      handleShowTimerDialog(e, audio.id);\n                    }}\n                    className=\"p-1.5 hover:bg-[#404040] rounded transition-colors text-gray-400 hover:text-[#e1aa1e]\"\n                    title=\"Ativar repetição automática\"\n                    >\n                      <svg\n                      className=\"w-4 h-4\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                        />\n                      </svg>\n                    </button>\n                )}\n\n              <button\n                onClick={(e) => {\n                  setDeletePosition({ x: e.currentTarget.getBoundingClientRect().x, y: e.currentTarget.getBoundingClientRect().y + 30 });\n                  setShowDeleteConfirm(audio.id);\n                }}\n                className=\"p-1 hover:bg-[#404040] rounded-full transition-colors text-red-400 hover:text-red-300\"\n                title=\"Excluir áudio\"\n              >\n                <svg\n                  className=\"w-5 h-5\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                  />\n                </svg>\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {showTimerDialog && (\n        <SetTimerDialog\n          audioId={showTimerDialog}\n          audioTitle={audios.find(a => a.id === showTimerDialog)?.title || ''}\n          onConfirm={(minutes) => {\n            startRepeatTimer(showTimerDialog, minutes);\n            setShowTimerDialog(null);\n            setPopupPosition(null);\n            setTimerInputValue('');\n          }}\n          onCancel={() => {\n            setShowTimerDialog(null);\n            setPopupPosition(null);\n            setTimerInputValue('');\n          }}\n          buttonPosition={popupPosition}\n          inputValue={timerInputValue}\n          onInputChange={setTimerInputValue}\n        />\n      )}\n\n      {showConfirmDialog && (\n        <ConfirmDialog\n          audioId={showConfirmDialog}\n          onConfirm={() => {\n            stopRepeatTimer(showConfirmDialog);\n            setShowConfirmDialog(null);\n            setConfirmPosition(null);\n          }}\n          onEdit={() => {\n            setShowConfirmDialog(null);\n            setConfirmPosition(null);\n            // Abre o diálogo de timer com a posição atual\n            setPopupPosition(confirmPosition);\n            setShowTimerDialog(showConfirmDialog);\n          }}\n          onCancel={() => {\n            setShowConfirmDialog(null);\n            setConfirmPosition(null);\n          }}\n          buttonPosition={confirmPosition}\n        />\n      )}\n\n      {showDeleteConfirm && (\n        <DeleteConfirmDialog\n          audioId={showDeleteConfirm}\n          onConfirm={() => {\n            handleDelete(showDeleteConfirm);\n            setShowDeleteConfirm(null);\n            setDeletePosition(null);\n          }}\n          onCancel={() => {\n            setShowDeleteConfirm(null);\n            setDeletePosition(null);\n          }}\n          buttonPosition={deletePosition}\n        />\n      )}\n    </div>\n    \n  );\n};\n\nexport default AudioPlayer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}