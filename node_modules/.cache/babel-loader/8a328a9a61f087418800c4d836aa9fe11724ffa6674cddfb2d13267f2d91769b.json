{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genil\\\\Desktop\\\\Dev Sistema academia\\\\src\\\\components\\\\VideoPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { videoService } from '../lib/supabase';\nimport VideoSidebar from './VideoSidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = ({\n  onEnded,\n  isPlaying,\n  setIsPlaying,\n  pendingVideoId\n}) => {\n  _s();\n  var _videos$2;\n  const [videos, setVideos] = useState([]);\n  const [newVideoUrl, setNewVideoUrl] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [player, setPlayer] = useState(null);\n  const [isPlayerReady, setIsPlayerReady] = useState(false);\n  useEffect(() => {\n    loadVideos();\n  }, []);\n  const loadYouTubeAPI = () => {\n    return new Promise(resolve => {\n      var _firstScriptTag$paren;\n      const existingScript = document.querySelector('script[src=\"https://www.youtube.com/iframe_api\"]');\n      if (existingScript) {\n        if (window.YT && window.YT.Player) {\n          resolve();\n          return;\n        }\n      }\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n      tag.async = true;\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      (_firstScriptTag$paren = firstScriptTag.parentNode) === null || _firstScriptTag$paren === void 0 ? void 0 : _firstScriptTag$paren.insertBefore(tag, firstScriptTag);\n      window.onYouTubeIframeAPIReady = () => {\n        resolve();\n      };\n    });\n  };\n  const initializePlayer = async () => {\n    try {\n      var _videos$;\n      await loadYouTubeAPI();\n      if (!document.getElementById('youtube-player')) {\n        return;\n      }\n      const newPlayer = new window.YT.Player('youtube-player', {\n        height: '100%',\n        width: '100%',\n        videoId: getVideoIdFromUrl((selectedVideo === null || selectedVideo === void 0 ? void 0 : selectedVideo.url) || ((_videos$ = videos[0]) === null || _videos$ === void 0 ? void 0 : _videos$.url)),\n        playerVars: {\n          autoplay: isPlaying ? 1 : 0,\n          controls: 1,\n          rel: 0,\n          modestbranding: 1,\n          playsinline: 1\n        },\n        events: {\n          onReady: event => {\n            setPlayer(event.target);\n            setIsPlayerReady(true);\n            if (isPlaying) {\n              event.target.playVideo();\n            }\n          },\n          onStateChange: event => {\n            if (event.data === window.YT.PlayerState.ENDED) {\n              onEnded();\n            }\n          }\n        }\n      });\n    } catch (error) {\n      // Silenciosamente lida com o erro\n    }\n  };\n  const getVideoIdFromUrl = url => {\n    if (!url) return '';\n    try {\n      if (url.includes('youtube.com/embed/')) {\n        return url.split('/embed/')[1].split('?')[0];\n      }\n      if (url.includes('youtube.com/watch?v=')) {\n        return url.split('v=')[1].split('&')[0];\n      }\n      if (url.includes('youtu.be/')) {\n        return url.split('youtu.be/')[1].split('?')[0];\n      }\n      return '';\n    } catch (error) {\n      return '';\n    }\n  };\n  useEffect(() => {\n    initializePlayer();\n    return () => {\n      if (player) {\n        player.destroy();\n      }\n      delete window.onYouTubeIframeAPIReady;\n    };\n  }, []);\n  const loadVideos = async () => {\n    try {\n      const data = await videoService.getRecentVideos();\n      setVideos(data);\n    } catch (error) {\n      console.error('Erro ao carregar vídeos:', error);\n    }\n  };\n\n  // Função para converter URL do YouTube em formato embed\n  const getEmbedUrl = url => {\n    console.log('URL original:', url);\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        var _url$split$, _url$split$2;\n        const videoId = url.includes('youtube.com') ? (_url$split$ = url.split('v=')[1]) === null || _url$split$ === void 0 ? void 0 : _url$split$.split('&')[0] : (_url$split$2 = url.split('youtu.be/')[1]) === null || _url$split$2 === void 0 ? void 0 : _url$split$2.split('?')[0];\n        const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      if (url.includes('vimeo.com')) {\n        var _url$split$3;\n        const videoId = (_url$split$3 = url.split('vimeo.com/')[1]) === null || _url$split$3 === void 0 ? void 0 : _url$split$3.split('?')[0];\n        const embedUrl = `https://player.vimeo.com/video/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      return url;\n    } catch (error) {\n      console.error('Erro ao processar URL:', error);\n      return url;\n    }\n  };\n\n  // Função para extrair título do vídeo do YouTube\n  const getVideoTitle = async url => {\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        var _url$split$4, _url$split$5, _data$items$, _data$items$$snippet;\n        const videoId = url.includes('youtube.com') ? (_url$split$4 = url.split('v=')[1]) === null || _url$split$4 === void 0 ? void 0 : _url$split$4.split('&')[0] : (_url$split$5 = url.split('youtu.be/')[1]) === null || _url$split$5 === void 0 ? void 0 : _url$split$5.split('?')[0];\n        const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=AIzaSyAyTc_jYQSVM_3kg95t8ai3CWckZGG0v4c&part=snippet`);\n        const data = await response.json();\n        if (data.error) {\n          console.error('Erro da API do YouTube:', data.error);\n          return 'Vídeo do YouTube';\n        }\n        return ((_data$items$ = data.items[0]) === null || _data$items$ === void 0 ? void 0 : (_data$items$$snippet = _data$items$.snippet) === null || _data$items$$snippet === void 0 ? void 0 : _data$items$$snippet.title) || 'Vídeo do YouTube';\n      }\n      if (url.includes('vimeo.com')) {\n        var _url$split$6, _data$;\n        const videoId = (_url$split$6 = url.split('vimeo.com/')[1]) === null || _url$split$6 === void 0 ? void 0 : _url$split$6.split('?')[0];\n        const response = await fetch(`https://vimeo.com/api/v2/video/${videoId}.json`);\n        const data = await response.json();\n        return ((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.title) || 'Vídeo do Vimeo';\n      }\n      return 'Vídeo';\n    } catch (error) {\n      console.error('Erro ao obter título do vídeo:', error);\n      return 'Vídeo';\n    }\n  };\n  const handleAddVideo = async e => {\n    if (e) e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    if (!newVideoUrl.trim()) {\n      setError('Por favor, insira uma URL válida');\n      setIsLoading(false);\n      return;\n    }\n    try {\n      const embedUrl = getEmbedUrl(newVideoUrl);\n      const videoTitle = await getVideoTitle(newVideoUrl);\n      const newVideo = await videoService.addVideo(embedUrl, videoTitle);\n      setVideos(prev => [newVideo, ...prev]);\n      setNewVideoUrl('');\n      setSelectedVideo(newVideo);\n    } catch (error) {\n      console.error('Erro detalhado:', error);\n      setError(error.message || error.error_description || 'Erro ao adicionar vídeo. Verifique se a URL é válida.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDelete = async videoId => {\n    try {\n      await videoService.deleteVideo(videoId);\n      setVideos(prev => prev.filter(video => video.id !== videoId));\n    } catch (error) {\n      console.error('Erro ao deletar vídeo:', error);\n    }\n  };\n  const handleVideoSelect = video => {\n    setSelectedVideo(video);\n    setIsSidebarOpen(false);\n  };\n  const handlePlayerReady = event => {\n    console.log('Player pronto');\n    if (isPlaying) {\n      console.log('Iniciando reprodução automática');\n      event.target.playVideo();\n    }\n  };\n  const handleStateChange = event => {\n    console.log('Estado do vídeo mudou:', event.data);\n    if (event.data === 0) {\n      // vídeo terminou\n      console.log('Vídeo terminou');\n      setIsPlaying(false);\n      // Dispara evento de fim\n      window.dispatchEvent(new Event('externalMediaStop'));\n\n      // Se houver um vídeo pendente, seleciona ele\n      if (pendingVideoId) {\n        const pendingVideo = videos.find(v => v.id === pendingVideoId);\n        if (pendingVideo) {\n          console.log('Reproduzindo vídeo pendente:', pendingVideo.id);\n          setSelectedVideo(pendingVideo);\n          setIsPlaying(true);\n        }\n      }\n      onEnded();\n    } else if (event.data === 1) {\n      // vídeo começou a tocar\n      console.log('Vídeo começou a tocar');\n      setIsPlaying(true);\n      // Dispara evento de início\n      window.dispatchEvent(new Event('externalMediaPlay'));\n    } else if (event.data === 2) {\n      // vídeo foi pausado\n      console.log('Vídeo pausado');\n      setIsPlaying(false);\n      // Dispara evento de fim\n      window.dispatchEvent(new Event('externalMediaStop'));\n    }\n  };\n\n  // Função para extrair videoId do YouTube\n  const extractVideoId = (url = '') => {\n    try {\n      if (!url) return '';\n      let videoId = '';\n      if (url.includes('youtube.com/embed/')) {\n        var _url$split$7;\n        videoId = (_url$split$7 = url.split('embed/')[1]) === null || _url$split$7 === void 0 ? void 0 : _url$split$7.split('?')[0];\n      } else if (url.includes('youtube.com/watch')) {\n        var _url$split$8;\n        videoId = (_url$split$8 = url.split('v=')[1]) === null || _url$split$8 === void 0 ? void 0 : _url$split$8.split('&')[0];\n      } else if (url.includes('youtu.be/')) {\n        var _url$split$9;\n        videoId = (_url$split$9 = url.split('youtu.be/')[1]) === null || _url$split$9 === void 0 ? void 0 : _url$split$9.split('?')[0];\n      }\n      console.log('Extraído videoId:', videoId, 'da URL:', url);\n      return videoId;\n    } catch (error) {\n      console.error('Erro ao extrair videoId:', error);\n      return '';\n    }\n  };\n\n  // Adicione esta função para controlar o fade do volume do iframe\n  const fadeIframeVolume = (start, end, duration) => {\n    if (!player || !isPlayerReady) return;\n    const steps = 20;\n    const stepValue = (end - start) / steps;\n    const stepDuration = duration / steps;\n    let currentStep = 0;\n    const fadeInterval = setInterval(() => {\n      currentStep++;\n      const newVolume = start + stepValue * currentStep;\n      const volume = Math.min(Math.max(newVolume, 0), 1) * 100;\n      player.setVolume(volume);\n      if (currentStep >= steps) {\n        clearInterval(fadeInterval);\n      }\n    }, stepDuration);\n  };\n\n  // Adicione este useEffect para escutar eventos de áudio\n  useEffect(() => {\n    const handleAudioPlay = () => {\n      console.log('Áudio começou a tocar, tentando diminuir volume do vídeo');\n      if (isPlayerReady) {\n        fadeIframeVolume(1, 0.10, 500);\n      } else {\n        console.log('Player não está pronto para ajustar volume');\n      }\n    };\n    const handleAudioStop = () => {\n      console.log('Áudio parou, tentando restaurar volume do vídeo');\n      if (isPlayerReady) {\n        fadeIframeVolume(0.10, 1, 500);\n      } else {\n        console.log('Player não está pronto para ajustar volume');\n      }\n    };\n    window.addEventListener('audioPlay', handleAudioPlay);\n    window.addEventListener('audioStop', handleAudioStop);\n    return () => {\n      window.removeEventListener('audioPlay', handleAudioPlay);\n      window.removeEventListener('audioStop', handleAudioStop);\n    };\n  }, [isPlayerReady]);\n\n  // Adicione um useEffect para reinicializar o player quando o vídeo mudar\n  useEffect(() => {\n    if (selectedVideo || videos[0]) {\n      console.log('Vídeo mudou, reinicializando player...');\n      setPlayer(null);\n      setIsPlayerReady(false);\n      initializePlayer();\n    }\n  }, [selectedVideo === null || selectedVideo === void 0 ? void 0 : selectedVideo.url, (_videos$2 = videos[0]) === null || _videos$2 === void 0 ? void 0 : _videos$2.url]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddVideo,\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          value: newVideoUrl,\n          onChange: e => setNewVideoUrl(e.target.value),\n          placeholder: \"Cole a URL do YouTube ou Vimeo aqui\",\n          className: \"w-full bg-[#2d2d2d] border border-[#404040] text-gray-200 rounded px-3 py-2 focus:border-[#e1aa1e] focus:outline-none\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-400 text-sm\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleAddVideo(),\n        className: `flex-1 ${isLoading ? 'bg-[#e1aa1e]/50 cursor-not-allowed' : 'bg-[#e1aa1e] hover:bg-[#e1aa1e]/80'} text-gray-900 px-3 py-1.5 rounded transition-colors flex items-center justify-center gap-2`,\n        disabled: isLoading,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-4 h-4\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M12 4v16m8-8H4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), isLoading ? 'Adicionando...' : 'Buscar Vídeo']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setIsSidebarOpen(true),\n        className: \"flex-1 bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-3 py-1.5 rounded flex items-center justify-center gap-2 transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-4 h-4\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M4 6h16M4 12h16M4 18h16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), \"\\xDAltimos V\\xEDdeos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: selectedVideo || videos[0] ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-lg overflow-hidden border border-[#404040]\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative pt-[56.25%]\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"youtube-player\",\n            className: \"absolute top-0 left-0 w-full h-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-6 text-gray-400 bg-[#2d2d2d] rounded-lg border border-[#404040]\",\n        children: \"Nenhum v\\xEDdeo dispon\\xEDvel. Adicione um v\\xEDdeo para come\\xE7ar.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoSidebar, {\n      isOpen: isSidebarOpen,\n      onClose: () => setIsSidebarOpen(false),\n      videos: videos,\n      onVideoSelect: handleVideoSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"5sD5dTzV0Iive0cdBB1NXFJ+UJA=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","videoService","VideoSidebar","jsxDEV","_jsxDEV","VideoPlayer","onEnded","isPlaying","setIsPlaying","pendingVideoId","_s","_videos$2","videos","setVideos","newVideoUrl","setNewVideoUrl","error","setError","isLoading","setIsLoading","isSidebarOpen","setIsSidebarOpen","selectedVideo","setSelectedVideo","player","setPlayer","isPlayerReady","setIsPlayerReady","loadVideos","loadYouTubeAPI","Promise","resolve","_firstScriptTag$paren","existingScript","document","querySelector","window","YT","Player","tag","createElement","src","async","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","initializePlayer","_videos$","getElementById","newPlayer","height","width","videoId","getVideoIdFromUrl","url","playerVars","autoplay","controls","rel","modestbranding","playsinline","events","onReady","event","target","playVideo","onStateChange","data","PlayerState","ENDED","includes","split","destroy","getRecentVideos","console","getEmbedUrl","log","_url$split$","_url$split$2","embedUrl","_url$split$3","getVideoTitle","_url$split$4","_url$split$5","_data$items$","_data$items$$snippet","response","fetch","json","items","snippet","title","_url$split$6","_data$","handleAddVideo","e","preventDefault","trim","videoTitle","newVideo","addVideo","prev","message","error_description","handleDelete","deleteVideo","filter","video","id","handleVideoSelect","handlePlayerReady","handleStateChange","dispatchEvent","Event","pendingVideo","find","v","extractVideoId","_url$split$7","_url$split$8","_url$split$9","fadeIframeVolume","start","end","duration","steps","stepValue","stepDuration","currentStep","fadeInterval","setInterval","newVolume","volume","Math","min","max","setVolume","clearInterval","handleAudioPlay","handleAudioStop","addEventListener","removeEventListener","className","children","onSubmit","type","value","onChange","placeholder","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","isOpen","onClose","onVideoSelect","_c","$RefreshReg$"],"sources":["C:/Users/genil/Desktop/Dev Sistema academia/src/components/VideoPlayer.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { videoService, VideoData } from '../lib/supabase';\nimport VideoSidebar from './VideoSidebar';\n\ninterface VideoPlayerProps {\n  onEnded: () => void;\n  isPlaying: boolean;\n  setIsPlaying: (playing: boolean) => void;\n  pendingVideoId?: string;\n}\n\nconst VideoPlayer: React.FC<VideoPlayerProps> = ({ onEnded, isPlaying, setIsPlaying, pendingVideoId }) => {\n  const [videos, setVideos] = useState<VideoData[]>([]);\n  const [newVideoUrl, setNewVideoUrl] = useState('');\n  const [error, setError] = useState<string>('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [selectedVideo, setSelectedVideo] = useState<VideoData | null>(null);\n  const [player, setPlayer] = useState<any>(null);\n  const [isPlayerReady, setIsPlayerReady] = useState(false);\n\n  useEffect(() => {\n    loadVideos();\n  }, []);\n\n  const loadYouTubeAPI = () => {\n    return new Promise<void>((resolve) => {\n      const existingScript = document.querySelector('script[src=\"https://www.youtube.com/iframe_api\"]');\n      if (existingScript) {\n        if ((window as any).YT && (window as any).YT.Player) {\n          resolve();\n          return;\n        }\n      }\n\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n      tag.async = true;\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode?.insertBefore(tag, firstScriptTag);\n\n      (window as any).onYouTubeIframeAPIReady = () => {\n        resolve();\n      };\n    });\n  };\n\n  const initializePlayer = async () => {\n    try {\n      await loadYouTubeAPI();\n      \n      if (!document.getElementById('youtube-player')) {\n        return;\n      }\n\n      const newPlayer = new (window as any).YT.Player('youtube-player', {\n        height: '100%',\n        width: '100%',\n        videoId: getVideoIdFromUrl(selectedVideo?.url || videos[0]?.url),\n        playerVars: {\n          autoplay: isPlaying ? 1 : 0,\n          controls: 1,\n          rel: 0,\n          modestbranding: 1,\n          playsinline: 1\n        },\n        events: {\n          onReady: (event: any) => {\n            setPlayer(event.target);\n            setIsPlayerReady(true);\n            if (isPlaying) {\n              event.target.playVideo();\n            }\n          },\n          onStateChange: (event: any) => {\n            if (event.data === (window as any).YT.PlayerState.ENDED) {\n              onEnded();\n            }\n          }\n        }\n      });\n    } catch (error) {\n      // Silenciosamente lida com o erro\n    }\n  };\n\n  const getVideoIdFromUrl = (url?: string): string => {\n    if (!url) return '';\n    \n    try {\n      if (url.includes('youtube.com/embed/')) {\n        return url.split('/embed/')[1].split('?')[0];\n      }\n      if (url.includes('youtube.com/watch?v=')) {\n        return url.split('v=')[1].split('&')[0];\n      }\n      if (url.includes('youtu.be/')) {\n        return url.split('youtu.be/')[1].split('?')[0];\n      }\n      return '';\n    } catch (error) {\n      return '';\n    }\n  };\n\n  useEffect(() => {\n    initializePlayer();\n\n    return () => {\n      if (player) {\n        player.destroy();\n      }\n      delete (window as any).onYouTubeIframeAPIReady;\n    };\n  }, []);\n\n  const loadVideos = async () => {\n    try {\n      const data = await videoService.getRecentVideos();\n      setVideos(data);\n    } catch (error) {\n      console.error('Erro ao carregar vídeos:', error);\n    }\n  };\n\n  // Função para converter URL do YouTube em formato embed\n  const getEmbedUrl = (url: string) => {\n    console.log('URL original:', url);\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        const videoId = url.includes('youtube.com') \n          ? url.split('v=')[1]?.split('&')[0]\n          : url.split('youtu.be/')[1]?.split('?')[0];\n        \n        const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      if (url.includes('vimeo.com')) {\n        const videoId = url.split('vimeo.com/')[1]?.split('?')[0];\n        const embedUrl = `https://player.vimeo.com/video/${videoId}`;\n        console.log('URL convertida:', embedUrl);\n        return embedUrl;\n      }\n      return url;\n    } catch (error) {\n      console.error('Erro ao processar URL:', error);\n      return url;\n    }\n  };\n\n  // Função para extrair título do vídeo do YouTube\n  const getVideoTitle = async (url: string): Promise<string> => {\n    try {\n      if (url.includes('youtube.com') || url.includes('youtu.be')) {\n        const videoId = url.includes('youtube.com')\n          ? url.split('v=')[1]?.split('&')[0]\n          : url.split('youtu.be/')[1]?.split('?')[0];\n        \n        const response = await fetch(\n          `https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=AIzaSyAyTc_jYQSVM_3kg95t8ai3CWckZGG0v4c&part=snippet`\n        );\n        const data = await response.json();\n        \n        if (data.error) {\n          console.error('Erro da API do YouTube:', data.error);\n          return 'Vídeo do YouTube';\n        }\n\n        return data.items[0]?.snippet?.title || 'Vídeo do YouTube';\n      }\n      \n      if (url.includes('vimeo.com')) {\n        const videoId = url.split('vimeo.com/')[1]?.split('?')[0];\n        const response = await fetch(`https://vimeo.com/api/v2/video/${videoId}.json`);\n        const data = await response.json();\n        return data[0]?.title || 'Vídeo do Vimeo';\n      }\n      \n      return 'Vídeo';\n    } catch (error) {\n      console.error('Erro ao obter título do vídeo:', error);\n      return 'Vídeo';\n    }\n  };\n\n  const handleAddVideo = async (e?: React.FormEvent) => {\n    if (e) e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    \n    if (!newVideoUrl.trim()) {\n      setError('Por favor, insira uma URL válida');\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      const embedUrl = getEmbedUrl(newVideoUrl);\n      const videoTitle = await getVideoTitle(newVideoUrl);\n      \n      const newVideo = await videoService.addVideo(embedUrl, videoTitle);\n      setVideos(prev => [newVideo, ...prev]);\n      setNewVideoUrl('');\n      setSelectedVideo(newVideo);\n    } catch (error: any) {\n      console.error('Erro detalhado:', error);\n      setError(\n        error.message || \n        error.error_description || \n        'Erro ao adicionar vídeo. Verifique se a URL é válida.'\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDelete = async (videoId: string) => {\n    try {\n      await videoService.deleteVideo(videoId);\n      setVideos(prev => prev.filter(video => video.id !== videoId));\n    } catch (error) {\n      console.error('Erro ao deletar vídeo:', error);\n    }\n  };\n\n  const handleVideoSelect = (video: VideoData) => {\n    setSelectedVideo(video);\n    setIsSidebarOpen(false);\n  };\n\n  const handlePlayerReady = (event: any) => {\n    console.log('Player pronto');\n    if (isPlaying) {\n      console.log('Iniciando reprodução automática');\n      event.target.playVideo();\n    }\n  };\n\n  const handleStateChange = (event: any) => {\n    console.log('Estado do vídeo mudou:', event.data);\n    \n    if (event.data === 0) { // vídeo terminou\n      console.log('Vídeo terminou');\n      setIsPlaying(false);\n      // Dispara evento de fim\n      window.dispatchEvent(new Event('externalMediaStop'));\n      \n      // Se houver um vídeo pendente, seleciona ele\n      if (pendingVideoId) {\n        const pendingVideo = videos.find(v => v.id === pendingVideoId);\n        if (pendingVideo) {\n          console.log('Reproduzindo vídeo pendente:', pendingVideo.id);\n          setSelectedVideo(pendingVideo);\n          setIsPlaying(true);\n        }\n      }\n      \n      onEnded();\n    } else if (event.data === 1) { // vídeo começou a tocar\n      console.log('Vídeo começou a tocar');\n      setIsPlaying(true);\n      // Dispara evento de início\n      window.dispatchEvent(new Event('externalMediaPlay'));\n    } else if (event.data === 2) { // vídeo foi pausado\n      console.log('Vídeo pausado');\n      setIsPlaying(false);\n      // Dispara evento de fim\n      window.dispatchEvent(new Event('externalMediaStop'));\n    }\n  };\n\n  // Função para extrair videoId do YouTube\n  const extractVideoId = (url: string = '') => {\n    try {\n      if (!url) return '';\n      \n      let videoId = '';\n      \n      if (url.includes('youtube.com/embed/')) {\n        videoId = url.split('embed/')[1]?.split('?')[0];\n      } else if (url.includes('youtube.com/watch')) {\n        videoId = url.split('v=')[1]?.split('&')[0];\n      } else if (url.includes('youtu.be/')) {\n        videoId = url.split('youtu.be/')[1]?.split('?')[0];\n      }\n\n      console.log('Extraído videoId:', videoId, 'da URL:', url);\n      return videoId;\n    } catch (error) {\n      console.error('Erro ao extrair videoId:', error);\n      return '';\n    }\n  };\n\n  // Adicione esta função para controlar o fade do volume do iframe\n  const fadeIframeVolume = (start: number, end: number, duration: number) => {\n    if (!player || !isPlayerReady) return;\n\n    const steps = 20;\n    const stepValue = (end - start) / steps;\n    const stepDuration = duration / steps;\n    let currentStep = 0;\n\n    const fadeInterval = setInterval(() => {\n      currentStep++;\n      const newVolume = start + (stepValue * currentStep);\n      const volume = Math.min(Math.max(newVolume, 0), 1) * 100;\n      player.setVolume(volume);\n\n      if (currentStep >= steps) {\n        clearInterval(fadeInterval);\n      }\n    }, stepDuration);\n  };\n\n  // Adicione este useEffect para escutar eventos de áudio\n  useEffect(() => {\n    const handleAudioPlay = () => {\n      console.log('Áudio começou a tocar, tentando diminuir volume do vídeo');\n      if (isPlayerReady) {\n        fadeIframeVolume(1, 0.10, 500);\n      } else {\n        console.log('Player não está pronto para ajustar volume');\n      }\n    };\n\n    const handleAudioStop = () => {\n      console.log('Áudio parou, tentando restaurar volume do vídeo');\n      if (isPlayerReady) {\n        fadeIframeVolume(0.10, 1, 500);\n      } else {\n        console.log('Player não está pronto para ajustar volume');\n      }\n    };\n\n    window.addEventListener('audioPlay', handleAudioPlay);\n    window.addEventListener('audioStop', handleAudioStop);\n\n    return () => {\n      window.removeEventListener('audioPlay', handleAudioPlay);\n      window.removeEventListener('audioStop', handleAudioStop);\n    };\n  }, [isPlayerReady]);\n\n  // Adicione um useEffect para reinicializar o player quando o vídeo mudar\n  useEffect(() => {\n    if (selectedVideo || videos[0]) {\n      console.log('Vídeo mudou, reinicializando player...');\n      setPlayer(null);\n      setIsPlayerReady(false);\n      initializePlayer();\n    }\n  }, [selectedVideo?.url, videos[0]?.url]);\n\n  return (\n    <div className=\"bg-[#1e1e1e] text-gray-300 rounded-lg shadow-lg p-3\">\n      {/* Formulário de busca */}\n      <form onSubmit={handleAddVideo} className=\"mb-3\">\n        <div className=\"flex flex-col gap-2\">\n          <input\n            type=\"url\"\n            value={newVideoUrl}\n            onChange={(e) => setNewVideoUrl(e.target.value)}\n            placeholder=\"Cole a URL do YouTube ou Vimeo aqui\"\n            className=\"w-full bg-[#2d2d2d] border border-[#404040] text-gray-200 rounded px-3 py-2 focus:border-[#e1aa1e] focus:outline-none\"\n            disabled={isLoading}\n          />\n          {error && <p className=\"text-red-400 text-sm\">{error}</p>}\n        </div>\n      </form>\n\n      {/* Botões de ação */}\n      <div className=\"flex gap-2 mb-3\">\n        <button\n          type=\"button\"\n          onClick={() => handleAddVideo()}\n          className={`flex-1 ${\n            isLoading \n              ? 'bg-[#e1aa1e]/50 cursor-not-allowed' \n              : 'bg-[#e1aa1e] hover:bg-[#e1aa1e]/80'\n          } text-gray-900 px-3 py-1.5 rounded transition-colors flex items-center justify-center gap-2`}\n          disabled={isLoading}\n        >\n          <svg\n            className=\"w-4 h-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M12 4v16m8-8H4\"\n            />\n          </svg>\n          {isLoading ? 'Adicionando...' : 'Buscar Vídeo'}\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsSidebarOpen(true)}\n          className=\"flex-1 bg-[#2d2d2d] hover:bg-[#404040] border border-[#404040] text-[#e1aa1e] px-3 py-1.5 rounded flex items-center justify-center gap-2 transition-colors\"\n        >\n          <svg\n            className=\"w-4 h-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M4 6h16M4 12h16M4 18h16\"\n            />\n          </svg>\n          Últimos Vídeos\n        </button>\n      </div>\n\n      {/* Área do vídeo */}\n      <div>\n        {(selectedVideo || videos[0]) ? (\n          <div className=\"rounded-lg overflow-hidden border border-[#404040]\">\n            <div className=\"relative pt-[56.25%]\">\n              <div id=\"youtube-player\" className=\"absolute top-0 left-0 w-full h-full\" />\n            </div>\n          </div>\n        ) : (\n          <div className=\"text-center p-6 text-gray-400 bg-[#2d2d2d] rounded-lg border border-[#404040]\">\n            Nenhum vídeo disponível. Adicione um vídeo para começar.\n          </div>\n        )}\n      </div>\n\n      {/* Menu lateral */}\n      <VideoSidebar\n        isOpen={isSidebarOpen}\n        onClose={() => setIsSidebarOpen(false)}\n        videos={videos}\n        onVideoSelect={handleVideoSelect}\n      />\n    </div>\n  );\n};\n\nexport default VideoPlayer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}